/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 29214.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 3.0], [2.0, 3.0], [2.1, 3.0], [2.2, 3.0], [2.3, 3.0], [2.4, 3.0], [2.5, 3.0], [2.6, 3.0], [2.7, 3.0], [2.8, 3.0], [2.9, 3.0], [3.0, 3.0], [3.1, 3.0], [3.2, 3.0], [3.3, 3.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 8.0], [5.5, 8.0], [5.6, 8.0], [5.7, 9.0], [5.8, 9.0], [5.9, 10.0], [6.0, 10.0], [6.1, 10.0], [6.2, 10.0], [6.3, 10.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 12.0], [6.8, 12.0], [6.9, 13.0], [7.0, 13.0], [7.1, 13.0], [7.2, 14.0], [7.3, 15.0], [7.4, 15.0], [7.5, 15.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 16.0], [8.1, 18.0], [8.2, 19.0], [8.3, 19.0], [8.4, 20.0], [8.5, 21.0], [8.6, 21.0], [8.7, 21.0], [8.8, 22.0], [8.9, 22.0], [9.0, 23.0], [9.1, 23.0], [9.2, 24.0], [9.3, 28.0], [9.4, 29.0], [9.5, 31.0], [9.6, 33.0], [9.7, 36.0], [9.8, 41.0], [9.9, 42.0], [10.0, 42.0], [10.1, 50.0], [10.2, 58.0], [10.3, 60.0], [10.4, 65.0], [10.5, 66.0], [10.6, 67.0], [10.7, 67.0], [10.8, 67.0], [10.9, 67.0], [11.0, 69.0], [11.1, 69.0], [11.2, 70.0], [11.3, 70.0], [11.4, 70.0], [11.5, 71.0], [11.6, 72.0], [11.7, 72.0], [11.8, 72.0], [11.9, 73.0], [12.0, 73.0], [12.1, 74.0], [12.2, 74.0], [12.3, 74.0], [12.4, 74.0], [12.5, 75.0], [12.6, 75.0], [12.7, 76.0], [12.8, 76.0], [12.9, 77.0], [13.0, 77.0], [13.1, 77.0], [13.2, 77.0], [13.3, 78.0], [13.4, 79.0], [13.5, 79.0], [13.6, 79.0], [13.7, 80.0], [13.8, 81.0], [13.9, 81.0], [14.0, 81.0], [14.1, 82.0], [14.2, 82.0], [14.3, 83.0], [14.4, 84.0], [14.5, 87.0], [14.6, 87.0], [14.7, 87.0], [14.8, 87.0], [14.9, 88.0], [15.0, 88.0], [15.1, 89.0], [15.2, 91.0], [15.3, 92.0], [15.4, 92.0], [15.5, 92.0], [15.6, 94.0], [15.7, 94.0], [15.8, 94.0], [15.9, 94.0], [16.0, 95.0], [16.1, 97.0], [16.2, 97.0], [16.3, 98.0], [16.4, 99.0], [16.5, 100.0], [16.6, 100.0], [16.7, 100.0], [16.8, 100.0], [16.9, 101.0], [17.0, 101.0], [17.1, 101.0], [17.2, 101.0], [17.3, 103.0], [17.4, 104.0], [17.5, 104.0], [17.6, 104.0], [17.7, 105.0], [17.8, 106.0], [17.9, 106.0], [18.0, 107.0], [18.1, 107.0], [18.2, 108.0], [18.3, 108.0], [18.4, 110.0], [18.5, 112.0], [18.6, 113.0], [18.7, 113.0], [18.8, 113.0], [18.9, 114.0], [19.0, 114.0], [19.1, 116.0], [19.2, 117.0], [19.3, 124.0], [19.4, 132.0], [19.5, 138.0], [19.6, 147.0], [19.7, 147.0], [19.8, 154.0], [19.9, 156.0], [20.0, 156.0], [20.1, 157.0], [20.2, 159.0], [20.3, 163.0], [20.4, 163.0], [20.5, 167.0], [20.6, 178.0], [20.7, 179.0], [20.8, 182.0], [20.9, 185.0], [21.0, 188.0], [21.1, 191.0], [21.2, 192.0], [21.3, 193.0], [21.4, 196.0], [21.5, 196.0], [21.6, 200.0], [21.7, 201.0], [21.8, 201.0], [21.9, 202.0], [22.0, 204.0], [22.1, 209.0], [22.2, 209.0], [22.3, 209.0], [22.4, 213.0], [22.5, 214.0], [22.6, 214.0], [22.7, 214.0], [22.8, 217.0], [22.9, 218.0], [23.0, 219.0], [23.1, 222.0], [23.2, 225.0], [23.3, 226.0], [23.4, 229.0], [23.5, 242.0], [23.6, 264.0], [23.7, 265.0], [23.8, 267.0], [23.9, 269.0], [24.0, 274.0], [24.1, 276.0], [24.2, 279.0], [24.3, 279.0], [24.4, 283.0], [24.5, 283.0], [24.6, 290.0], [24.7, 290.0], [24.8, 293.0], [24.9, 302.0], [25.0, 307.0], [25.1, 309.0], [25.2, 313.0], [25.3, 317.0], [25.4, 323.0], [25.5, 335.0], [25.6, 341.0], [25.7, 372.0], [25.8, 373.0], [25.9, 380.0], [26.0, 381.0], [26.1, 396.0], [26.2, 404.0], [26.3, 416.0], [26.4, 430.0], [26.5, 468.0], [26.6, 468.0], [26.7, 469.0], [26.8, 477.0], [26.9, 477.0], [27.0, 481.0], [27.1, 482.0], [27.2, 491.0], [27.3, 515.0], [27.4, 516.0], [27.5, 521.0], [27.6, 523.0], [27.7, 525.0], [27.8, 527.0], [27.9, 527.0], [28.0, 528.0], [28.1, 530.0], [28.2, 532.0], [28.3, 548.0], [28.4, 553.0], [28.5, 586.0], [28.6, 594.0], [28.7, 595.0], [28.8, 596.0], [28.9, 597.0], [29.0, 597.0], [29.1, 598.0], [29.2, 598.0], [29.3, 599.0], [29.4, 599.0], [29.5, 600.0], [29.6, 606.0], [29.7, 609.0], [29.8, 612.0], [29.9, 614.0], [30.0, 615.0], [30.1, 618.0], [30.2, 619.0], [30.3, 631.0], [30.4, 634.0], [30.5, 674.0], [30.6, 677.0], [30.7, 678.0], [30.8, 688.0], [30.9, 689.0], [31.0, 693.0], [31.1, 694.0], [31.2, 694.0], [31.3, 694.0], [31.4, 697.0], [31.5, 697.0], [31.6, 700.0], [31.7, 703.0], [31.8, 704.0], [31.9, 704.0], [32.0, 704.0], [32.1, 707.0], [32.2, 709.0], [32.3, 710.0], [32.4, 711.0], [32.5, 712.0], [32.6, 713.0], [32.7, 715.0], [32.8, 723.0], [32.9, 726.0], [33.0, 735.0], [33.1, 761.0], [33.2, 764.0], [33.3, 764.0], [33.4, 776.0], [33.5, 777.0], [33.6, 780.0], [33.7, 780.0], [33.8, 785.0], [33.9, 788.0], [34.0, 789.0], [34.1, 790.0], [34.2, 791.0], [34.3, 791.0], [34.4, 791.0], [34.5, 792.0], [34.6, 792.0], [34.7, 792.0], [34.8, 798.0], [34.9, 798.0], [35.0, 801.0], [35.1, 801.0], [35.2, 802.0], [35.3, 802.0], [35.4, 802.0], [35.5, 803.0], [35.6, 804.0], [35.7, 808.0], [35.8, 808.0], [35.9, 817.0], [36.0, 818.0], [36.1, 820.0], [36.2, 822.0], [36.3, 823.0], [36.4, 823.0], [36.5, 839.0], [36.6, 840.0], [36.7, 864.0], [36.8, 865.0], [36.9, 871.0], [37.0, 872.0], [37.1, 872.0], [37.2, 876.0], [37.3, 876.0], [37.4, 877.0], [37.5, 877.0], [37.6, 887.0], [37.7, 893.0], [37.8, 894.0], [37.9, 895.0], [38.0, 904.0], [38.1, 937.0], [38.2, 964.0], [38.3, 978.0], [38.4, 986.0], [38.5, 998.0], [38.6, 1031.0], [38.7, 1043.0], [38.8, 1103.0], [38.9, 1201.0], [39.0, 1205.0], [39.1, 1207.0], [39.2, 1211.0], [39.3, 1231.0], [39.4, 1235.0], [39.5, 1254.0], [39.6, 1255.0], [39.7, 1259.0], [39.8, 1270.0], [39.9, 1270.0], [40.0, 1274.0], [40.1, 1279.0], [40.2, 1282.0], [40.3, 1293.0], [40.4, 1298.0], [40.5, 1298.0], [40.6, 1298.0], [40.7, 1302.0], [40.8, 1309.0], [40.9, 1321.0], [41.0, 1322.0], [41.1, 1343.0], [41.2, 1366.0], [41.3, 1375.0], [41.4, 1378.0], [41.5, 1378.0], [41.6, 1379.0], [41.7, 1384.0], [41.8, 1384.0], [41.9, 1385.0], [42.0, 1390.0], [42.1, 1392.0], [42.2, 1394.0], [42.3, 1396.0], [42.4, 1403.0], [42.5, 1406.0], [42.6, 1406.0], [42.7, 1407.0], [42.8, 1419.0], [42.9, 1420.0], [43.0, 1420.0], [43.1, 1421.0], [43.2, 1424.0], [43.3, 1426.0], [43.4, 1426.0], [43.5, 1437.0], [43.6, 1440.0], [43.7, 1447.0], [43.8, 1457.0], [43.9, 1462.0], [44.0, 1465.0], [44.1, 1475.0], [44.2, 1475.0], [44.3, 1487.0], [44.4, 1487.0], [44.5, 1493.0], [44.6, 1494.0], [44.7, 1495.0], [44.8, 1503.0], [44.9, 1505.0], [45.0, 1508.0], [45.1, 1508.0], [45.2, 1509.0], [45.3, 1513.0], [45.4, 1516.0], [45.5, 1517.0], [45.6, 1520.0], [45.7, 1527.0], [45.8, 1553.0], [45.9, 1555.0], [46.0, 1555.0], [46.1, 1559.0], [46.2, 1577.0], [46.3, 1577.0], [46.4, 1580.0], [46.5, 1581.0], [46.6, 1581.0], [46.7, 1587.0], [46.8, 1588.0], [46.9, 1589.0], [47.0, 1594.0], [47.1, 1595.0], [47.2, 1596.0], [47.3, 1596.0], [47.4, 1597.0], [47.5, 1598.0], [47.6, 1600.0], [47.7, 1602.0], [47.8, 1603.0], [47.9, 1604.0], [48.0, 1644.0], [48.1, 1665.0], [48.2, 1677.0], [48.3, 1678.0], [48.4, 1688.0], [48.5, 1707.0], [48.6, 1712.0], [48.7, 1715.0], [48.8, 1727.0], [48.9, 1730.0], [49.0, 1751.0], [49.1, 1760.0], [49.2, 1769.0], [49.3, 1774.0], [49.4, 1774.0], [49.5, 1776.0], [49.6, 1781.0], [49.7, 1785.0], [49.8, 1795.0], [49.9, 1800.0], [50.0, 1813.0], [50.1, 1813.0], [50.2, 1816.0], [50.3, 1820.0], [50.4, 1820.0], [50.5, 1821.0], [50.6, 1821.0], [50.7, 1840.0], [50.8, 1858.0], [50.9, 1892.0], [51.0, 1895.0], [51.1, 1922.0], [51.2, 1924.0], [51.3, 1975.0], [51.4, 1980.0], [51.5, 1988.0], [51.6, 1989.0], [51.7, 1990.0], [51.8, 1993.0], [51.9, 1994.0], [52.0, 2001.0], [52.1, 2008.0], [52.2, 2025.0], [52.3, 2032.0], [52.4, 2042.0], [52.5, 2058.0], [52.6, 2074.0], [52.7, 2086.0], [52.8, 2087.0], [52.9, 2087.0], [53.0, 2090.0], [53.1, 2091.0], [53.2, 2099.0], [53.3, 2106.0], [53.4, 2110.0], [53.5, 2116.0], [53.6, 2120.0], [53.7, 2134.0], [53.8, 2137.0], [53.9, 2179.0], [54.0, 2184.0], [54.1, 2184.0], [54.2, 2186.0], [54.3, 2189.0], [54.4, 2190.0], [54.5, 2197.0], [54.6, 2198.0], [54.7, 2205.0], [54.8, 2208.0], [54.9, 2216.0], [55.0, 2234.0], [55.1, 2284.0], [55.2, 2296.0], [55.3, 2297.0], [55.4, 2358.0], [55.5, 2390.0], [55.6, 2391.0], [55.7, 2403.0], [55.8, 2431.0], [55.9, 2471.0], [56.0, 2476.0], [56.1, 2481.0], [56.2, 2490.0], [56.3, 2493.0], [56.4, 2520.0], [56.5, 2526.0], [56.6, 2527.0], [56.7, 2532.0], [56.8, 2532.0], [56.9, 2568.0], [57.0, 2573.0], [57.1, 2576.0], [57.2, 2583.0], [57.3, 2590.0], [57.4, 2594.0], [57.5, 2598.0], [57.6, 2601.0], [57.7, 2601.0], [57.8, 2602.0], [57.9, 2602.0], [58.0, 2610.0], [58.1, 2623.0], [58.2, 2636.0], [58.3, 2657.0], [58.4, 2671.0], [58.5, 2674.0], [58.6, 2674.0], [58.7, 2685.0], [58.8, 2686.0], [58.9, 2691.0], [59.0, 2694.0], [59.1, 2701.0], [59.2, 2701.0], [59.3, 2702.0], [59.4, 2704.0], [59.5, 2715.0], [59.6, 2715.0], [59.7, 2717.0], [59.8, 2719.0], [59.9, 2739.0], [60.0, 2768.0], [60.1, 2769.0], [60.2, 2774.0], [60.3, 2776.0], [60.4, 2779.0], [60.5, 2789.0], [60.6, 2793.0], [60.7, 2796.0], [60.8, 2799.0], [60.9, 2800.0], [61.0, 2806.0], [61.1, 2808.0], [61.2, 2813.0], [61.3, 2826.0], [61.4, 2911.0], [61.5, 2928.0], [61.6, 2930.0], [61.7, 2931.0], [61.8, 2947.0], [61.9, 2964.0], [62.0, 2971.0], [62.1, 2987.0], [62.2, 3000.0], [62.3, 3009.0], [62.4, 3015.0], [62.5, 3017.0], [62.6, 3048.0], [62.7, 3055.0], [62.8, 3071.0], [62.9, 3071.0], [63.0, 3083.0], [63.1, 3085.0], [63.2, 3092.0], [63.3, 3096.0], [63.4, 3102.0], [63.5, 3103.0], [63.6, 3130.0], [63.7, 3134.0], [63.8, 3135.0], [63.9, 3159.0], [64.0, 3162.0], [64.1, 3166.0], [64.2, 3166.0], [64.3, 3167.0], [64.4, 3174.0], [64.5, 3176.0], [64.6, 3180.0], [64.7, 3190.0], [64.8, 3190.0], [64.9, 3194.0], [65.0, 3205.0], [65.1, 3209.0], [65.2, 3212.0], [65.3, 3230.0], [65.4, 3230.0], [65.5, 3258.0], [65.6, 3264.0], [65.7, 3266.0], [65.8, 3278.0], [65.9, 3279.0], [66.0, 3279.0], [66.1, 3282.0], [66.2, 3283.0], [66.3, 3285.0], [66.4, 3288.0], [66.5, 3290.0], [66.6, 3291.0], [66.7, 3294.0], [66.8, 3294.0], [66.9, 3296.0], [67.0, 3302.0], [67.1, 3304.0], [67.2, 3309.0], [67.3, 3312.0], [67.4, 3358.0], [67.5, 3366.0], [67.6, 3374.0], [67.7, 3379.0], [67.8, 3381.0], [67.9, 3385.0], [68.0, 3391.0], [68.1, 3395.0], [68.2, 3400.0], [68.3, 3402.0], [68.4, 3411.0], [68.5, 3427.0], [68.6, 3463.0], [68.7, 3464.0], [68.8, 3467.0], [68.9, 3476.0], [69.0, 3481.0], [69.1, 3495.0], [69.2, 3499.0], [69.3, 3515.0], [69.4, 3527.0], [69.5, 3558.0], [69.6, 3565.0], [69.7, 3588.0], [69.8, 3590.0], [69.9, 3612.0], [70.0, 3621.0], [70.1, 3627.0], [70.2, 3665.0], [70.3, 3673.0], [70.4, 3688.0], [70.5, 3694.0], [70.6, 3699.0], [70.7, 3707.0], [70.8, 3710.0], [70.9, 3744.0], [71.0, 3747.0], [71.1, 3768.0], [71.2, 3778.0], [71.3, 3781.0], [71.4, 3785.0], [71.5, 3792.0], [71.6, 3793.0], [71.7, 3796.0], [71.8, 3798.0], [71.9, 3802.0], [72.0, 3804.0], [72.1, 3805.0], [72.2, 3813.0], [72.3, 3816.0], [72.4, 3819.0], [72.5, 3823.0], [72.6, 3828.0], [72.7, 3865.0], [72.8, 3867.0], [72.9, 3870.0], [73.0, 3879.0], [73.1, 3898.0], [73.2, 3907.0], [73.3, 3908.0], [73.4, 3911.0], [73.5, 3911.0], [73.6, 3960.0], [73.7, 3986.0], [73.8, 4008.0], [73.9, 4011.0], [74.0, 4015.0], [74.1, 4044.0], [74.2, 4068.0], [74.3, 4074.0], [74.4, 4087.0], [74.5, 4096.0], [74.6, 4103.0], [74.7, 4159.0], [74.8, 4161.0], [74.9, 4170.0], [75.0, 4188.0], [75.1, 4190.0], [75.2, 4191.0], [75.3, 4195.0], [75.4, 4196.0], [75.5, 4203.0], [75.6, 4207.0], [75.7, 4232.0], [75.8, 4269.0], [75.9, 4273.0], [76.0, 4273.0], [76.1, 4288.0], [76.2, 4292.0], [76.3, 4292.0], [76.4, 4312.0], [76.5, 4316.0], [76.6, 4322.0], [76.7, 4323.0], [76.8, 4332.0], [76.9, 4361.0], [77.0, 4382.0], [77.1, 4382.0], [77.2, 4391.0], [77.3, 4397.0], [77.4, 4397.0], [77.5, 4399.0], [77.6, 4404.0], [77.7, 4405.0], [77.8, 4410.0], [77.9, 4416.0], [78.0, 4418.0], [78.1, 4420.0], [78.2, 4453.0], [78.3, 4484.0], [78.4, 4486.0], [78.5, 4506.0], [78.6, 4510.0], [78.7, 4512.0], [78.8, 4573.0], [78.9, 4588.0], [79.0, 4612.0], [79.1, 4622.0], [79.2, 4623.0], [79.3, 4659.0], [79.4, 4661.0], [79.5, 4668.0], [79.6, 4673.0], [79.7, 4681.0], [79.8, 4700.0], [79.9, 4702.0], [80.0, 4703.0], [80.1, 4707.0], [80.2, 4714.0], [80.3, 4716.0], [80.4, 4761.0], [80.5, 4765.0], [80.6, 4766.0], [80.7, 4767.0], [80.8, 4770.0], [80.9, 4776.0], [81.0, 4778.0], [81.1, 4782.0], [81.2, 4784.0], [81.3, 4788.0], [81.4, 4797.0], [81.5, 4800.0], [81.6, 4807.0], [81.7, 4810.0], [81.8, 4815.0], [81.9, 4816.0], [82.0, 4895.0], [82.1, 4900.0], [82.2, 4917.0], [82.3, 4934.0], [82.4, 4996.0], [82.5, 5004.0], [82.6, 5004.0], [82.7, 5014.0], [82.8, 5060.0], [82.9, 5062.0], [83.0, 5070.0], [83.1, 5072.0], [83.2, 5095.0], [83.3, 5106.0], [83.4, 5114.0], [83.5, 5117.0], [83.6, 5127.0], [83.7, 5170.0], [83.8, 5208.0], [83.9, 5209.0], [84.0, 5211.0], [84.1, 5212.0], [84.2, 5213.0], [84.3, 5221.0], [84.4, 5228.0], [84.5, 5232.0], [84.6, 5261.0], [84.7, 5270.0], [84.8, 5277.0], [84.9, 5278.0], [85.0, 5291.0], [85.1, 5292.0], [85.2, 5294.0], [85.3, 5300.0], [85.4, 5309.0], [85.5, 5311.0], [85.6, 5313.0], [85.7, 5314.0], [85.8, 5328.0], [85.9, 5339.0], [86.0, 5352.0], [86.1, 5399.0], [86.2, 5425.0], [86.3, 5427.0], [86.4, 5473.0], [86.5, 5477.0], [86.6, 5489.0], [86.7, 5540.0], [86.8, 5580.0], [86.9, 5583.0], [87.0, 5589.0], [87.1, 5597.0], [87.2, 5598.0], [87.3, 5621.0], [87.4, 5648.0], [87.5, 5661.0], [87.6, 5724.0], [87.7, 5735.0], [87.8, 5768.0], [87.9, 5813.0], [88.0, 5932.0], [88.1, 5983.0], [88.2, 5994.0], [88.3, 5999.0], [88.4, 6015.0], [88.5, 6077.0], [88.6, 6096.0], [88.7, 6102.0], [88.8, 6155.0], [88.9, 6177.0], [89.0, 6182.0], [89.1, 6245.0], [89.2, 6258.0], [89.3, 6269.0], [89.4, 6289.0], [89.5, 6314.0], [89.6, 6366.0], [89.7, 6380.0], [89.8, 6380.0], [89.9, 6385.0], [90.0, 6421.0], [90.1, 6468.0], [90.2, 6478.0], [90.3, 6511.0], [90.4, 6579.0], [90.5, 6594.0], [90.6, 6596.0], [90.7, 6610.0], [90.8, 6610.0], [90.9, 6631.0], [91.0, 6632.0], [91.1, 6659.0], [91.2, 6665.0], [91.3, 6676.0], [91.4, 6678.0], [91.5, 6694.0], [91.6, 6710.0], [91.7, 6758.0], [91.8, 6769.0], [91.9, 6782.0], [92.0, 6787.0], [92.1, 6793.0], [92.2, 6818.0], [92.3, 6826.0], [92.4, 6839.0], [92.5, 6881.0], [92.6, 6886.0], [92.7, 6897.0], [92.8, 6903.0], [92.9, 6903.0], [93.0, 6903.0], [93.1, 6909.0], [93.2, 6911.0], [93.3, 6923.0], [93.4, 6935.0], [93.5, 6981.0], [93.6, 7066.0], [93.7, 7082.0], [93.8, 7168.0], [93.9, 7180.0], [94.0, 7190.0], [94.1, 7190.0], [94.2, 7192.0], [94.3, 7223.0], [94.4, 7241.0], [94.5, 7262.0], [94.6, 7279.0], [94.7, 7287.0], [94.8, 7299.0], [94.9, 7359.0], [95.0, 7367.0], [95.1, 7376.0], [95.2, 7377.0], [95.3, 7423.0], [95.4, 7432.0], [95.5, 7439.0], [95.6, 7493.0], [95.7, 7525.0], [95.8, 7587.0], [95.9, 7590.0], [96.0, 7606.0], [96.1, 7625.0], [96.2, 7626.0], [96.3, 7648.0], [96.4, 7699.0], [96.5, 7702.0], [96.6, 7758.0], [96.7, 7852.0], [96.8, 7857.0], [96.9, 7908.0], [97.0, 8007.0], [97.1, 8076.0], [97.2, 8131.0], [97.3, 8193.0], [97.4, 8377.0], [97.5, 8386.0], [97.6, 8496.0], [97.7, 8620.0], [97.8, 8731.0], [97.9, 8801.0], [98.0, 8805.0], [98.1, 8812.0], [98.2, 8836.0], [98.3, 8841.0], [98.4, 8867.0], [98.5, 8906.0], [98.6, 8918.0], [98.7, 8971.0], [98.8, 9032.0], [98.9, 9055.0], [99.0, 9091.0], [99.1, 9122.0], [99.2, 9210.0], [99.3, 9462.0], [99.4, 9470.0], [99.5, 9525.0], [99.6, 9702.0], [99.7, 9802.0], [99.8, 9812.0], [99.9, 9848.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[0.0, 6.0], [0.1, 7.0], [0.2, 7.0], [0.3, 7.0], [0.4, 7.0], [0.5, 72.0], [0.6, 78.0], [0.7, 88.0], [0.8, 382.0], [0.9, 389.0], [1.0, 393.0], [1.1, 397.0], [1.2, 401.0], [1.3, 465.0], [1.4, 465.0], [1.5, 486.0], [1.6, 535.0], [1.7, 550.0], [1.8, 576.0], [1.9, 590.0], [2.0, 600.0], [2.1, 604.0], [2.2, 617.0], [2.3, 619.0], [2.4, 622.0], [2.5, 624.0], [2.6, 625.0], [2.7, 629.0], [2.8, 631.0], [2.9, 706.0], [3.0, 707.0], [3.1, 723.0], [3.2, 723.0], [3.3, 763.0], [3.4, 777.0], [3.5, 784.0], [3.6, 790.0], [3.7, 791.0], [3.8, 792.0], [3.9, 793.0], [4.0, 793.0], [4.1, 796.0], [4.2, 812.0], [4.3, 814.0], [4.4, 819.0], [4.5, 822.0], [4.6, 824.0], [4.7, 885.0], [4.8, 887.0], [4.9, 896.0], [5.0, 896.0], [5.1, 897.0], [5.2, 903.0], [5.3, 903.0], [5.4, 903.0], [5.5, 905.0], [5.6, 916.0], [5.7, 916.0], [5.8, 921.0], [5.9, 924.0], [6.0, 928.0], [6.1, 933.0], [6.2, 934.0], [6.3, 935.0], [6.4, 969.0], [6.5, 976.0], [6.6, 981.0], [6.7, 986.0], [6.8, 992.0], [6.9, 993.0], [7.0, 993.0], [7.1, 998.0], [7.2, 999.0], [7.3, 1003.0], [7.4, 1012.0], [7.5, 1070.0], [7.6, 1102.0], [7.7, 1163.0], [7.8, 1190.0], [7.9, 1195.0], [8.0, 1205.0], [8.1, 1207.0], [8.2, 1232.0], [8.3, 1235.0], [8.4, 1241.0], [8.5, 1253.0], [8.6, 1258.0], [8.7, 1303.0], [8.8, 1316.0], [8.9, 1327.0], [9.0, 1327.0], [9.1, 1376.0], [9.2, 1403.0], [9.3, 1417.0], [9.4, 1417.0], [9.5, 1421.0], [9.6, 1433.0], [9.7, 1472.0], [9.8, 1474.0], [9.9, 1481.0], [10.0, 1481.0], [10.1, 1489.0], [10.2, 1490.0], [10.3, 1491.0], [10.4, 1500.0], [10.5, 1503.0], [10.6, 1508.0], [10.7, 1509.0], [10.8, 1515.0], [10.9, 1519.0], [11.0, 1521.0], [11.1, 1523.0], [11.2, 1524.0], [11.3, 1528.0], [11.4, 1529.0], [11.5, 1530.0], [11.6, 1532.0], [11.7, 1534.0], [11.8, 1534.0], [11.9, 1535.0], [12.0, 1540.0], [12.1, 1556.0], [12.2, 1560.0], [12.3, 1560.0], [12.4, 1575.0], [12.5, 1579.0], [12.6, 1587.0], [12.7, 1589.0], [12.8, 1591.0], [12.9, 1591.0], [13.0, 1591.0], [13.1, 1592.0], [13.2, 1592.0], [13.3, 1595.0], [13.4, 1596.0], [13.5, 1596.0], [13.6, 1598.0], [13.7, 1598.0], [13.8, 1601.0], [13.9, 1605.0], [14.0, 1606.0], [14.1, 1611.0], [14.2, 1639.0], [14.3, 1642.0], [14.4, 1660.0], [14.5, 1661.0], [14.6, 1667.0], [14.7, 1676.0], [14.8, 1677.0], [14.9, 1678.0], [15.0, 1688.0], [15.1, 1691.0], [15.2, 1696.0], [15.3, 1697.0], [15.4, 1698.0], [15.5, 1700.0], [15.6, 1700.0], [15.7, 1707.0], [15.8, 1712.0], [15.9, 1760.0], [16.0, 1766.0], [16.1, 1769.0], [16.2, 1880.0], [16.3, 1881.0], [16.4, 1887.0], [16.5, 1909.0], [16.6, 1912.0], [16.7, 1915.0], [16.8, 1916.0], [16.9, 1916.0], [17.0, 1922.0], [17.1, 1964.0], [17.2, 1977.0], [17.3, 1984.0], [17.4, 1987.0], [17.5, 1989.0], [17.6, 1992.0], [17.7, 1995.0], [17.8, 1997.0], [17.9, 2000.0], [18.0, 2006.0], [18.1, 2008.0], [18.2, 2009.0], [18.3, 2009.0], [18.4, 2010.0], [18.5, 2012.0], [18.6, 2015.0], [18.7, 2015.0], [18.8, 2018.0], [18.9, 2018.0], [19.0, 2018.0], [19.1, 2019.0], [19.2, 2021.0], [19.3, 2021.0], [19.4, 2021.0], [19.5, 2023.0], [19.6, 2024.0], [19.7, 2025.0], [19.8, 2036.0], [19.9, 2036.0], [20.0, 2046.0], [20.1, 2051.0], [20.2, 2056.0], [20.3, 2058.0], [20.4, 2059.0], [20.5, 2059.0], [20.6, 2063.0], [20.7, 2064.0], [20.8, 2071.0], [20.9, 2075.0], [21.0, 2075.0], [21.1, 2079.0], [21.2, 2080.0], [21.3, 2096.0], [21.4, 2099.0], [21.5, 2102.0], [21.6, 2103.0], [21.7, 2104.0], [21.8, 2104.0], [21.9, 2109.0], [22.0, 2115.0], [22.1, 2119.0], [22.2, 2121.0], [22.3, 2130.0], [22.4, 2133.0], [22.5, 2139.0], [22.6, 2168.0], [22.7, 2172.0], [22.8, 2182.0], [22.9, 2195.0], [23.0, 2201.0], [23.1, 2203.0], [23.2, 2211.0], [23.3, 2213.0], [23.4, 2214.0], [23.5, 2216.0], [23.6, 2217.0], [23.7, 2219.0], [23.8, 2220.0], [23.9, 2221.0], [24.0, 2229.0], [24.1, 2236.0], [24.2, 2239.0], [24.3, 2265.0], [24.4, 2268.0], [24.5, 2271.0], [24.6, 2278.0], [24.7, 2284.0], [24.8, 2286.0], [24.9, 2286.0], [25.0, 2290.0], [25.1, 2291.0], [25.2, 2292.0], [25.3, 2294.0], [25.4, 2296.0], [25.5, 2298.0], [25.6, 2300.0], [25.7, 2301.0], [25.8, 2301.0], [25.9, 2302.0], [26.0, 2302.0], [26.1, 2302.0], [26.2, 2302.0], [26.3, 2303.0], [26.4, 2303.0], [26.5, 2323.0], [26.6, 2336.0], [26.7, 2377.0], [26.8, 2377.0], [26.9, 2378.0], [27.0, 2391.0], [27.1, 2395.0], [27.2, 2395.0], [27.3, 2396.0], [27.4, 2402.0], [27.5, 2402.0], [27.6, 2404.0], [27.7, 2410.0], [27.8, 2413.0], [27.9, 2438.0], [28.0, 2466.0], [28.1, 2469.0], [28.2, 2469.0], [28.3, 2470.0], [28.4, 2473.0], [28.5, 2482.0], [28.6, 2487.0], [28.7, 2489.0], [28.8, 2490.0], [28.9, 2490.0], [29.0, 2491.0], [29.1, 2493.0], [29.2, 2494.0], [29.3, 2495.0], [29.4, 2496.0], [29.5, 2498.0], [29.6, 2500.0], [29.7, 2508.0], [29.8, 2508.0], [29.9, 2510.0], [30.0, 2511.0], [30.1, 2515.0], [30.2, 2516.0], [30.3, 2518.0], [30.4, 2519.0], [30.5, 2525.0], [30.6, 2526.0], [30.7, 2529.0], [30.8, 2529.0], [30.9, 2548.0], [31.0, 2563.0], [31.1, 2566.0], [31.2, 2569.0], [31.3, 2579.0], [31.4, 2580.0], [31.5, 2584.0], [31.6, 2586.0], [31.7, 2586.0], [31.8, 2589.0], [31.9, 2590.0], [32.0, 2590.0], [32.1, 2592.0], [32.2, 2593.0], [32.3, 2593.0], [32.4, 2595.0], [32.5, 2598.0], [32.6, 2601.0], [32.7, 2603.0], [32.8, 2604.0], [32.9, 2606.0], [33.0, 2608.0], [33.1, 2610.0], [33.2, 2615.0], [33.3, 2616.0], [33.4, 2634.0], [33.5, 2653.0], [33.6, 2658.0], [33.7, 2661.0], [33.8, 2665.0], [33.9, 2671.0], [34.0, 2672.0], [34.1, 2686.0], [34.2, 2686.0], [34.3, 2687.0], [34.4, 2691.0], [34.5, 2692.0], [34.6, 2694.0], [34.7, 2695.0], [34.8, 2699.0], [34.9, 2701.0], [35.0, 2701.0], [35.1, 2701.0], [35.2, 2702.0], [35.3, 2709.0], [35.4, 2709.0], [35.5, 2709.0], [35.6, 2710.0], [35.7, 2718.0], [35.8, 2719.0], [35.9, 2720.0], [36.0, 2720.0], [36.1, 2721.0], [36.2, 2723.0], [36.3, 2724.0], [36.4, 2725.0], [36.5, 2725.0], [36.6, 2731.0], [36.7, 2756.0], [36.8, 2768.0], [36.9, 2778.0], [37.0, 2779.0], [37.1, 2781.0], [37.2, 2785.0], [37.3, 2790.0], [37.4, 2792.0], [37.5, 2794.0], [37.6, 2797.0], [37.7, 2803.0], [37.8, 2804.0], [37.9, 2807.0], [38.0, 2809.0], [38.1, 2812.0], [38.2, 2814.0], [38.3, 2816.0], [38.4, 2821.0], [38.5, 2835.0], [38.6, 2841.0], [38.7, 2841.0], [38.8, 2863.0], [38.9, 2874.0], [39.0, 2875.0], [39.1, 2881.0], [39.2, 2882.0], [39.3, 2882.0], [39.4, 2886.0], [39.5, 2893.0], [39.6, 2895.0], [39.7, 2899.0], [39.8, 2900.0], [39.9, 2903.0], [40.0, 2904.0], [40.1, 2904.0], [40.2, 2907.0], [40.3, 2912.0], [40.4, 2914.0], [40.5, 2921.0], [40.6, 2926.0], [40.7, 2928.0], [40.8, 2930.0], [40.9, 2931.0], [41.0, 2964.0], [41.1, 2969.0], [41.2, 2970.0], [41.3, 2974.0], [41.4, 2977.0], [41.5, 2979.0], [41.6, 2984.0], [41.7, 2986.0], [41.8, 2993.0], [41.9, 2993.0], [42.0, 2995.0], [42.1, 2998.0], [42.2, 3007.0], [42.3, 3013.0], [42.4, 3014.0], [42.5, 3019.0], [42.6, 3024.0], [42.7, 3028.0], [42.8, 3031.0], [42.9, 3032.0], [43.0, 3038.0], [43.1, 3040.0], [43.2, 3059.0], [43.3, 3068.0], [43.4, 3069.0], [43.5, 3069.0], [43.6, 3073.0], [43.7, 3074.0], [43.8, 3076.0], [43.9, 3076.0], [44.0, 3082.0], [44.1, 3084.0], [44.2, 3087.0], [44.3, 3088.0], [44.4, 3089.0], [44.5, 3092.0], [44.6, 3097.0], [44.7, 3102.0], [44.8, 3106.0], [44.9, 3106.0], [45.0, 3106.0], [45.1, 3107.0], [45.2, 3109.0], [45.3, 3110.0], [45.4, 3113.0], [45.5, 3119.0], [45.6, 3120.0], [45.7, 3122.0], [45.8, 3123.0], [45.9, 3124.0], [46.0, 3125.0], [46.1, 3126.0], [46.2, 3127.0], [46.3, 3139.0], [46.4, 3164.0], [46.5, 3170.0], [46.6, 3170.0], [46.7, 3177.0], [46.8, 3186.0], [46.9, 3190.0], [47.0, 3191.0], [47.1, 3195.0], [47.2, 3207.0], [47.3, 3207.0], [47.4, 3208.0], [47.5, 3211.0], [47.6, 3215.0], [47.7, 3216.0], [47.8, 3217.0], [47.9, 3218.0], [48.0, 3221.0], [48.1, 3224.0], [48.2, 3226.0], [48.3, 3227.0], [48.4, 3259.0], [48.5, 3261.0], [48.6, 3265.0], [48.7, 3269.0], [48.8, 3269.0], [48.9, 3275.0], [49.0, 3277.0], [49.1, 3283.0], [49.2, 3285.0], [49.3, 3286.0], [49.4, 3287.0], [49.5, 3288.0], [49.6, 3288.0], [49.7, 3288.0], [49.8, 3296.0], [49.9, 3299.0], [50.0, 3299.0], [50.1, 3302.0], [50.2, 3302.0], [50.3, 3304.0], [50.4, 3304.0], [50.5, 3307.0], [50.6, 3308.0], [50.7, 3308.0], [50.8, 3309.0], [50.9, 3317.0], [51.0, 3320.0], [51.1, 3321.0], [51.2, 3325.0], [51.3, 3329.0], [51.4, 3334.0], [51.5, 3338.0], [51.6, 3358.0], [51.7, 3366.0], [51.8, 3366.0], [51.9, 3367.0], [52.0, 3368.0], [52.1, 3370.0], [52.2, 3374.0], [52.3, 3385.0], [52.4, 3391.0], [52.5, 3393.0], [52.6, 3396.0], [52.7, 3396.0], [52.8, 3400.0], [52.9, 3402.0], [53.0, 3406.0], [53.1, 3406.0], [53.2, 3407.0], [53.3, 3409.0], [53.4, 3412.0], [53.5, 3416.0], [53.6, 3417.0], [53.7, 3450.0], [53.8, 3461.0], [53.9, 3466.0], [54.0, 3467.0], [54.1, 3474.0], [54.2, 3483.0], [54.3, 3492.0], [54.4, 3497.0], [54.5, 3498.0], [54.6, 3501.0], [54.7, 3502.0], [54.8, 3508.0], [54.9, 3514.0], [55.0, 3518.0], [55.1, 3522.0], [55.2, 3523.0], [55.3, 3524.0], [55.4, 3533.0], [55.5, 3563.0], [55.6, 3570.0], [55.7, 3570.0], [55.8, 3572.0], [55.9, 3573.0], [56.0, 3582.0], [56.1, 3582.0], [56.2, 3583.0], [56.3, 3585.0], [56.4, 3592.0], [56.5, 3602.0], [56.6, 3609.0], [56.7, 3613.0], [56.8, 3615.0], [56.9, 3619.0], [57.0, 3622.0], [57.1, 3624.0], [57.2, 3627.0], [57.3, 3661.0], [57.4, 3665.0], [57.5, 3669.0], [57.6, 3672.0], [57.7, 3675.0], [57.8, 3679.0], [57.9, 3687.0], [58.0, 3692.0], [58.1, 3693.0], [58.2, 3693.0], [58.3, 3693.0], [58.4, 3699.0], [58.5, 3703.0], [58.6, 3720.0], [58.7, 3720.0], [58.8, 3721.0], [58.9, 3723.0], [59.0, 3726.0], [59.1, 3765.0], [59.2, 3767.0], [59.3, 3769.0], [59.4, 3770.0], [59.5, 3775.0], [59.6, 3776.0], [59.7, 3777.0], [59.8, 3778.0], [59.9, 3780.0], [60.0, 3783.0], [60.1, 3789.0], [60.2, 3789.0], [60.3, 3790.0], [60.4, 3794.0], [60.5, 3802.0], [60.6, 3807.0], [60.7, 3811.0], [60.8, 3833.0], [60.9, 3839.0], [61.0, 3890.0], [61.1, 3891.0], [61.2, 3896.0], [61.3, 3897.0], [61.4, 3914.0], [61.5, 3923.0], [61.6, 3948.0], [61.7, 3965.0], [61.8, 3975.0], [61.9, 3977.0], [62.0, 3979.0], [62.1, 3983.0], [62.2, 3983.0], [62.3, 3985.0], [62.4, 3991.0], [62.5, 3993.0], [62.6, 3994.0], [62.7, 3995.0], [62.8, 3997.0], [62.9, 3998.0], [63.0, 3999.0], [63.1, 4003.0], [63.2, 4009.0], [63.3, 4016.0], [63.4, 4032.0], [63.5, 4067.0], [63.6, 4068.0], [63.7, 4068.0], [63.8, 4069.0], [63.9, 4072.0], [64.0, 4078.0], [64.1, 4084.0], [64.2, 4090.0], [64.3, 4092.0], [64.4, 4094.0], [64.5, 4095.0], [64.6, 4099.0], [64.7, 4099.0], [64.8, 4100.0], [64.9, 4101.0], [65.0, 4101.0], [65.1, 4121.0], [65.2, 4137.0], [65.3, 4189.0], [65.4, 4189.0], [65.5, 4192.0], [65.6, 4200.0], [65.7, 4202.0], [65.8, 4210.0], [65.9, 4216.0], [66.0, 4223.0], [66.1, 4225.0], [66.2, 4245.0], [66.3, 4272.0], [66.4, 4277.0], [66.5, 4285.0], [66.6, 4286.0], [66.7, 4286.0], [66.8, 4292.0], [66.9, 4309.0], [67.0, 4312.0], [67.1, 4313.0], [67.2, 4320.0], [67.3, 4324.0], [67.4, 4328.0], [67.5, 4387.0], [67.6, 4398.0], [67.7, 4398.0], [67.8, 4413.0], [67.9, 4421.0], [68.0, 4433.0], [68.1, 4445.0], [68.2, 4454.0], [68.3, 4489.0], [68.4, 4490.0], [68.5, 4491.0], [68.6, 4492.0], [68.7, 4495.0], [68.8, 4495.0], [68.9, 4498.0], [69.0, 4501.0], [69.1, 4502.0], [69.2, 4502.0], [69.3, 4506.0], [69.4, 4564.0], [69.5, 4564.0], [69.6, 4565.0], [69.7, 4569.0], [69.8, 4572.0], [69.9, 4573.0], [70.0, 4583.0], [70.1, 4585.0], [70.2, 4585.0], [70.3, 4590.0], [70.4, 4594.0], [70.5, 4601.0], [70.6, 4604.0], [70.7, 4605.0], [70.8, 4608.0], [70.9, 4615.0], [71.0, 4648.0], [71.1, 4667.0], [71.2, 4671.0], [71.3, 4675.0], [71.4, 4677.0], [71.5, 4681.0], [71.6, 4684.0], [71.7, 4689.0], [71.8, 4709.0], [71.9, 4718.0], [72.0, 4718.0], [72.1, 4732.0], [72.2, 4748.0], [72.3, 4778.0], [72.4, 4780.0], [72.5, 4789.0], [72.6, 4797.0], [72.7, 4801.0], [72.8, 4801.0], [72.9, 4803.0], [73.0, 4806.0], [73.1, 4834.0], [73.2, 4852.0], [73.3, 4866.0], [73.4, 4878.0], [73.5, 4884.0], [73.6, 4891.0], [73.7, 4905.0], [73.8, 4918.0], [73.9, 4935.0], [74.0, 4981.0], [74.1, 4982.0], [74.2, 4988.0], [74.3, 4991.0], [74.4, 5010.0], [74.5, 5012.0], [74.6, 5018.0], [74.7, 5027.0], [74.8, 5029.0], [74.9, 5068.0], [75.0, 5069.0], [75.1, 5074.0], [75.2, 5090.0], [75.3, 5090.0], [75.4, 5101.0], [75.5, 5102.0], [75.6, 5107.0], [75.7, 5149.0], [75.8, 5175.0], [75.9, 5175.0], [76.0, 5189.0], [76.1, 5189.0], [76.2, 5195.0], [76.3, 5200.0], [76.4, 5207.0], [76.5, 5215.0], [76.6, 5221.0], [76.7, 5221.0], [76.8, 5221.0], [76.9, 5259.0], [77.0, 5259.0], [77.1, 5271.0], [77.2, 5273.0], [77.3, 5273.0], [77.4, 5281.0], [77.5, 5283.0], [77.6, 5285.0], [77.7, 5288.0], [77.8, 5295.0], [77.9, 5297.0], [78.0, 5305.0], [78.1, 5305.0], [78.2, 5305.0], [78.3, 5312.0], [78.4, 5327.0], [78.5, 5366.0], [78.6, 5368.0], [78.7, 5376.0], [78.8, 5377.0], [78.9, 5390.0], [79.0, 5391.0], [79.1, 5396.0], [79.2, 5396.0], [79.3, 5402.0], [79.4, 5412.0], [79.5, 5419.0], [79.6, 5424.0], [79.7, 5448.0], [79.8, 5449.0], [79.9, 5459.0], [80.0, 5468.0], [80.1, 5469.0], [80.2, 5477.0], [80.3, 5485.0], [80.4, 5489.0], [80.5, 5490.0], [80.6, 5493.0], [80.7, 5494.0], [80.8, 5499.0], [80.9, 5499.0], [81.0, 5499.0], [81.1, 5500.0], [81.2, 5501.0], [81.3, 5503.0], [81.4, 5509.0], [81.5, 5517.0], [81.6, 5533.0], [81.7, 5563.0], [81.8, 5572.0], [81.9, 5583.0], [82.0, 5602.0], [82.1, 5606.0], [82.2, 5618.0], [82.3, 5618.0], [82.4, 5631.0], [82.5, 5639.0], [82.6, 5694.0], [82.7, 5698.0], [82.8, 5710.0], [82.9, 5710.0], [83.0, 5715.0], [83.1, 5717.0], [83.2, 5717.0], [83.3, 5732.0], [83.4, 5741.0], [83.5, 5742.0], [83.6, 5761.0], [83.7, 5766.0], [83.8, 5768.0], [83.9, 5778.0], [84.0, 5791.0], [84.1, 5791.0], [84.2, 5809.0], [84.3, 5828.0], [84.4, 5856.0], [84.5, 5859.0], [84.6, 5862.0], [84.7, 5886.0], [84.8, 5906.0], [84.9, 5910.0], [85.0, 5934.0], [85.1, 5943.0], [85.2, 5958.0], [85.3, 5970.0], [85.4, 5992.0], [85.5, 5998.0], [85.6, 6012.0], [85.7, 6022.0], [85.8, 6024.0], [85.9, 6039.0], [86.0, 6077.0], [86.1, 6078.0], [86.2, 6081.0], [86.3, 6085.0], [86.4, 6087.0], [86.5, 6088.0], [86.6, 6088.0], [86.7, 6090.0], [86.8, 6090.0], [86.9, 6093.0], [87.0, 6102.0], [87.1, 6106.0], [87.2, 6118.0], [87.3, 6126.0], [87.4, 6171.0], [87.5, 6193.0], [87.6, 6201.0], [87.7, 6203.0], [87.8, 6211.0], [87.9, 6232.0], [88.0, 6254.0], [88.1, 6313.0], [88.2, 6335.0], [88.3, 6385.0], [88.4, 6437.0], [88.5, 6471.0], [88.6, 6503.0], [88.7, 6509.0], [88.8, 6530.0], [88.9, 6545.0], [89.0, 6551.0], [89.1, 6557.0], [89.2, 6566.0], [89.3, 6571.0], [89.4, 6579.0], [89.5, 6589.0], [89.6, 6591.0], [89.7, 6606.0], [89.8, 6614.0], [89.9, 6625.0], [90.0, 6691.0], [90.1, 6795.0], [90.2, 6798.0], [90.3, 6798.0], [90.4, 6810.0], [90.5, 6812.0], [90.6, 6813.0], [90.7, 6827.0], [90.8, 6874.0], [90.9, 6900.0], [91.0, 6942.0], [91.1, 6961.0], [91.2, 6969.0], [91.3, 7005.0], [91.4, 7009.0], [91.5, 7017.0], [91.6, 7024.0], [91.7, 7025.0], [91.8, 7033.0], [91.9, 7041.0], [92.0, 7058.0], [92.1, 7073.0], [92.2, 7085.0], [92.3, 7105.0], [92.4, 7113.0], [92.5, 7117.0], [92.6, 7152.0], [92.7, 7155.0], [92.8, 7176.0], [92.9, 7191.0], [93.0, 7208.0], [93.1, 7226.0], [93.2, 7308.0], [93.3, 7312.0], [93.4, 7314.0], [93.5, 7318.0], [93.6, 7387.0], [93.7, 7416.0], [93.8, 7438.0], [93.9, 7487.0], [94.0, 7491.0], [94.1, 7538.0], [94.2, 7543.0], [94.3, 7588.0], [94.4, 7619.0], [94.5, 7632.0], [94.6, 7645.0], [94.7, 7668.0], [94.8, 7674.0], [94.9, 7696.0], [95.0, 7698.0], [95.1, 7721.0], [95.2, 7733.0], [95.3, 7822.0], [95.4, 7830.0], [95.5, 7838.0], [95.6, 7870.0], [95.7, 7872.0], [95.8, 7890.0], [95.9, 7910.0], [96.0, 8013.0], [96.1, 8023.0], [96.2, 8036.0], [96.3, 8044.0], [96.4, 8087.0], [96.5, 8188.0], [96.6, 8208.0], [96.7, 8211.0], [96.8, 8276.0], [96.9, 8300.0], [97.0, 8410.0], [97.1, 8412.0], [97.2, 8473.0], [97.3, 8589.0], [97.4, 8702.0], [97.5, 8799.0], [97.6, 8813.0], [97.7, 8917.0], [97.8, 8921.0], [97.9, 8925.0], [98.0, 8941.0], [98.1, 8982.0], [98.2, 9065.0], [98.3, 9070.0], [98.4, 9168.0], [98.5, 9321.0], [98.6, 9403.0], [98.7, 9439.0], [98.8, 9491.0], [98.9, 9503.0], [99.0, 9589.0], [99.1, 9711.0], [99.2, 9733.0], [99.3, 9792.0], [99.4, 9862.0], [99.5, 9885.0], [99.6, 9918.0], [99.7, 9930.0], [99.8, 10174.0], [99.9, 10501.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[0.0, 10.0], [0.1, 10.0], [0.2, 12.0], [0.3, 12.0], [0.4, 16.0], [0.5, 30.0], [0.6, 43.0], [0.7, 72.0], [0.8, 73.0], [0.9, 79.0], [1.0, 152.0], [1.1, 360.0], [1.2, 398.0], [1.3, 412.0], [1.4, 412.0], [1.5, 489.0], [1.6, 606.0], [1.7, 610.0], [1.8, 678.0], [1.9, 684.0], [2.0, 684.0], [2.1, 688.0], [2.2, 690.0], [2.3, 695.0], [2.4, 720.0], [2.5, 727.0], [2.6, 734.0], [2.7, 750.0], [2.8, 765.0], [2.9, 776.0], [3.0, 782.0], [3.1, 784.0], [3.2, 789.0], [3.3, 815.0], [3.4, 819.0], [3.5, 828.0], [3.6, 829.0], [3.7, 831.0], [3.8, 834.0], [3.9, 862.0], [4.0, 895.0], [4.1, 897.0], [4.2, 912.0], [4.3, 915.0], [4.4, 918.0], [4.5, 928.0], [4.6, 938.0], [4.7, 977.0], [4.8, 987.0], [4.9, 988.0], [5.0, 988.0], [5.1, 996.0], [5.2, 1005.0], [5.3, 1007.0], [5.4, 1018.0], [5.5, 1025.0], [5.6, 1063.0], [5.7, 1140.0], [5.8, 1223.0], [5.9, 1270.0], [6.0, 1291.0], [6.1, 1292.0], [6.2, 1292.0], [6.3, 1293.0], [6.4, 1297.0], [6.5, 1306.0], [6.6, 1321.0], [6.7, 1361.0], [6.8, 1372.0], [6.9, 1380.0], [7.0, 1389.0], [7.1, 1401.0], [7.2, 1408.0], [7.3, 1410.0], [7.4, 1412.0], [7.5, 1426.0], [7.6, 1464.0], [7.7, 1495.0], [7.8, 1500.0], [7.9, 1504.0], [8.0, 1530.0], [8.1, 1584.0], [8.2, 1585.0], [8.3, 1588.0], [8.4, 1596.0], [8.5, 1596.0], [8.6, 1597.0], [8.7, 1601.0], [8.8, 1603.0], [8.9, 1606.0], [9.0, 1606.0], [9.1, 1608.0], [9.2, 1616.0], [9.3, 1616.0], [9.4, 1617.0], [9.5, 1619.0], [9.6, 1620.0], [9.7, 1621.0], [9.8, 1625.0], [9.9, 1626.0], [10.0, 1628.0], [10.1, 1630.0], [10.2, 1646.0], [10.3, 1653.0], [10.4, 1670.0], [10.5, 1679.0], [10.6, 1685.0], [10.7, 1687.0], [10.8, 1697.0], [10.9, 1701.0], [11.0, 1702.0], [11.1, 1704.0], [11.2, 1707.0], [11.3, 1708.0], [11.4, 1730.0], [11.5, 1735.0], [11.6, 1818.0], [11.7, 1822.0], [11.8, 1863.0], [11.9, 1878.0], [12.0, 1898.0], [12.1, 1919.0], [12.2, 1930.0], [12.3, 1931.0], [12.4, 1934.0], [12.5, 1943.0], [12.6, 1976.0], [12.7, 1977.0], [12.8, 1978.0], [12.9, 1982.0], [13.0, 2000.0], [13.1, 2007.0], [13.2, 2015.0], [13.3, 2019.0], [13.4, 2021.0], [13.5, 2024.0], [13.6, 2029.0], [13.7, 2031.0], [13.8, 2053.0], [13.9, 2057.0], [14.0, 2083.0], [14.1, 2093.0], [14.2, 2095.0], [14.3, 2106.0], [14.4, 2116.0], [14.5, 2118.0], [14.6, 2122.0], [14.7, 2134.0], [14.8, 2172.0], [14.9, 2173.0], [15.0, 2174.0], [15.1, 2178.0], [15.2, 2181.0], [15.3, 2184.0], [15.4, 2193.0], [15.5, 2193.0], [15.6, 2197.0], [15.7, 2198.0], [15.8, 2200.0], [15.9, 2205.0], [16.0, 2206.0], [16.1, 2207.0], [16.2, 2212.0], [16.3, 2212.0], [16.4, 2224.0], [16.5, 2234.0], [16.6, 2261.0], [16.7, 2262.0], [16.8, 2268.0], [16.9, 2278.0], [17.0, 2279.0], [17.1, 2280.0], [17.2, 2285.0], [17.3, 2286.0], [17.4, 2286.0], [17.5, 2289.0], [17.6, 2291.0], [17.7, 2293.0], [17.8, 2297.0], [17.9, 2306.0], [18.0, 2306.0], [18.1, 2313.0], [18.2, 2317.0], [18.3, 2320.0], [18.4, 2323.0], [18.5, 2370.0], [18.6, 2371.0], [18.7, 2373.0], [18.8, 2375.0], [18.9, 2394.0], [19.0, 2407.0], [19.1, 2414.0], [19.2, 2479.0], [19.3, 2486.0], [19.4, 2517.0], [19.5, 2523.0], [19.6, 2531.0], [19.7, 2531.0], [19.8, 2571.0], [19.9, 2574.0], [20.0, 2585.0], [20.1, 2587.0], [20.2, 2595.0], [20.3, 2597.0], [20.4, 2597.0], [20.5, 2602.0], [20.6, 2612.0], [20.7, 2625.0], [20.8, 2626.0], [20.9, 2629.0], [21.0, 2631.0], [21.1, 2638.0], [21.2, 2641.0], [21.3, 2657.0], [21.4, 2667.0], [21.5, 2669.0], [21.6, 2677.0], [21.7, 2678.0], [21.8, 2686.0], [21.9, 2686.0], [22.0, 2689.0], [22.1, 2691.0], [22.2, 2693.0], [22.3, 2712.0], [22.4, 2714.0], [22.5, 2716.0], [22.6, 2718.0], [22.7, 2724.0], [22.8, 2729.0], [22.9, 2733.0], [23.0, 2735.0], [23.1, 2775.0], [23.2, 2775.0], [23.3, 2775.0], [23.4, 2778.0], [23.5, 2778.0], [23.6, 2784.0], [23.7, 2784.0], [23.8, 2786.0], [23.9, 2790.0], [24.0, 2793.0], [24.1, 2795.0], [24.2, 2796.0], [24.3, 2809.0], [24.4, 2809.0], [24.5, 2813.0], [24.6, 2827.0], [24.7, 2870.0], [24.8, 2875.0], [24.9, 2886.0], [25.0, 2892.0], [25.1, 2899.0], [25.2, 2906.0], [25.3, 2906.0], [25.4, 2919.0], [25.5, 2922.0], [25.6, 2925.0], [25.7, 2926.0], [25.8, 2948.0], [25.9, 2974.0], [26.0, 2976.0], [26.1, 2982.0], [26.2, 2986.0], [26.3, 2987.0], [26.4, 2989.0], [26.5, 2989.0], [26.6, 2989.0], [26.7, 2989.0], [26.8, 2998.0], [26.9, 2998.0], [27.0, 3000.0], [27.1, 3001.0], [27.2, 3001.0], [27.3, 3006.0], [27.4, 3012.0], [27.5, 3023.0], [27.6, 3023.0], [27.7, 3030.0], [27.8, 3043.0], [27.9, 3064.0], [28.0, 3077.0], [28.1, 3078.0], [28.2, 3087.0], [28.3, 3089.0], [28.4, 3093.0], [28.5, 3093.0], [28.6, 3094.0], [28.7, 3098.0], [28.8, 3111.0], [28.9, 3116.0], [29.0, 3128.0], [29.1, 3128.0], [29.2, 3203.0], [29.3, 3204.0], [29.4, 3204.0], [29.5, 3210.0], [29.6, 3213.0], [29.7, 3214.0], [29.8, 3214.0], [29.9, 3215.0], [30.0, 3235.0], [30.1, 3236.0], [30.2, 3251.0], [30.3, 3288.0], [30.4, 3289.0], [30.5, 3294.0], [30.6, 3295.0], [30.7, 3297.0], [30.8, 3298.0], [30.9, 3299.0], [31.0, 3305.0], [31.1, 3307.0], [31.2, 3308.0], [31.3, 3317.0], [31.4, 3318.0], [31.5, 3326.0], [31.6, 3326.0], [31.7, 3332.0], [31.8, 3334.0], [31.9, 3377.0], [32.0, 3382.0], [32.1, 3385.0], [32.2, 3385.0], [32.3, 3395.0], [32.4, 3400.0], [32.5, 3401.0], [32.6, 3416.0], [32.7, 3454.0], [32.8, 3463.0], [32.9, 3464.0], [33.0, 3487.0], [33.1, 3491.0], [33.2, 3500.0], [33.3, 3507.0], [33.4, 3576.0], [33.5, 3606.0], [33.6, 3609.0], [33.7, 3609.0], [33.8, 3609.0], [33.9, 3610.0], [34.0, 3611.0], [34.1, 3618.0], [34.2, 3621.0], [34.3, 3624.0], [34.4, 3633.0], [34.5, 3649.0], [34.6, 3675.0], [34.7, 3676.0], [34.8, 3678.0], [34.9, 3692.0], [35.0, 3702.0], [35.1, 3708.0], [35.2, 3708.0], [35.3, 3710.0], [35.4, 3711.0], [35.5, 3725.0], [35.6, 3726.0], [35.7, 3727.0], [35.8, 3728.0], [35.9, 3730.0], [36.0, 3755.0], [36.1, 3766.0], [36.2, 3772.0], [36.3, 3781.0], [36.4, 3788.0], [36.5, 3788.0], [36.6, 3789.0], [36.7, 3793.0], [36.8, 3794.0], [36.9, 3798.0], [37.0, 3799.0], [37.1, 3805.0], [37.2, 3806.0], [37.3, 3807.0], [37.4, 3808.0], [37.5, 3810.0], [37.6, 3814.0], [37.7, 3830.0], [37.8, 3840.0], [37.9, 3875.0], [38.0, 3879.0], [38.1, 3884.0], [38.2, 3891.0], [38.3, 3894.0], [38.4, 3894.0], [38.5, 3895.0], [38.6, 3907.0], [38.7, 3909.0], [38.8, 3911.0], [38.9, 3919.0], [39.0, 3936.0], [39.1, 3965.0], [39.2, 3972.0], [39.3, 3985.0], [39.4, 4002.0], [39.5, 4004.0], [39.6, 4012.0], [39.7, 4016.0], [39.8, 4018.0], [39.9, 4019.0], [40.0, 4022.0], [40.1, 4023.0], [40.2, 4074.0], [40.3, 4077.0], [40.4, 4088.0], [40.5, 4092.0], [40.6, 4092.0], [40.7, 4092.0], [40.8, 4096.0], [40.9, 4099.0], [41.0, 4101.0], [41.1, 4102.0], [41.2, 4104.0], [41.3, 4106.0], [41.4, 4110.0], [41.5, 4111.0], [41.6, 4112.0], [41.7, 4115.0], [41.8, 4120.0], [41.9, 4123.0], [42.0, 4128.0], [42.1, 4134.0], [42.2, 4137.0], [42.3, 4165.0], [42.4, 4171.0], [42.5, 4178.0], [42.6, 4179.0], [42.7, 4184.0], [42.8, 4184.0], [42.9, 4196.0], [43.0, 4199.0], [43.1, 4209.0], [43.2, 4275.0], [43.3, 4282.0], [43.4, 4286.0], [43.5, 4286.0], [43.6, 4291.0], [43.7, 4294.0], [43.8, 4298.0], [43.9, 4299.0], [44.0, 4304.0], [44.1, 4306.0], [44.2, 4311.0], [44.3, 4311.0], [44.4, 4318.0], [44.5, 4319.0], [44.6, 4340.0], [44.7, 4363.0], [44.8, 4365.0], [44.9, 4365.0], [45.0, 4369.0], [45.1, 4383.0], [45.2, 4391.0], [45.3, 4398.0], [45.4, 4399.0], [45.5, 4400.0], [45.6, 4408.0], [45.7, 4409.0], [45.8, 4409.0], [45.9, 4410.0], [46.0, 4411.0], [46.1, 4413.0], [46.2, 4420.0], [46.3, 4422.0], [46.4, 4427.0], [46.5, 4431.0], [46.6, 4435.0], [46.7, 4443.0], [46.8, 4461.0], [46.9, 4461.0], [47.0, 4474.0], [47.1, 4480.0], [47.2, 4486.0], [47.3, 4487.0], [47.4, 4489.0], [47.5, 4492.0], [47.6, 4496.0], [47.7, 4496.0], [47.8, 4497.0], [47.9, 4500.0], [48.0, 4503.0], [48.1, 4505.0], [48.2, 4507.0], [48.3, 4522.0], [48.4, 4523.0], [48.5, 4525.0], [48.6, 4528.0], [48.7, 4540.0], [48.8, 4568.0], [48.9, 4576.0], [49.0, 4578.0], [49.1, 4578.0], [49.2, 4578.0], [49.3, 4579.0], [49.4, 4582.0], [49.5, 4583.0], [49.6, 4589.0], [49.7, 4594.0], [49.8, 4602.0], [49.9, 4602.0], [50.0, 4602.0], [50.1, 4605.0], [50.2, 4607.0], [50.3, 4615.0], [50.4, 4616.0], [50.5, 4617.0], [50.6, 4621.0], [50.7, 4622.0], [50.8, 4628.0], [50.9, 4634.0], [51.0, 4646.0], [51.1, 4670.0], [51.2, 4672.0], [51.3, 4673.0], [51.4, 4679.0], [51.5, 4680.0], [51.6, 4680.0], [51.7, 4681.0], [51.8, 4681.0], [51.9, 4683.0], [52.0, 4686.0], [52.1, 4689.0], [52.2, 4689.0], [52.3, 4691.0], [52.4, 4697.0], [52.5, 4706.0], [52.6, 4706.0], [52.7, 4709.0], [52.8, 4711.0], [52.9, 4717.0], [53.0, 4721.0], [53.1, 4723.0], [53.2, 4761.0], [53.3, 4782.0], [53.4, 4785.0], [53.5, 4790.0], [53.6, 4790.0], [53.7, 4790.0], [53.8, 4792.0], [53.9, 4805.0], [54.0, 4823.0], [54.1, 4828.0], [54.2, 4839.0], [54.3, 4878.0], [54.4, 4887.0], [54.5, 4889.0], [54.6, 4896.0], [54.7, 4898.0], [54.8, 4911.0], [54.9, 4913.0], [55.0, 4915.0], [55.1, 4921.0], [55.2, 4976.0], [55.3, 4989.0], [55.4, 4994.0], [55.5, 4999.0], [55.6, 5001.0], [55.7, 5004.0], [55.8, 5004.0], [55.9, 5004.0], [56.0, 5008.0], [56.1, 5009.0], [56.2, 5009.0], [56.3, 5018.0], [56.4, 5043.0], [56.5, 5057.0], [56.6, 5074.0], [56.7, 5087.0], [56.8, 5087.0], [56.9, 5091.0], [57.0, 5092.0], [57.1, 5095.0], [57.2, 5102.0], [57.3, 5102.0], [57.4, 5103.0], [57.5, 5108.0], [57.6, 5109.0], [57.7, 5111.0], [57.8, 5116.0], [57.9, 5121.0], [58.0, 5125.0], [58.1, 5159.0], [58.2, 5164.0], [58.3, 5184.0], [58.4, 5186.0], [58.5, 5187.0], [58.6, 5192.0], [58.7, 5194.0], [58.8, 5199.0], [58.9, 5202.0], [59.0, 5211.0], [59.1, 5212.0], [59.2, 5214.0], [59.3, 5220.0], [59.4, 5226.0], [59.5, 5236.0], [59.6, 5246.0], [59.7, 5265.0], [59.8, 5269.0], [59.9, 5271.0], [60.0, 5280.0], [60.1, 5285.0], [60.2, 5293.0], [60.3, 5293.0], [60.4, 5295.0], [60.5, 5311.0], [60.6, 5315.0], [60.7, 5320.0], [60.8, 5330.0], [60.9, 5368.0], [61.0, 5372.0], [61.1, 5377.0], [61.2, 5380.0], [61.3, 5384.0], [61.4, 5384.0], [61.5, 5387.0], [61.6, 5388.0], [61.7, 5393.0], [61.8, 5396.0], [61.9, 5403.0], [62.0, 5404.0], [62.1, 5404.0], [62.2, 5409.0], [62.3, 5410.0], [62.4, 5414.0], [62.5, 5428.0], [62.6, 5428.0], [62.7, 5431.0], [62.8, 5452.0], [62.9, 5460.0], [63.0, 5467.0], [63.1, 5475.0], [63.2, 5475.0], [63.3, 5485.0], [63.4, 5494.0], [63.5, 5497.0], [63.6, 5503.0], [63.7, 5503.0], [63.8, 5504.0], [63.9, 5521.0], [64.0, 5528.0], [64.1, 5529.0], [64.2, 5542.0], [64.3, 5560.0], [64.4, 5564.0], [64.5, 5569.0], [64.6, 5575.0], [64.7, 5582.0], [64.8, 5583.0], [64.9, 5583.0], [65.0, 5594.0], [65.1, 5596.0], [65.2, 5599.0], [65.3, 5601.0], [65.4, 5602.0], [65.5, 5602.0], [65.6, 5611.0], [65.7, 5614.0], [65.8, 5616.0], [65.9, 5621.0], [66.0, 5624.0], [66.1, 5629.0], [66.2, 5631.0], [66.3, 5643.0], [66.4, 5648.0], [66.5, 5682.0], [66.6, 5684.0], [66.7, 5687.0], [66.8, 5691.0], [66.9, 5699.0], [67.0, 5702.0], [67.1, 5705.0], [67.2, 5708.0], [67.3, 5718.0], [67.4, 5721.0], [67.5, 5721.0], [67.6, 5722.0], [67.7, 5723.0], [67.8, 5725.0], [67.9, 5769.0], [68.0, 5770.0], [68.1, 5781.0], [68.2, 5800.0], [68.3, 5801.0], [68.4, 5804.0], [68.5, 5806.0], [68.6, 5807.0], [68.7, 5829.0], [68.8, 5830.0], [68.9, 5842.0], [69.0, 5861.0], [69.1, 5892.0], [69.2, 5892.0], [69.3, 5893.0], [69.4, 5897.0], [69.5, 5900.0], [69.6, 5901.0], [69.7, 5904.0], [69.8, 5926.0], [69.9, 5929.0], [70.0, 5935.0], [70.1, 5998.0], [70.2, 6000.0], [70.3, 6004.0], [70.4, 6010.0], [70.5, 6019.0], [70.6, 6023.0], [70.7, 6023.0], [70.8, 6036.0], [70.9, 6059.0], [71.0, 6063.0], [71.1, 6071.0], [71.2, 6096.0], [71.3, 6096.0], [71.4, 6103.0], [71.5, 6104.0], [71.6, 6110.0], [71.7, 6110.0], [71.8, 6115.0], [71.9, 6156.0], [72.0, 6162.0], [72.1, 6162.0], [72.2, 6176.0], [72.3, 6193.0], [72.4, 6198.0], [72.5, 6206.0], [72.6, 6211.0], [72.7, 6225.0], [72.8, 6267.0], [72.9, 6279.0], [73.0, 6279.0], [73.1, 6287.0], [73.2, 6292.0], [73.3, 6297.0], [73.4, 6297.0], [73.5, 6303.0], [73.6, 6306.0], [73.7, 6309.0], [73.8, 6317.0], [73.9, 6361.0], [74.0, 6370.0], [74.1, 6370.0], [74.2, 6374.0], [74.3, 6379.0], [74.4, 6389.0], [74.5, 6390.0], [74.6, 6398.0], [74.7, 6413.0], [74.8, 6415.0], [74.9, 6416.0], [75.0, 6468.0], [75.1, 6471.0], [75.2, 6478.0], [75.3, 6480.0], [75.4, 6494.0], [75.5, 6495.0], [75.6, 6499.0], [75.7, 6508.0], [75.8, 6508.0], [75.9, 6509.0], [76.0, 6513.0], [76.1, 6518.0], [76.2, 6580.0], [76.3, 6582.0], [76.4, 6583.0], [76.5, 6595.0], [76.6, 6597.0], [76.7, 6597.0], [76.8, 6604.0], [76.9, 6609.0], [77.0, 6617.0], [77.1, 6675.0], [77.2, 6676.0], [77.3, 6682.0], [77.4, 6683.0], [77.5, 6687.0], [77.6, 6695.0], [77.7, 6702.0], [77.8, 6709.0], [77.9, 6711.0], [78.0, 6717.0], [78.1, 6719.0], [78.2, 6721.0], [78.3, 6723.0], [78.4, 6726.0], [78.5, 6731.0], [78.6, 6735.0], [78.7, 6748.0], [78.8, 6755.0], [78.9, 6772.0], [79.0, 6775.0], [79.1, 6775.0], [79.2, 6792.0], [79.3, 6794.0], [79.4, 6851.0], [79.5, 6902.0], [79.6, 6918.0], [79.7, 6936.0], [79.8, 6938.0], [79.9, 6940.0], [80.0, 6961.0], [80.1, 6962.0], [80.2, 6972.0], [80.3, 6982.0], [80.4, 6985.0], [80.5, 6988.0], [80.6, 6988.0], [80.7, 6990.0], [80.8, 6991.0], [80.9, 6991.0], [81.0, 6995.0], [81.1, 6995.0], [81.2, 7006.0], [81.3, 7012.0], [81.4, 7030.0], [81.5, 7031.0], [81.6, 7043.0], [81.7, 7077.0], [81.8, 7098.0], [81.9, 7100.0], [82.0, 7126.0], [82.1, 7156.0], [82.2, 7157.0], [82.3, 7168.0], [82.4, 7169.0], [82.5, 7174.0], [82.6, 7198.0], [82.7, 7204.0], [82.8, 7209.0], [82.9, 7209.0], [83.0, 7213.0], [83.1, 7214.0], [83.2, 7248.0], [83.3, 7284.0], [83.4, 7285.0], [83.5, 7287.0], [83.6, 7288.0], [83.7, 7289.0], [83.8, 7290.0], [83.9, 7294.0], [84.0, 7295.0], [84.1, 7295.0], [84.2, 7298.0], [84.3, 7308.0], [84.4, 7313.0], [84.5, 7319.0], [84.6, 7319.0], [84.7, 7332.0], [84.8, 7333.0], [84.9, 7333.0], [85.0, 7334.0], [85.1, 7334.0], [85.2, 7353.0], [85.3, 7368.0], [85.4, 7379.0], [85.5, 7397.0], [85.6, 7419.0], [85.7, 7438.0], [85.8, 7456.0], [85.9, 7475.0], [86.0, 7478.0], [86.1, 7482.0], [86.2, 7494.0], [86.3, 7495.0], [86.4, 7511.0], [86.5, 7519.0], [86.6, 7522.0], [86.7, 7535.0], [86.8, 7538.0], [86.9, 7563.0], [87.0, 7566.0], [87.1, 7572.0], [87.2, 7587.0], [87.3, 7588.0], [87.4, 7590.0], [87.5, 7594.0], [87.6, 7625.0], [87.7, 7630.0], [87.8, 7636.0], [87.9, 7692.0], [88.0, 7697.0], [88.1, 7729.0], [88.2, 7747.0], [88.3, 7749.0], [88.4, 7751.0], [88.5, 7772.0], [88.6, 7776.0], [88.7, 7785.0], [88.8, 7805.0], [88.9, 7875.0], [89.0, 7895.0], [89.1, 7907.0], [89.2, 7908.0], [89.3, 7961.0], [89.4, 7965.0], [89.5, 7979.0], [89.6, 8004.0], [89.7, 8010.0], [89.8, 8094.0], [89.9, 8135.0], [90.0, 8136.0], [90.1, 8220.0], [90.2, 8279.0], [90.3, 8281.0], [90.4, 8303.0], [90.5, 8313.0], [90.6, 8318.0], [90.7, 8366.0], [90.8, 8371.0], [90.9, 8379.0], [91.0, 8394.0], [91.1, 8428.0], [91.2, 8436.0], [91.3, 8471.0], [91.4, 8519.0], [91.5, 8539.0], [91.6, 8568.0], [91.7, 8575.0], [91.8, 8589.0], [91.9, 8594.0], [92.0, 8608.0], [92.1, 8612.0], [92.2, 8614.0], [92.3, 8616.0], [92.4, 8617.0], [92.5, 8707.0], [92.6, 8730.0], [92.7, 8786.0], [92.8, 8811.0], [92.9, 8817.0], [93.0, 8823.0], [93.1, 8838.0], [93.2, 8885.0], [93.3, 8894.0], [93.4, 8899.0], [93.5, 8904.0], [93.6, 8945.0], [93.7, 8960.0], [93.8, 8981.0], [93.9, 8986.0], [94.0, 8996.0], [94.1, 8999.0], [94.2, 9002.0], [94.3, 9146.0], [94.4, 9181.0], [94.5, 9286.0], [94.6, 9335.0], [94.7, 9378.0], [94.8, 9392.0], [94.9, 9427.0], [95.0, 9473.0], [95.1, 9486.0], [95.2, 9489.0], [95.3, 9501.0], [95.4, 9513.0], [95.5, 9573.0], [95.6, 9614.0], [95.7, 9894.0], [95.8, 9967.0], [95.9, 10011.0], [96.0, 10019.0], [96.1, 10072.0], [96.2, 10072.0], [96.3, 10074.0], [96.4, 10086.0], [96.5, 10095.0], [96.6, 10104.0], [96.7, 10109.0], [96.8, 10159.0], [96.9, 10167.0], [97.0, 10176.0], [97.1, 10188.0], [97.2, 10192.0], [97.3, 10194.0], [97.4, 10235.0], [97.5, 10253.0], [97.6, 10340.0], [97.7, 10705.0], [97.8, 10776.0], [97.9, 10799.0], [98.0, 10805.0], [98.1, 10857.0], [98.2, 10912.0], [98.3, 10918.0], [98.4, 10928.0], [98.5, 11147.0], [98.6, 11152.0], [98.7, 11221.0], [98.8, 11224.0], [98.9, 11269.0], [99.0, 11278.0], [99.1, 11290.0], [99.2, 11295.0], [99.3, 11302.0], [99.4, 11425.0], [99.5, 11716.0], [99.6, 11980.0], [99.7, 12263.0], [99.8, 12349.0], [99.9, 13074.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 12.0], [0.3, 12.0], [0.4, 24.0], [0.5, 80.0], [0.6, 80.0], [0.7, 107.0], [0.8, 305.0], [0.9, 604.0], [1.0, 679.0], [1.1, 680.0], [1.2, 716.0], [1.3, 720.0], [1.4, 720.0], [1.5, 723.0], [1.6, 726.0], [1.7, 753.0], [1.8, 778.0], [1.9, 779.0], [2.0, 798.0], [2.1, 805.0], [2.2, 805.0], [2.3, 807.0], [2.4, 812.0], [2.5, 816.0], [2.6, 831.0], [2.7, 887.0], [2.8, 892.0], [2.9, 894.0], [3.0, 896.0], [3.1, 899.0], [3.2, 902.0], [3.3, 904.0], [3.4, 912.0], [3.5, 912.0], [3.6, 913.0], [3.7, 914.0], [3.8, 923.0], [3.9, 930.0], [4.0, 936.0], [4.1, 965.0], [4.2, 979.0], [4.3, 980.0], [4.4, 1028.0], [4.5, 1100.0], [4.6, 1105.0], [4.7, 1116.0], [4.8, 1120.0], [4.9, 1122.0], [5.0, 1128.0], [5.1, 1136.0], [5.2, 1176.0], [5.3, 1179.0], [5.4, 1182.0], [5.5, 1187.0], [5.6, 1188.0], [5.7, 1190.0], [5.8, 1193.0], [5.9, 1195.0], [6.0, 1202.0], [6.1, 1203.0], [6.2, 1205.0], [6.3, 1206.0], [6.4, 1215.0], [6.5, 1219.0], [6.6, 1231.0], [6.7, 1282.0], [6.8, 1288.0], [6.9, 1289.0], [7.0, 1294.0], [7.1, 1313.0], [7.2, 1372.0], [7.3, 1380.0], [7.4, 1383.0], [7.5, 1387.0], [7.6, 1389.0], [7.7, 1395.0], [7.8, 1399.0], [7.9, 1400.0], [8.0, 1413.0], [8.1, 1422.0], [8.2, 1425.0], [8.3, 1506.0], [8.4, 1519.0], [8.5, 1519.0], [8.6, 1528.0], [8.7, 1600.0], [8.8, 1601.0], [8.9, 1604.0], [9.0, 1606.0], [9.1, 1609.0], [9.2, 1619.0], [9.3, 1635.0], [9.4, 1668.0], [9.5, 1681.0], [9.6, 1699.0], [9.7, 1699.0], [9.8, 1700.0], [9.9, 1707.0], [10.0, 1730.0], [10.1, 1733.0], [10.2, 1776.0], [10.3, 1790.0], [10.4, 1796.0], [10.5, 1809.0], [10.6, 1817.0], [10.7, 1825.0], [10.8, 1826.0], [10.9, 1828.0], [11.0, 1829.0], [11.1, 1870.0], [11.2, 1884.0], [11.3, 1894.0], [11.4, 1895.0], [11.5, 1901.0], [11.6, 1906.0], [11.7, 1909.0], [11.8, 1918.0], [11.9, 1921.0], [12.0, 1921.0], [12.1, 1929.0], [12.2, 1968.0], [12.3, 1994.0], [12.4, 2000.0], [12.5, 2001.0], [12.6, 2013.0], [12.7, 2014.0], [12.8, 2015.0], [12.9, 2017.0], [13.0, 2023.0], [13.1, 2028.0], [13.2, 2033.0], [13.3, 2081.0], [13.4, 2083.0], [13.5, 2083.0], [13.6, 2083.0], [13.7, 2086.0], [13.8, 2091.0], [13.9, 2094.0], [14.0, 2115.0], [14.1, 2116.0], [14.2, 2118.0], [14.3, 2175.0], [14.4, 2188.0], [14.5, 2190.0], [14.6, 2221.0], [14.7, 2268.0], [14.8, 2269.0], [14.9, 2270.0], [15.0, 2271.0], [15.1, 2272.0], [15.2, 2282.0], [15.3, 2283.0], [15.4, 2291.0], [15.5, 2294.0], [15.6, 2300.0], [15.7, 2300.0], [15.8, 2307.0], [15.9, 2316.0], [16.0, 2387.0], [16.1, 2388.0], [16.2, 2388.0], [16.3, 2390.0], [16.4, 2390.0], [16.5, 2395.0], [16.6, 2399.0], [16.7, 2406.0], [16.8, 2406.0], [16.9, 2413.0], [17.0, 2416.0], [17.1, 2420.0], [17.2, 2436.0], [17.3, 2457.0], [17.4, 2462.0], [17.5, 2478.0], [17.6, 2489.0], [17.7, 2503.0], [17.8, 2507.0], [17.9, 2508.0], [18.0, 2512.0], [18.1, 2528.0], [18.2, 2566.0], [18.3, 2577.0], [18.4, 2591.0], [18.5, 2599.0], [18.6, 2619.0], [18.7, 2632.0], [18.8, 2678.0], [18.9, 2694.0], [19.0, 2698.0], [19.1, 2765.0], [19.2, 2774.0], [19.3, 2776.0], [19.4, 2778.0], [19.5, 2780.0], [19.6, 2782.0], [19.7, 2782.0], [19.8, 2790.0], [19.9, 2793.0], [20.0, 2794.0], [20.1, 2798.0], [20.2, 2801.0], [20.3, 2808.0], [20.4, 2811.0], [20.5, 2812.0], [20.6, 2815.0], [20.7, 2833.0], [20.8, 2879.0], [20.9, 2892.0], [21.0, 2900.0], [21.1, 2902.0], [21.2, 2908.0], [21.3, 2908.0], [21.4, 2921.0], [21.5, 2923.0], [21.6, 2924.0], [21.7, 2927.0], [21.8, 2933.0], [21.9, 2953.0], [22.0, 2958.0], [22.1, 2970.0], [22.2, 2981.0], [22.3, 2985.0], [22.4, 2994.0], [22.5, 2997.0], [22.6, 2997.0], [22.7, 3000.0], [22.8, 3006.0], [22.9, 3007.0], [23.0, 3010.0], [23.1, 3019.0], [23.2, 3020.0], [23.3, 3025.0], [23.4, 3025.0], [23.5, 3027.0], [23.6, 3029.0], [23.7, 3030.0], [23.8, 3080.0], [23.9, 3083.0], [24.0, 3086.0], [24.1, 3097.0], [24.2, 3098.0], [24.3, 3108.0], [24.4, 3112.0], [24.5, 3178.0], [24.6, 3181.0], [24.7, 3181.0], [24.8, 3203.0], [24.9, 3206.0], [25.0, 3225.0], [25.1, 3226.0], [25.2, 3285.0], [25.3, 3299.0], [25.4, 3300.0], [25.5, 3303.0], [25.6, 3324.0], [25.7, 3326.0], [25.8, 3339.0], [25.9, 3375.0], [26.0, 3384.0], [26.1, 3400.0], [26.2, 3404.0], [26.3, 3411.0], [26.4, 3412.0], [26.5, 3418.0], [26.6, 3425.0], [26.7, 3475.0], [26.8, 3478.0], [26.9, 3483.0], [27.0, 3487.0], [27.1, 3493.0], [27.2, 3502.0], [27.3, 3506.0], [27.4, 3526.0], [27.5, 3531.0], [27.6, 3540.0], [27.7, 3566.0], [27.8, 3578.0], [27.9, 3579.0], [28.0, 3584.0], [28.1, 3587.0], [28.2, 3588.0], [28.3, 3592.0], [28.4, 3597.0], [28.5, 3601.0], [28.6, 3606.0], [28.7, 3610.0], [28.8, 3611.0], [28.9, 3612.0], [29.0, 3621.0], [29.1, 3625.0], [29.2, 3667.0], [29.3, 3676.0], [29.4, 3684.0], [29.5, 3688.0], [29.6, 3694.0], [29.7, 3695.0], [29.8, 3711.0], [29.9, 3720.0], [30.0, 3720.0], [30.1, 3793.0], [30.2, 3795.0], [30.3, 3796.0], [30.4, 3800.0], [30.5, 3800.0], [30.6, 3802.0], [30.7, 3803.0], [30.8, 3820.0], [30.9, 3897.0], [31.0, 3913.0], [31.1, 3968.0], [31.2, 3972.0], [31.3, 4010.0], [31.4, 4016.0], [31.5, 4018.0], [31.6, 4025.0], [31.7, 4032.0], [31.8, 4033.0], [31.9, 4045.0], [32.0, 4063.0], [32.1, 4077.0], [32.2, 4079.0], [32.3, 4093.0], [32.4, 4096.0], [32.5, 4112.0], [32.6, 4113.0], [32.7, 4114.0], [32.8, 4115.0], [32.9, 4129.0], [33.0, 4133.0], [33.1, 4142.0], [33.2, 4144.0], [33.3, 4175.0], [33.4, 4191.0], [33.5, 4202.0], [33.6, 4214.0], [33.7, 4258.0], [33.8, 4262.0], [33.9, 4268.0], [34.0, 4292.0], [34.1, 4294.0], [34.2, 4295.0], [34.3, 4295.0], [34.4, 4303.0], [34.5, 4305.0], [34.6, 4307.0], [34.7, 4314.0], [34.8, 4315.0], [34.9, 4319.0], [35.0, 4321.0], [35.1, 4322.0], [35.2, 4328.0], [35.3, 4329.0], [35.4, 4356.0], [35.5, 4358.0], [35.6, 4364.0], [35.7, 4383.0], [35.8, 4397.0], [35.9, 4409.0], [36.0, 4412.0], [36.1, 4414.0], [36.2, 4434.0], [36.3, 4440.0], [36.4, 4473.0], [36.5, 4480.0], [36.6, 4487.0], [36.7, 4495.0], [36.8, 4497.0], [36.9, 4498.0], [37.0, 4502.0], [37.1, 4507.0], [37.2, 4511.0], [37.3, 4518.0], [37.4, 4549.0], [37.5, 4570.0], [37.6, 4573.0], [37.7, 4579.0], [37.8, 4587.0], [37.9, 4594.0], [38.0, 4596.0], [38.1, 4601.0], [38.2, 4603.0], [38.3, 4607.0], [38.4, 4609.0], [38.5, 4609.0], [38.6, 4652.0], [38.7, 4658.0], [38.8, 4666.0], [38.9, 4668.0], [39.0, 4682.0], [39.1, 4694.0], [39.2, 4695.0], [39.3, 4695.0], [39.4, 4701.0], [39.5, 4710.0], [39.6, 4720.0], [39.7, 4728.0], [39.8, 4731.0], [39.9, 4731.0], [40.0, 4775.0], [40.1, 4795.0], [40.2, 4797.0], [40.3, 4799.0], [40.4, 4805.0], [40.5, 4806.0], [40.6, 4828.0], [40.7, 4867.0], [40.8, 4869.0], [40.9, 4884.0], [41.0, 4887.0], [41.1, 4899.0], [41.2, 4903.0], [41.3, 4906.0], [41.4, 4907.0], [41.5, 4910.0], [41.6, 4915.0], [41.7, 4916.0], [41.8, 4916.0], [41.9, 4917.0], [42.0, 4930.0], [42.1, 4933.0], [42.2, 4936.0], [42.3, 4945.0], [42.4, 4976.0], [42.5, 5001.0], [42.6, 5001.0], [42.7, 5003.0], [42.8, 5007.0], [42.9, 5013.0], [43.0, 5017.0], [43.1, 5034.0], [43.2, 5062.0], [43.3, 5070.0], [43.4, 5074.0], [43.5, 5074.0], [43.6, 5083.0], [43.7, 5093.0], [43.8, 5095.0], [43.9, 5096.0], [44.0, 5098.0], [44.1, 5102.0], [44.2, 5106.0], [44.3, 5110.0], [44.4, 5111.0], [44.5, 5117.0], [44.6, 5175.0], [44.7, 5179.0], [44.8, 5193.0], [44.9, 5199.0], [45.0, 5204.0], [45.1, 5269.0], [45.2, 5281.0], [45.3, 5291.0], [45.4, 5301.0], [45.5, 5320.0], [45.6, 5349.0], [45.7, 5368.0], [45.8, 5373.0], [45.9, 5382.0], [46.0, 5387.0], [46.1, 5397.0], [46.2, 5398.0], [46.3, 5401.0], [46.4, 5403.0], [46.5, 5410.0], [46.6, 5426.0], [46.7, 5428.0], [46.8, 5439.0], [46.9, 5461.0], [47.0, 5474.0], [47.1, 5478.0], [47.2, 5479.0], [47.3, 5480.0], [47.4, 5482.0], [47.5, 5482.0], [47.6, 5491.0], [47.7, 5492.0], [47.8, 5517.0], [47.9, 5540.0], [48.0, 5555.0], [48.1, 5595.0], [48.2, 5610.0], [48.3, 5612.0], [48.4, 5615.0], [48.5, 5627.0], [48.6, 5680.0], [48.7, 5681.0], [48.8, 5688.0], [48.9, 5712.0], [49.0, 5714.0], [49.1, 5721.0], [49.2, 5722.0], [49.3, 5728.0], [49.4, 5776.0], [49.5, 5779.0], [49.6, 5780.0], [49.7, 5786.0], [49.8, 5814.0], [49.9, 5815.0], [50.0, 5821.0], [50.1, 5846.0], [50.2, 5859.0], [50.3, 5865.0], [50.4, 5889.0], [50.5, 5907.0], [50.6, 5908.0], [50.7, 5917.0], [50.8, 5954.0], [50.9, 5993.0], [51.0, 5994.0], [51.1, 6000.0], [51.2, 6015.0], [51.3, 6030.0], [51.4, 6033.0], [51.5, 6118.0], [51.6, 6174.0], [51.7, 6181.0], [51.8, 6202.0], [51.9, 6213.0], [52.0, 6221.0], [52.1, 6265.0], [52.2, 6298.0], [52.3, 6300.0], [52.4, 6302.0], [52.5, 6314.0], [52.6, 6317.0], [52.7, 6330.0], [52.8, 6336.0], [52.9, 6340.0], [53.0, 6372.0], [53.1, 6399.0], [53.2, 6401.0], [53.3, 6411.0], [53.4, 6471.0], [53.5, 6508.0], [53.6, 6566.0], [53.7, 6572.0], [53.8, 6587.0], [53.9, 6600.0], [54.0, 6618.0], [54.1, 6641.0], [54.2, 6672.0], [54.3, 6706.0], [54.4, 6710.0], [54.5, 6749.0], [54.6, 6808.0], [54.7, 6818.0], [54.8, 6820.0], [54.9, 6841.0], [55.0, 6859.0], [55.1, 6877.0], [55.2, 6904.0], [55.3, 6904.0], [55.4, 6904.0], [55.5, 6918.0], [55.6, 6918.0], [55.7, 6924.0], [55.8, 6941.0], [55.9, 6989.0], [56.0, 6998.0], [56.1, 7000.0], [56.2, 7014.0], [56.3, 7100.0], [56.4, 7106.0], [56.5, 7112.0], [56.6, 7112.0], [56.7, 7117.0], [56.8, 7119.0], [56.9, 7123.0], [57.0, 7244.0], [57.1, 7263.0], [57.2, 7291.0], [57.3, 7297.0], [57.4, 7315.0], [57.5, 7321.0], [57.6, 7334.0], [57.7, 7425.0], [57.8, 7478.0], [57.9, 7487.0], [58.0, 7497.0], [58.1, 7520.0], [58.2, 7584.0], [58.3, 7613.0], [58.4, 7622.0], [58.5, 7623.0], [58.6, 7674.0], [58.7, 7688.0], [58.8, 7695.0], [58.9, 7704.0], [59.0, 7704.0], [59.1, 7708.0], [59.2, 7711.0], [59.3, 7711.0], [59.4, 7713.0], [59.5, 7721.0], [59.6, 7786.0], [59.7, 7809.0], [59.8, 7879.0], [59.9, 7887.0], [60.0, 7895.0], [60.1, 7900.0], [60.2, 7903.0], [60.3, 7918.0], [60.4, 7924.0], [60.5, 7925.0], [60.6, 7937.0], [60.7, 7968.0], [60.8, 7970.0], [60.9, 7972.0], [61.0, 7975.0], [61.1, 7993.0], [61.2, 8010.0], [61.3, 8014.0], [61.4, 8016.0], [61.5, 8017.0], [61.6, 8019.0], [61.7, 8024.0], [61.8, 8025.0], [61.9, 8076.0], [62.0, 8077.0], [62.1, 8086.0], [62.2, 8091.0], [62.3, 8095.0], [62.4, 8111.0], [62.5, 8112.0], [62.6, 8177.0], [62.7, 8203.0], [62.8, 8204.0], [62.9, 8221.0], [63.0, 8282.0], [63.1, 8306.0], [63.2, 8317.0], [63.3, 8318.0], [63.4, 8379.0], [63.5, 8396.0], [63.6, 8399.0], [63.7, 8411.0], [63.8, 8495.0], [63.9, 8527.0], [64.0, 8541.0], [64.1, 8551.0], [64.2, 8592.0], [64.3, 8616.0], [64.4, 8681.0], [64.5, 8705.0], [64.6, 8722.0], [64.7, 8812.0], [64.8, 8821.0], [64.9, 8822.0], [65.0, 8886.0], [65.1, 8893.0], [65.2, 8902.0], [65.3, 8906.0], [65.4, 8996.0], [65.5, 9066.0], [65.6, 9068.0], [65.7, 9079.0], [65.8, 9091.0], [65.9, 9117.0], [66.0, 9192.0], [66.1, 9200.0], [66.2, 9203.0], [66.3, 9306.0], [66.4, 9315.0], [66.5, 9323.0], [66.6, 9382.0], [66.7, 9384.0], [66.8, 9386.0], [66.9, 9459.0], [67.0, 9466.0], [67.1, 9480.0], [67.2, 9509.0], [67.3, 9537.0], [67.4, 9557.0], [67.5, 9612.0], [67.6, 9666.0], [67.7, 9680.0], [67.8, 9706.0], [67.9, 9707.0], [68.0, 9731.0], [68.1, 9802.0], [68.2, 9895.0], [68.3, 9899.0], [68.4, 9912.0], [68.5, 9913.0], [68.6, 9922.0], [68.7, 9923.0], [68.8, 9977.0], [68.9, 9981.0], [69.0, 9989.0], [69.1, 10004.0], [69.2, 10008.0], [69.3, 10017.0], [69.4, 10032.0], [69.5, 10060.0], [69.6, 10123.0], [69.7, 10191.0], [69.8, 10192.0], [69.9, 10205.0], [70.0, 10214.0], [70.1, 10238.0], [70.2, 10239.0], [70.3, 10282.0], [70.4, 10299.0], [70.5, 10338.0], [70.6, 10376.0], [70.7, 10404.0], [70.8, 10410.0], [70.9, 10422.0], [71.0, 10423.0], [71.1, 10508.0], [71.2, 10511.0], [71.3, 10591.0], [71.4, 10680.0], [71.5, 10697.0], [71.6, 10708.0], [71.7, 10711.0], [71.8, 10724.0], [71.9, 10734.0], [72.0, 10768.0], [72.1, 10830.0], [72.2, 10839.0], [72.3, 10885.0], [72.4, 10918.0], [72.5, 10922.0], [72.6, 11007.0], [72.7, 11023.0], [72.8, 11036.0], [72.9, 11052.0], [73.0, 11072.0], [73.1, 11092.0], [73.2, 11097.0], [73.3, 11098.0], [73.4, 11109.0], [73.5, 11133.0], [73.6, 11138.0], [73.7, 11158.0], [73.8, 11202.0], [73.9, 11213.0], [74.0, 11298.0], [74.1, 11309.0], [74.2, 11310.0], [74.3, 11396.0], [74.4, 11423.0], [74.5, 11437.0], [74.6, 11527.0], [74.7, 11538.0], [74.8, 11593.0], [74.9, 11605.0], [75.0, 11612.0], [75.1, 11615.0], [75.2, 11629.0], [75.3, 11633.0], [75.4, 11703.0], [75.5, 11734.0], [75.6, 11802.0], [75.7, 11803.0], [75.8, 11821.0], [75.9, 11926.0], [76.0, 11926.0], [76.1, 12000.0], [76.2, 12000.0], [76.3, 12005.0], [76.4, 12036.0], [76.5, 12062.0], [76.6, 12102.0], [76.7, 12117.0], [76.8, 12191.0], [76.9, 12195.0], [77.0, 12196.0], [77.1, 12209.0], [77.2, 12214.0], [77.3, 12237.0], [77.4, 12293.0], [77.5, 12367.0], [77.6, 12381.0], [77.7, 12392.0], [77.8, 12400.0], [77.9, 12417.0], [78.0, 12428.0], [78.1, 12610.0], [78.2, 12708.0], [78.3, 12768.0], [78.4, 12788.0], [78.5, 12824.0], [78.6, 12864.0], [78.7, 12877.0], [78.8, 12906.0], [78.9, 12907.0], [79.0, 12910.0], [79.1, 12980.0], [79.2, 12992.0], [79.3, 12997.0], [79.4, 13012.0], [79.5, 13024.0], [79.6, 13074.0], [79.7, 13115.0], [79.8, 13119.0], [79.9, 13180.0], [80.0, 13185.0], [80.1, 13217.0], [80.2, 13221.0], [80.3, 13286.0], [80.4, 13298.0], [80.5, 13346.0], [80.6, 13384.0], [80.7, 13499.0], [80.8, 13515.0], [80.9, 13563.0], [81.0, 13584.0], [81.1, 13607.0], [81.2, 13633.0], [81.3, 13635.0], [81.4, 13682.0], [81.5, 13733.0], [81.6, 13809.0], [81.7, 13891.0], [81.8, 13893.0], [81.9, 13923.0], [82.0, 14008.0], [82.1, 14025.0], [82.2, 14042.0], [82.3, 14108.0], [82.4, 14139.0], [82.5, 14245.0], [82.6, 14303.0], [82.7, 14307.0], [82.8, 14314.0], [82.9, 14318.0], [83.0, 14329.0], [83.1, 14429.0], [83.2, 14445.0], [83.3, 14494.0], [83.4, 14527.0], [83.5, 14543.0], [83.6, 14575.0], [83.7, 14578.0], [83.8, 14619.0], [83.9, 14705.0], [84.0, 14738.0], [84.1, 14877.0], [84.2, 14901.0], [84.3, 14918.0], [84.4, 14987.0], [84.5, 14990.0], [84.6, 14998.0], [84.7, 15005.0], [84.8, 15011.0], [84.9, 15015.0], [85.0, 15019.0], [85.1, 15064.0], [85.2, 15069.0], [85.3, 15086.0], [85.4, 15131.0], [85.5, 15167.0], [85.6, 15188.0], [85.7, 15208.0], [85.8, 15245.0], [85.9, 15273.0], [86.0, 15306.0], [86.1, 15309.0], [86.2, 15311.0], [86.3, 15318.0], [86.4, 15366.0], [86.5, 15378.0], [86.6, 15512.0], [86.7, 15517.0], [86.8, 15519.0], [86.9, 15554.0], [87.0, 15585.0], [87.1, 15589.0], [87.2, 15614.0], [87.3, 15708.0], [87.4, 15816.0], [87.5, 15835.0], [87.6, 15838.0], [87.7, 15879.0], [87.8, 15972.0], [87.9, 15985.0], [88.0, 16093.0], [88.1, 16207.0], [88.2, 16216.0], [88.3, 16241.0], [88.4, 16275.0], [88.5, 16284.0], [88.6, 16286.0], [88.7, 16302.0], [88.8, 16305.0], [88.9, 16315.0], [89.0, 16350.0], [89.1, 16385.0], [89.2, 16402.0], [89.3, 16417.0], [89.4, 16435.0], [89.5, 16436.0], [89.6, 16462.0], [89.7, 16464.0], [89.8, 16487.0], [89.9, 16493.0], [90.0, 16567.0], [90.1, 16593.0], [90.2, 16690.0], [90.3, 16697.0], [90.4, 16724.0], [90.5, 16810.0], [90.6, 16917.0], [90.7, 16989.0], [90.8, 17037.0], [90.9, 17055.0], [91.0, 17110.0], [91.1, 17178.0], [91.2, 17202.0], [91.3, 17290.0], [91.4, 17333.0], [91.5, 17380.0], [91.6, 17482.0], [91.7, 17507.0], [91.8, 17578.0], [91.9, 17666.0], [92.0, 17674.0], [92.1, 17702.0], [92.2, 17722.0], [92.3, 17756.0], [92.4, 17823.0], [92.5, 17881.0], [92.6, 17914.0], [92.7, 18088.0], [92.8, 18135.0], [92.9, 18227.0], [93.0, 18293.0], [93.1, 18316.0], [93.2, 18411.0], [93.3, 18455.0], [93.4, 18496.0], [93.5, 18530.0], [93.6, 18650.0], [93.7, 18671.0], [93.8, 18800.0], [93.9, 18918.0], [94.0, 19029.0], [94.1, 19195.0], [94.2, 19211.0], [94.3, 19319.0], [94.4, 19321.0], [94.5, 19363.0], [94.6, 19421.0], [94.7, 19499.0], [94.8, 19505.0], [94.9, 19506.0], [95.0, 19507.0], [95.1, 20002.0], [95.2, 20067.0], [95.3, 20102.0], [95.4, 20190.0], [95.5, 20201.0], [95.6, 20216.0], [95.7, 20335.0], [95.8, 20482.0], [95.9, 20495.0], [96.0, 20509.0], [96.1, 20605.0], [96.2, 20970.0], [96.3, 20973.0], [96.4, 20989.0], [96.5, 21016.0], [96.6, 21201.0], [96.7, 21371.0], [96.8, 21633.0], [96.9, 21862.0], [97.0, 21906.0], [97.1, 22047.0], [97.2, 22128.0], [97.3, 22376.0], [97.4, 22417.0], [97.5, 22427.0], [97.6, 22528.0], [97.7, 22701.0], [97.8, 22826.0], [97.9, 23405.0], [98.0, 23700.0], [98.1, 23782.0], [98.2, 23791.0], [98.3, 24197.0], [98.4, 24225.0], [98.5, 24255.0], [98.6, 24796.0], [98.7, 24931.0], [98.8, 24975.0], [98.9, 24982.0], [99.0, 24999.0], [99.1, 25155.0], [99.2, 25417.0], [99.3, 25994.0], [99.4, 26481.0], [99.5, 26504.0], [99.6, 27594.0], [99.7, 27614.0], [99.8, 28683.0], [99.9, 29214.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 165.0, "series": [{"data": [[0.0, 165.0], [600.0, 21.0], [700.0, 34.0], [800.0, 30.0], [900.0, 6.0], [1000.0, 2.0], [1100.0, 1.0], [1200.0, 18.0], [1300.0, 17.0], [1400.0, 24.0], [1500.0, 28.0], [1600.0, 9.0], [1700.0, 14.0], [1800.0, 12.0], [1900.0, 9.0], [2000.0, 13.0], [2100.0, 14.0], [2300.0, 3.0], [2200.0, 7.0], [2400.0, 7.0], [2500.0, 12.0], [2600.0, 15.0], [2700.0, 18.0], [2800.0, 5.0], [2900.0, 8.0], [3000.0, 12.0], [3100.0, 16.0], [3200.0, 20.0], [3300.0, 12.0], [3400.0, 11.0], [3500.0, 6.0], [3700.0, 12.0], [3600.0, 8.0], [3800.0, 13.0], [3900.0, 6.0], [4000.0, 8.0], [4100.0, 10.0], [4300.0, 12.0], [4200.0, 9.0], [4600.0, 8.0], [4400.0, 9.0], [4500.0, 5.0], [4700.0, 17.0], [4800.0, 6.0], [5100.0, 5.0], [4900.0, 4.0], [5000.0, 8.0], [5200.0, 15.0], [5300.0, 9.0], [5400.0, 5.0], [5600.0, 3.0], [5500.0, 6.0], [5700.0, 3.0], [5800.0, 1.0], [6000.0, 3.0], [6100.0, 4.0], [5900.0, 4.0], [6300.0, 5.0], [6200.0, 4.0], [6400.0, 3.0], [6600.0, 9.0], [6500.0, 4.0], [6700.0, 6.0], [6900.0, 8.0], [6800.0, 6.0], [7100.0, 5.0], [7000.0, 2.0], [7400.0, 4.0], [7200.0, 6.0], [7300.0, 4.0], [7600.0, 5.0], [7500.0, 3.0], [7900.0, 1.0], [7800.0, 2.0], [7700.0, 2.0], [8000.0, 2.0], [8100.0, 2.0], [8700.0, 1.0], [8600.0, 1.0], [8400.0, 1.0], [8300.0, 2.0], [9100.0, 1.0], [8800.0, 6.0], [9000.0, 3.0], [8900.0, 3.0], [9200.0, 1.0], [9700.0, 1.0], [9500.0, 1.0], [9400.0, 2.0], [9800.0, 3.0], [100.0, 50.0], [200.0, 33.0], [300.0, 13.0], [400.0, 11.0], [500.0, 22.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[0.0, 8.0], [300.0, 4.0], [400.0, 3.0], [500.0, 4.0], [600.0, 9.0], [700.0, 13.0], [800.0, 11.0], [900.0, 21.0], [1000.0, 3.0], [1100.0, 4.0], [1200.0, 7.0], [1300.0, 5.0], [1400.0, 12.0], [1500.0, 34.0], [1600.0, 17.0], [1700.0, 7.0], [1800.0, 3.0], [1900.0, 14.0], [2000.0, 35.0], [2100.0, 15.0], [2200.0, 26.0], [2300.0, 18.0], [2400.0, 22.0], [2500.0, 30.0], [2600.0, 23.0], [2700.0, 28.0], [2800.0, 21.0], [2900.0, 24.0], [3000.0, 25.0], [3100.0, 25.0], [3200.0, 29.0], [3300.0, 27.0], [3400.0, 18.0], [3500.0, 19.0], [3700.0, 20.0], [3600.0, 20.0], [3800.0, 9.0], [3900.0, 17.0], [4000.0, 17.0], [4200.0, 13.0], [4300.0, 9.0], [4100.0, 8.0], [4400.0, 12.0], [4600.0, 13.0], [4500.0, 15.0], [4700.0, 9.0], [4800.0, 10.0], [5100.0, 9.0], [4900.0, 7.0], [5000.0, 10.0], [5200.0, 18.0], [5300.0, 13.0], [5500.0, 9.0], [5600.0, 8.0], [5400.0, 18.0], [5700.0, 14.0], [5800.0, 6.0], [6000.0, 14.0], [6100.0, 6.0], [5900.0, 8.0], [6300.0, 3.0], [6200.0, 5.0], [6500.0, 11.0], [6600.0, 4.0], [6400.0, 2.0], [6700.0, 3.0], [6800.0, 5.0], [6900.0, 4.0], [7100.0, 7.0], [7000.0, 10.0], [7300.0, 5.0], [7400.0, 4.0], [7200.0, 2.0], [7500.0, 3.0], [7600.0, 7.0], [7800.0, 6.0], [7700.0, 2.0], [7900.0, 1.0], [8000.0, 5.0], [8100.0, 1.0], [8700.0, 2.0], [8400.0, 3.0], [8200.0, 3.0], [8500.0, 1.0], [8300.0, 1.0], [8900.0, 5.0], [9000.0, 2.0], [9100.0, 1.0], [8800.0, 1.0], [9400.0, 3.0], [9500.0, 2.0], [9700.0, 3.0], [9300.0, 1.0], [9800.0, 2.0], [9900.0, 2.0], [10100.0, 1.0], [10500.0, 1.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[0.0, 10.0], [100.0, 1.0], [300.0, 2.0], [400.0, 2.0], [600.0, 8.0], [700.0, 9.0], [800.0, 9.0], [900.0, 11.0], [1000.0, 5.0], [1100.0, 1.0], [1200.0, 7.0], [1300.0, 6.0], [1400.0, 7.0], [1500.0, 9.0], [1600.0, 22.0], [1700.0, 7.0], [1800.0, 5.0], [1900.0, 9.0], [2000.0, 13.0], [2100.0, 15.0], [2200.0, 21.0], [2300.0, 11.0], [2400.0, 4.0], [2500.0, 10.0], [2600.0, 18.0], [2800.0, 9.0], [2700.0, 20.0], [2900.0, 18.0], [3000.0, 18.0], [3100.0, 4.0], [3200.0, 18.0], [3300.0, 14.0], [3400.0, 8.0], [3500.0, 3.0], [3700.0, 21.0], [3600.0, 15.0], [3800.0, 15.0], [3900.0, 8.0], [4000.0, 16.0], [4200.0, 9.0], [4300.0, 15.0], [4100.0, 21.0], [4500.0, 19.0], [4400.0, 24.0], [4600.0, 27.0], [4700.0, 14.0], [4800.0, 9.0], [4900.0, 8.0], [5000.0, 16.0], [5100.0, 17.0], [5200.0, 16.0], [5300.0, 14.0], [5600.0, 17.0], [5500.0, 17.0], [5400.0, 17.0], [5700.0, 12.0], [5800.0, 13.0], [5900.0, 7.0], [6000.0, 12.0], [6100.0, 11.0], [6300.0, 12.0], [6200.0, 10.0], [6600.0, 9.0], [6500.0, 12.0], [6400.0, 10.0], [6900.0, 17.0], [6700.0, 17.0], [6800.0, 1.0], [7000.0, 7.0], [7100.0, 8.0], [7400.0, 8.0], [7200.0, 16.0], [7300.0, 13.0], [7500.0, 12.0], [7600.0, 5.0], [7700.0, 7.0], [7900.0, 5.0], [7800.0, 3.0], [8000.0, 3.0], [8100.0, 2.0], [8700.0, 3.0], [8600.0, 5.0], [8300.0, 7.0], [8200.0, 3.0], [8400.0, 3.0], [8500.0, 6.0], [8800.0, 7.0], [8900.0, 7.0], [9200.0, 1.0], [9000.0, 1.0], [9100.0, 2.0], [9300.0, 3.0], [9400.0, 4.0], [9500.0, 3.0], [9600.0, 1.0], [10000.0, 7.0], [10100.0, 8.0], [9900.0, 1.0], [9800.0, 1.0], [10200.0, 2.0], [10700.0, 3.0], [10300.0, 1.0], [11200.0, 6.0], [11100.0, 2.0], [10800.0, 2.0], [10900.0, 3.0], [11400.0, 1.0], [11300.0, 1.0], [11700.0, 1.0], [11900.0, 1.0], [12200.0, 1.0], [12300.0, 1.0], [13000.0, 1.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[0.0, 7.0], [100.0, 1.0], [300.0, 1.0], [600.0, 3.0], [700.0, 8.0], [800.0, 11.0], [900.0, 12.0], [1000.0, 2.0], [1100.0, 15.0], [1200.0, 11.0], [1300.0, 8.0], [1400.0, 4.0], [1500.0, 4.0], [1600.0, 11.0], [1700.0, 7.0], [1800.0, 10.0], [1900.0, 9.0], [2000.0, 16.0], [2100.0, 6.0], [2300.0, 11.0], [2200.0, 10.0], [2400.0, 10.0], [2500.0, 9.0], [2600.0, 5.0], [2700.0, 10.0], [2800.0, 8.0], [2900.0, 17.0], [3000.0, 16.0], [3100.0, 5.0], [3200.0, 6.0], [3300.0, 7.0], [3400.0, 11.0], [3500.0, 13.0], [3600.0, 13.0], [3700.0, 6.0], [3800.0, 6.0], [3900.0, 3.0], [4000.0, 12.0], [4200.0, 9.0], [4100.0, 10.0], [4300.0, 15.0], [4400.0, 11.0], [4500.0, 11.0], [4600.0, 13.0], [4800.0, 8.0], [4700.0, 10.0], [5100.0, 9.0], [5000.0, 16.0], [4900.0, 13.0], [5200.0, 4.0], [5300.0, 9.0], [5600.0, 7.0], [5400.0, 15.0], [5500.0, 4.0], [5700.0, 9.0], [5800.0, 7.0], [5900.0, 6.0], [6000.0, 4.0], [6100.0, 3.0], [6300.0, 9.0], [6200.0, 5.0], [6600.0, 4.0], [6400.0, 3.0], [6500.0, 4.0], [6700.0, 3.0], [6900.0, 9.0], [6800.0, 6.0], [7100.0, 7.0], [7000.0, 2.0], [7400.0, 4.0], [7300.0, 3.0], [7200.0, 4.0], [7600.0, 6.0], [7500.0, 2.0], [7700.0, 8.0], [7900.0, 11.0], [7800.0, 4.0], [8000.0, 12.0], [8100.0, 3.0], [8600.0, 2.0], [8700.0, 2.0], [8500.0, 4.0], [8400.0, 2.0], [8200.0, 4.0], [8300.0, 6.0], [8900.0, 3.0], [9100.0, 2.0], [9000.0, 4.0], [9200.0, 2.0], [8800.0, 5.0], [9300.0, 6.0], [9700.0, 3.0], [9600.0, 3.0], [9500.0, 3.0], [9400.0, 3.0], [9900.0, 7.0], [10000.0, 5.0], [9800.0, 3.0], [10100.0, 3.0], [10200.0, 6.0], [10600.0, 2.0], [10700.0, 5.0], [10400.0, 4.0], [10500.0, 3.0], [10300.0, 2.0], [11000.0, 8.0], [10900.0, 2.0], [11100.0, 4.0], [10800.0, 3.0], [11200.0, 3.0], [11600.0, 5.0], [11700.0, 2.0], [11400.0, 3.0], [11500.0, 3.0], [11300.0, 3.0], [11800.0, 3.0], [12200.0, 4.0], [12100.0, 5.0], [12000.0, 5.0], [11900.0, 2.0], [12700.0, 3.0], [12400.0, 3.0], [12300.0, 3.0], [12600.0, 1.0], [13200.0, 4.0], [12900.0, 6.0], [13000.0, 3.0], [13100.0, 4.0], [12800.0, 3.0], [13300.0, 2.0], [13400.0, 1.0], [13800.0, 3.0], [13600.0, 4.0], [13500.0, 3.0], [13700.0, 1.0], [14000.0, 3.0], [14300.0, 5.0], [14100.0, 2.0], [14200.0, 1.0], [13900.0, 1.0], [14600.0, 1.0], [14500.0, 4.0], [14700.0, 2.0], [14400.0, 3.0], [14800.0, 1.0], [15000.0, 7.0], [14900.0, 5.0], [15200.0, 3.0], [15100.0, 3.0], [15300.0, 6.0], [15600.0, 1.0], [15500.0, 6.0], [15800.0, 4.0], [15700.0, 1.0], [16200.0, 6.0], [16300.0, 5.0], [15900.0, 2.0], [16000.0, 1.0], [16600.0, 2.0], [16800.0, 1.0], [17000.0, 2.0], [16400.0, 8.0], [17200.0, 2.0], [17400.0, 1.0], [18200.0, 2.0], [18400.0, 3.0], [17800.0, 2.0], [17600.0, 2.0], [18000.0, 1.0], [19000.0, 1.0], [19400.0, 2.0], [18600.0, 2.0], [19200.0, 1.0], [18800.0, 1.0], [20000.0, 2.0], [20400.0, 2.0], [20200.0, 2.0], [21200.0, 1.0], [20600.0, 1.0], [21000.0, 1.0], [21800.0, 1.0], [22000.0, 1.0], [22400.0, 2.0], [21600.0, 1.0], [22800.0, 1.0], [23400.0, 1.0], [24200.0, 2.0], [25400.0, 1.0], [26400.0, 1.0], [27600.0, 1.0], [28600.0, 1.0], [29200.0, 1.0], [17100.0, 2.0], [16900.0, 2.0], [16700.0, 1.0], [17300.0, 2.0], [16500.0, 2.0], [17500.0, 2.0], [18300.0, 1.0], [17900.0, 1.0], [17700.0, 3.0], [18100.0, 1.0], [18500.0, 1.0], [19300.0, 3.0], [18900.0, 1.0], [19100.0, 1.0], [19500.0, 3.0], [20300.0, 1.0], [20100.0, 2.0], [20900.0, 3.0], [20500.0, 1.0], [21300.0, 1.0], [22100.0, 1.0], [21900.0, 1.0], [22300.0, 1.0], [22500.0, 1.0], [22700.0, 1.0], [23700.0, 3.0], [24100.0, 1.0], [24900.0, 4.0], [24700.0, 1.0], [25100.0, 1.0], [26500.0, 1.0], [25900.0, 1.0], [27500.0, 1.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 29200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 311.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3286.0, "series": [{"data": [[0.0, 311.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 403.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3286.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.989417989418, "minX": 1.64643354E12, "maxY": 50.0, "series": [{"data": [[1.64643366E12, 50.0], [1.64643396E12, 17.989417989418], [1.64643378E12, 50.0], [1.6464336E12, 50.0], [1.6464339E12, 40.49115913555992], [1.64643372E12, 50.0], [1.64643354E12, 35.40232108317216], [1.64643384E12, 48.414772727272755]], "isOverall": false, "label": "API_gateway tests", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643396E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.75, "minX": 1.0, "maxY": 17330.75, "series": [{"data": [[2.0, 236.0], [33.0, 783.0], [34.0, 163.83333333333334], [35.0, 1314.0], [36.0, 2359.2], [37.0, 3324.4], [39.0, 4283.25], [38.0, 3527.0], [40.0, 5738.0], [41.0, 2197.5], [43.0, 1922.0], [42.0, 4682.0], [44.0, 751.2307692307692], [45.0, 37.5], [46.0, 1790.125], [47.0, 4490.981132075472], [3.0, 22.0], [49.0, 1033.5531914893616], [48.0, 2412.458333333334], [50.0, 2880.287081339711], [4.0, 3.0], [5.0, 343.0], [6.0, 6.333333333333333], [7.0, 3.0], [8.0, 124.0], [9.0, 2.0], [10.0, 123.5], [11.0, 265.0], [12.0, 406.66666666666663], [13.0, 139.28571428571428], [14.0, 169.2], [15.0, 41.0], [1.0, 1.75], [16.0, 78.66666666666666], [18.0, 173.4], [19.0, 48.0], [21.0, 773.6666666666667], [22.0, 488.0], [23.0, 998.75], [25.0, 978.8333333333334], [26.0, 2343.777777777778], [27.0, 1534.75], [29.0, 373.0], [31.0, 838.1111111111111]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[45.14500000000001, 2548.314999999995]], "isOverall": false, "label": "getAllInfo-Aggregated", "isController": false}, {"data": [[33.0, 1297.8000000000002], [35.0, 2557.6842105263167], [34.0, 2534.5], [37.0, 3849.6666666666665], [39.0, 7671.0], [38.0, 4320.0], [40.0, 4866.75], [41.0, 6557.0], [43.0, 4412.0], [42.0, 4739.333333333334], [44.0, 4242.714285714285], [45.0, 905.0], [46.0, 1407.0], [47.0, 3102.2162162162167], [3.0, 389.0], [49.0, 3458.966101694915], [48.0, 4243.2874999999985], [50.0, 4186.993569131832], [4.0, 175.75], [5.0, 576.0], [6.0, 573.25], [7.0, 1195.0], [8.0, 780.5], [9.0, 1205.0], [10.0, 648.0], [11.0, 1303.0], [12.0, 790.8571428571429], [13.0, 2228.5], [14.0, 610.1428571428572], [1.0, 6.8], [17.0, 1544.0], [18.0, 1323.3333333333333], [19.0, 1950.25], [20.0, 1099.0], [21.0, 2144.0], [22.0, 1529.0], [23.0, 869.8], [25.0, 1933.5555555555557], [26.0, 3063.5], [27.0, 2406.0], [29.0, 2553.272727272727], [30.0, 2293.3333333333335], [31.0, 2176.5]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[45.275000000000034, 3735.429999999996]], "isOverall": false, "label": "getAllStatus-Aggregated", "isController": false}, {"data": [[2.0, 43.0], [33.0, 1223.0], [35.0, 2783.666666666666], [34.0, 2272.4], [36.0, 2785.9090909090905], [37.0, 4225.0], [39.0, 5377.0], [38.0, 4365.0], [40.0, 4887.6], [41.0, 6495.0], [43.0, 6643.785714285714], [42.0, 3204.0], [44.0, 4730.8], [45.0, 987.0], [46.0, 2265.0], [47.0, 4652.0465116279065], [3.0, 16.0], [49.0, 6458.971014492753], [48.0, 6604.315068493148], [50.0, 5096.993548387091], [4.0, 385.3333333333333], [5.0, 208.5], [6.0, 386.0], [7.0, 1270.0], [8.0, 750.0], [10.0, 878.2], [11.0, 1670.0], [12.0, 727.0], [13.0, 1011.6666666666666], [14.0, 706.75], [1.0, 14.8], [16.0, 1778.5], [17.0, 1943.0], [18.0, 1225.2857142857142], [19.0, 1394.8], [20.0, 1601.0], [21.0, 2319.3333333333335], [22.0, 1610.0], [23.0, 1978.0], [24.0, 720.3333333333334], [25.0, 1912.7272727272727], [26.0, 3889.461538461538], [27.0, 4096.5], [29.0, 2176.9999999999995], [31.0, 2610.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[45.2559999999999, 4802.853000000002]], "isOverall": false, "label": "postNewRequest-Aggregated", "isController": false}, {"data": [[2.0, 1519.0], [3.0, 2393.6666666666665], [4.0, 347.3333333333333], [5.0, 2665.5], [6.0, 1611.6666666666665], [7.0, 3897.0], [8.0, 2736.666666666667], [9.0, 1202.0], [10.0, 2299.5], [11.0, 2937.0], [12.0, 4692.666666666667], [13.0, 2383.7500000000005], [14.0, 1910.3333333333333], [15.0, 4314.0], [16.0, 890.3333333333334], [17.0, 4945.0], [18.0, 1745.5], [19.0, 2716.3333333333335], [20.0, 1925.25], [21.0, 1413.0], [22.0, 1754.1666666666667], [23.0, 1693.6666666666667], [24.0, 2573.0], [25.0, 3042.857142857143], [26.0, 11935.882352941175], [27.0, 6493.555555555556], [28.0, 1766.0], [29.0, 4108.8], [30.0, 2316.0], [31.0, 2736.75], [33.0, 2609.0], [32.0, 1829.0], [35.0, 3637.7499999999995], [34.0, 2632.25], [36.0, 2328.0], [37.0, 12172.8], [38.0, 7144.0], [39.0, 6841.75], [40.0, 12619.4], [41.0, 11911.333333333334], [43.0, 8461.944444444445], [42.0, 17330.75], [44.0, 5192.166666666668], [45.0, 3365.5], [46.0, 1622.6], [47.0, 11573.000000000004], [49.0, 6746.018867924527], [48.0, 8445.417910447764], [50.0, 8531.90514469453], [1.0, 446.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}, {"data": [[45.05, 7903.016999999994]], "isOverall": false, "label": "getDataOfRequestID-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 754.5666666666667, "minX": 1.64643354E12, "maxY": 6928452.266666667, "series": [{"data": [[1.64643366E12, 6595620.433333334], [1.64643396E12, 3242085.3666666667], [1.64643378E12, 6433441.483333333], [1.6464336E12, 6770086.266666667], [1.6464339E12, 6676515.633333334], [1.64643372E12, 6928452.266666667], [1.64643354E12, 4134598.1666666665], [1.64643384E12, 5298102.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64643366E12, 2267.1833333333334], [1.64643396E12, 754.5666666666667], [1.64643378E12, 2087.5833333333335], [1.6464336E12, 2294.366666666667], [1.6464339E12, 1991.8666666666666], [1.64643372E12, 2187.2166666666667], [1.64643354E12, 2008.2333333333333], [1.64643384E12, 2108.983333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643396E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1008.7615894039725, "minX": 1.64643354E12, "maxY": 9476.885714285716, "series": [{"data": [[1.64643366E12, 3320.972222222222], [1.64643396E12, 1263.3947368421052], [1.64643378E12, 3128.7318840579705], [1.6464336E12, 2659.3758389261748], [1.6464339E12, 3135.7637795275605], [1.64643372E12, 3143.162962962963], [1.64643354E12, 1008.7615894039725], [1.64643384E12, 1857.4745762711866]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643366E12, 4323.2789115646265], [1.64643396E12, 1736.020833333334], [1.64643378E12, 4537.231884057971], [1.6464336E12, 3793.0198675496667], [1.6464339E12, 3301.1040000000003], [1.64643372E12, 4702.776923076924], [1.64643354E12, 2066.741935483871], [1.64643384E12, 3922.773722627736]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643366E12, 5089.366197183099], [1.64643396E12, 2109.318181818182], [1.64643378E12, 4853.471544715448], [1.6464336E12, 5143.070921985815], [1.6464339E12, 4259.570247933883], [1.64643372E12, 5613.183673469385], [1.64643354E12, 2834.807142857143], [1.64643384E12, 6533.690140845069]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643366E12, 8974.95205479452], [1.64643396E12, 4637.864406779662], [1.64643378E12, 9476.885714285716], [1.6464336E12, 8225.527027027025], [1.6464339E12, 8780.66911764706], [1.64643372E12, 8639.69565217391], [1.64643354E12, 3433.343137254902], [1.64643384E12, 7925.5572519084]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643396E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1008.7086092715232, "minX": 1.64643354E12, "maxY": 9458.092857142856, "series": [{"data": [[1.64643366E12, 3320.9166666666674], [1.64643396E12, 1263.3684210526314], [1.64643378E12, 3128.6884057971], [1.6464336E12, 2659.268456375839], [1.6464339E12, 3135.68503937008], [1.64643372E12, 3143.066666666667], [1.64643354E12, 1008.7086092715232], [1.64643384E12, 1857.3898305084756]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643366E12, 4323.244897959188], [1.64643396E12, 1735.979166666667], [1.64643378E12, 4537.166666666669], [1.6464336E12, 3792.966887417217], [1.6464339E12, 3301.071999999999], [1.64643372E12, 4702.70769230769], [1.64643354E12, 2066.693548387097], [1.64643384E12, 3922.75182481752]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643366E12, 5089.323943661972], [1.64643396E12, 2109.295454545454], [1.64643378E12, 4853.439024390244], [1.6464336E12, 5143.035460992907], [1.6464339E12, 4259.553719008263], [1.64643372E12, 5613.102040816327], [1.64643354E12, 2834.785714285714], [1.64643384E12, 6533.619718309861]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643366E12, 8961.246575342464], [1.64643396E12, 4630.4745762711855], [1.64643378E12, 9458.092857142856], [1.6464336E12, 8210.520270270274], [1.6464339E12, 8773.661764705877], [1.64643372E12, 8620.855072463766], [1.64643354E12, 3425.950980392157], [1.64643384E12, 7903.8320610687]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643396E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.12162162162162166, "minX": 1.64643354E12, "maxY": 0.37748344370860926, "series": [{"data": [[1.64643366E12, 0.17361111111111113], [1.64643396E12, 0.15789473684210528], [1.64643378E12, 0.15217391304347824], [1.6464336E12, 0.19463087248322145], [1.6464339E12, 0.20472440944881898], [1.64643372E12, 0.18518518518518523], [1.64643354E12, 0.37748344370860926], [1.64643384E12, 0.3728813559322035]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643366E12, 0.21088435374149656], [1.64643396E12, 0.2083333333333334], [1.64643378E12, 0.22463768115942023], [1.6464336E12, 0.1721854304635762], [1.6464339E12, 0.34400000000000014], [1.64643372E12, 0.20000000000000004], [1.64643354E12, 0.1370967741935484], [1.64643384E12, 0.18248175182481755]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643366E12, 0.2112676056338029], [1.64643396E12, 0.18181818181818182], [1.64643378E12, 0.2682926829268292], [1.6464336E12, 0.21276595744680854], [1.6464339E12, 0.19834710743801653], [1.64643372E12, 0.13605442176870752], [1.64643354E12, 0.16428571428571428], [1.64643384E12, 0.25352112676056343]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643366E12, 0.3082191780821917], [1.64643396E12, 0.20338983050847456], [1.64643378E12, 0.2214285714285715], [1.6464336E12, 0.12162162162162166], [1.6464339E12, 0.3161764705882354], [1.64643372E12, 0.1449275362318841], [1.64643354E12, 0.20588235294117657], [1.64643384E12, 0.18320610687022906]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643396E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.64643354E12, "maxY": 29214.0, "series": [{"data": [[1.64643366E12, 24982.0], [1.64643396E12, 17702.0], [1.64643378E12, 27614.0], [1.6464336E12, 25417.0], [1.6464339E12, 29214.0], [1.64643372E12, 22417.0], [1.64643354E12, 10680.0], [1.64643384E12, 23782.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64643366E12, 10104.0], [1.64643396E12, 5095.0], [1.64643378E12, 10192.0], [1.6464336E12, 9981.0], [1.6464339E12, 9557.0], [1.64643372E12, 9987.800000000001], [1.64643354E12, 4588.4], [1.64643384E12, 10862.500000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64643366E12, 21469.200000000023], [1.64643396E12, 15004.699999999983], [1.64643378E12, 24989.4], [1.6464336E12, 19076.80000000001], [1.6464339E12, 22683.699999999997], [1.64643372E12, 19429.64], [1.64643354E12, 7710.46], [1.64643384E12, 20866.280000000013]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64643366E12, 15273.0], [1.64643396E12, 11300.5], [1.64643378E12, 15188.0], [1.6464336E12, 14082.0], [1.6464339E12, 14603.0], [1.64643372E12, 13079.349999999988], [1.64643354E12, 5721.1], [1.64643384E12, 14779.999999999978]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64643366E12, 1.0], [1.64643396E12, 2.0], [1.64643378E12, 2.0], [1.6464336E12, 3.0], [1.6464339E12, 1.0], [1.64643372E12, 7.0], [1.64643354E12, 1.0], [1.64643384E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64643366E12, 4322.0], [1.64643396E12, 1964.0], [1.64643378E12, 4507.0], [1.6464336E12, 3997.0], [1.6464339E12, 3823.0], [1.64643372E12, 5008.0], [1.64643354E12, 1698.0], [1.64643384E12, 4296.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643396E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1408.0, "minX": 1.0, "maxY": 7011.0, "series": [{"data": [[2.0, 6320.5], [32.0, 6699.0], [35.0, 3375.0], [34.0, 5775.5], [37.0, 2529.5], [39.0, 2000.5], [41.0, 3111.0], [45.0, 3126.0], [3.0, 5612.0], [53.0, 2197.0], [59.0, 1408.0], [4.0, 7011.0], [5.0, 6619.5], [6.0, 4055.0], [7.0, 5472.0], [8.0, 5729.5], [9.0, 4292.0], [10.0, 5382.0], [11.0, 4748.0], [12.0, 3243.5], [13.0, 4795.0], [14.0, 4563.5], [15.0, 3673.0], [16.0, 4306.0], [1.0, 4607.0], [17.0, 3987.0], [18.0, 5340.0], [19.0, 2574.0], [20.0, 3527.0], [21.0, 3362.0], [22.0, 1942.5], [23.0, 3300.5], [24.0, 1860.5], [25.0, 3382.0], [26.0, 5008.5], [27.0, 2046.0], [28.0, 2370.5], [29.0, 1595.0], [30.0, 2398.5], [31.0, 2718.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 59.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1408.0, "minX": 1.0, "maxY": 7011.0, "series": [{"data": [[2.0, 6320.5], [32.0, 6699.0], [35.0, 3375.0], [34.0, 5775.0], [37.0, 2529.5], [39.0, 2000.5], [41.0, 3111.0], [45.0, 3126.0], [3.0, 5602.0], [53.0, 2197.0], [59.0, 1408.0], [4.0, 7011.0], [5.0, 6619.5], [6.0, 4055.0], [7.0, 5472.0], [8.0, 5729.5], [9.0, 4292.0], [10.0, 5382.0], [11.0, 4748.0], [12.0, 3243.5], [13.0, 4795.0], [14.0, 4563.5], [15.0, 3673.0], [16.0, 4306.0], [1.0, 4607.0], [17.0, 3987.0], [18.0, 5340.0], [19.0, 2574.0], [20.0, 3522.0], [21.0, 3362.0], [22.0, 1942.5], [23.0, 3300.5], [24.0, 1860.5], [25.0, 3382.0], [26.0, 5008.5], [27.0, 2046.0], [28.0, 2370.5], [29.0, 1595.0], [30.0, 2398.5], [31.0, 2718.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 59.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.716666666666667, "minX": 1.64643354E12, "maxY": 9.816666666666666, "series": [{"data": [[1.64643366E12, 9.65], [1.64643396E12, 2.716666666666667], [1.64643378E12, 8.983333333333333], [1.6464336E12, 9.816666666666666], [1.6464339E12, 8.133333333333333], [1.64643372E12, 9.166666666666666], [1.64643354E12, 9.45], [1.64643384E12, 8.75]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643396E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.15, "minX": 1.64643354E12, "maxY": 9.816666666666666, "series": [{"data": [[1.64643366E12, 9.65], [1.64643396E12, 3.15], [1.64643378E12, 8.983333333333333], [1.6464336E12, 9.816666666666666], [1.6464339E12, 8.483333333333333], [1.64643372E12, 9.166666666666666], [1.64643354E12, 8.616666666666667], [1.64643384E12, 8.8]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643396E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6333333333333333, "minX": 1.64643354E12, "maxY": 2.5166666666666666, "series": [{"data": [[1.64643366E12, 2.3666666666666667], [1.64643396E12, 0.7333333333333333], [1.64643378E12, 2.05], [1.6464336E12, 2.35], [1.6464339E12, 2.0166666666666666], [1.64643372E12, 2.45], [1.64643354E12, 2.3333333333333335], [1.64643384E12, 2.3666666666666667]], "isOverall": false, "label": "postNewRequest-success", "isController": false}, {"data": [[1.64643366E12, 2.4], [1.64643396E12, 0.6333333333333333], [1.64643378E12, 2.3], [1.6464336E12, 2.4833333333333334], [1.6464339E12, 2.1166666666666667], [1.64643372E12, 2.25], [1.64643354E12, 2.5166666666666666], [1.64643384E12, 1.9666666666666666]], "isOverall": false, "label": "getAllInfo-success", "isController": false}, {"data": [[1.64643366E12, 2.433333333333333], [1.64643396E12, 0.9833333333333333], [1.64643378E12, 2.3333333333333335], [1.6464336E12, 2.466666666666667], [1.6464339E12, 2.2666666666666666], [1.64643372E12, 2.3], [1.64643354E12, 1.7], [1.64643384E12, 2.183333333333333]], "isOverall": false, "label": "getDataOfRequestID-success", "isController": false}, {"data": [[1.64643366E12, 2.45], [1.64643396E12, 0.8], [1.64643378E12, 2.3], [1.6464336E12, 2.5166666666666666], [1.6464339E12, 2.0833333333333335], [1.64643372E12, 2.1666666666666665], [1.64643354E12, 2.066666666666667], [1.64643384E12, 2.283333333333333]], "isOverall": false, "label": "getAllStatus-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643396E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.15, "minX": 1.64643354E12, "maxY": 9.816666666666666, "series": [{"data": [[1.64643366E12, 9.65], [1.64643396E12, 3.15], [1.64643378E12, 8.983333333333333], [1.6464336E12, 9.816666666666666], [1.6464339E12, 8.483333333333333], [1.64643372E12, 9.166666666666666], [1.64643354E12, 8.616666666666667], [1.64643384E12, 8.8]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643396E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

