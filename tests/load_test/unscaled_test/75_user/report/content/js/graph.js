/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 34738.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 4.0], [67.3, 4.0], [67.4, 4.0], [67.5, 5.0], [67.6, 6.0], [67.7, 6.0], [67.8, 7.0], [67.9, 7.0], [68.0, 8.0], [68.1, 8.0], [68.2, 9.0], [68.3, 9.0], [68.4, 9.0], [68.5, 9.0], [68.6, 9.0], [68.7, 10.0], [68.8, 10.0], [68.9, 10.0], [69.0, 11.0], [69.1, 11.0], [69.2, 11.0], [69.3, 11.0], [69.4, 11.0], [69.5, 11.0], [69.6, 12.0], [69.7, 12.0], [69.8, 12.0], [69.9, 12.0], [70.0, 12.0], [70.1, 13.0], [70.2, 13.0], [70.3, 13.0], [70.4, 13.0], [70.5, 13.0], [70.6, 14.0], [70.7, 14.0], [70.8, 15.0], [70.9, 15.0], [71.0, 15.0], [71.1, 15.0], [71.2, 16.0], [71.3, 16.0], [71.4, 17.0], [71.5, 17.0], [71.6, 18.0], [71.7, 19.0], [71.8, 19.0], [71.9, 20.0], [72.0, 21.0], [72.1, 23.0], [72.2, 24.0], [72.3, 31.0], [72.4, 39.0], [72.5, 39.0], [72.6, 44.0], [72.7, 46.0], [72.8, 51.0], [72.9, 58.0], [73.0, 63.0], [73.1, 64.0], [73.2, 66.0], [73.3, 68.0], [73.4, 69.0], [73.5, 70.0], [73.6, 72.0], [73.7, 72.0], [73.8, 77.0], [73.9, 77.0], [74.0, 78.0], [74.1, 80.0], [74.2, 81.0], [74.3, 81.0], [74.4, 82.0], [74.5, 82.0], [74.6, 88.0], [74.7, 89.0], [74.8, 90.0], [74.9, 92.0], [75.0, 93.0], [75.1, 94.0], [75.2, 94.0], [75.3, 95.0], [75.4, 95.0], [75.5, 96.0], [75.6, 96.0], [75.7, 98.0], [75.8, 100.0], [75.9, 102.0], [76.0, 103.0], [76.1, 103.0], [76.2, 107.0], [76.3, 108.0], [76.4, 119.0], [76.5, 128.0], [76.6, 165.0], [76.7, 176.0], [76.8, 188.0], [76.9, 193.0], [77.0, 204.0], [77.1, 211.0], [77.2, 219.0], [77.3, 231.0], [77.4, 237.0], [77.5, 253.0], [77.6, 286.0], [77.7, 301.0], [77.8, 327.0], [77.9, 369.0], [78.0, 429.0], [78.1, 435.0], [78.2, 447.0], [78.3, 465.0], [78.4, 480.0], [78.5, 480.0], [78.6, 527.0], [78.7, 543.0], [78.8, 564.0], [78.9, 570.0], [79.0, 584.0], [79.1, 592.0], [79.2, 595.0], [79.3, 596.0], [79.4, 604.0], [79.5, 605.0], [79.6, 610.0], [79.7, 613.0], [79.8, 613.0], [79.9, 613.0], [80.0, 616.0], [80.1, 617.0], [80.2, 680.0], [80.3, 682.0], [80.4, 684.0], [80.5, 686.0], [80.6, 689.0], [80.7, 689.0], [80.8, 700.0], [80.9, 744.0], [81.0, 781.0], [81.1, 808.0], [81.2, 821.0], [81.3, 827.0], [81.4, 851.0], [81.5, 866.0], [81.6, 886.0], [81.7, 886.0], [81.8, 890.0], [81.9, 898.0], [82.0, 1000.0], [82.1, 1011.0], [82.2, 1092.0], [82.3, 1108.0], [82.4, 1148.0], [82.5, 1172.0], [82.6, 1195.0], [82.7, 1208.0], [82.8, 1268.0], [82.9, 1271.0], [83.0, 1289.0], [83.1, 1319.0], [83.2, 1333.0], [83.3, 1339.0], [83.4, 1368.0], [83.5, 1376.0], [83.6, 1386.0], [83.7, 1387.0], [83.8, 1389.0], [83.9, 1390.0], [84.0, 1413.0], [84.1, 1469.0], [84.2, 1495.0], [84.3, 1517.0], [84.4, 1583.0], [84.5, 1617.0], [84.6, 1709.0], [84.7, 1715.0], [84.8, 1954.0], [84.9, 1968.0], [85.0, 2007.0], [85.1, 2008.0], [85.2, 2011.0], [85.3, 2015.0], [85.4, 2019.0], [85.5, 2212.0], [85.6, 2312.0], [85.7, 2377.0], [85.8, 2510.0], [85.9, 2587.0], [86.0, 2590.0], [86.1, 2701.0], [86.2, 2919.0], [86.3, 2941.0], [86.4, 3279.0], [86.5, 3407.0], [86.6, 3484.0], [86.7, 3491.0], [86.8, 3718.0], [86.9, 3721.0], [87.0, 3794.0], [87.1, 3803.0], [87.2, 3890.0], [87.3, 3915.0], [87.4, 3975.0], [87.5, 4108.0], [87.6, 4121.0], [87.7, 4128.0], [87.8, 4170.0], [87.9, 4194.0], [88.0, 4315.0], [88.1, 4321.0], [88.2, 4398.0], [88.3, 4403.0], [88.4, 4420.0], [88.5, 4452.0], [88.6, 4513.0], [88.7, 4570.0], [88.8, 4619.0], [88.9, 4660.0], [89.0, 4906.0], [89.1, 4941.0], [89.2, 5167.0], [89.3, 5198.0], [89.4, 5283.0], [89.5, 5289.0], [89.6, 5408.0], [89.7, 5421.0], [89.8, 5470.0], [89.9, 5483.0], [90.0, 5489.0], [90.1, 5507.0], [90.2, 5528.0], [90.3, 5583.0], [90.4, 5586.0], [90.5, 5603.0], [90.6, 5616.0], [90.7, 5701.0], [90.8, 5760.0], [90.9, 5777.0], [91.0, 5962.0], [91.1, 6002.0], [91.2, 6029.0], [91.3, 6095.0], [91.4, 6191.0], [91.5, 6227.0], [91.6, 6375.0], [91.7, 6384.0], [91.8, 6460.0], [91.9, 6460.0], [92.0, 6464.0], [92.1, 6469.0], [92.2, 6488.0], [92.3, 6493.0], [92.4, 6503.0], [92.5, 6512.0], [92.6, 6530.0], [92.7, 6530.0], [92.8, 6577.0], [92.9, 6580.0], [93.0, 6585.0], [93.1, 6588.0], [93.2, 6684.0], [93.3, 6697.0], [93.4, 6711.0], [93.5, 6723.0], [93.6, 6774.0], [93.7, 6786.0], [93.8, 6787.0], [93.9, 6796.0], [94.0, 6803.0], [94.1, 6827.0], [94.2, 6921.0], [94.3, 6929.0], [94.4, 6980.0], [94.5, 6980.0], [94.6, 6987.0], [94.7, 7003.0], [94.8, 7029.0], [94.9, 7060.0], [95.0, 7081.0], [95.1, 7088.0], [95.2, 7091.0], [95.3, 7092.0], [95.4, 7097.0], [95.5, 7117.0], [95.6, 7123.0], [95.7, 7184.0], [95.8, 7222.0], [95.9, 7222.0], [96.0, 7333.0], [96.1, 7387.0], [96.2, 7398.0], [96.3, 7399.0], [96.4, 7401.0], [96.5, 7406.0], [96.6, 7424.0], [96.7, 7442.0], [96.8, 7467.0], [96.9, 7484.0], [97.0, 7591.0], [97.1, 7598.0], [97.2, 7801.0], [97.3, 7849.0], [97.4, 7989.0], [97.5, 8002.0], [97.6, 8028.0], [97.7, 8030.0], [97.8, 8056.0], [97.9, 8068.0], [98.0, 8091.0], [98.1, 8101.0], [98.2, 8251.0], [98.3, 8276.0], [98.4, 8516.0], [98.5, 8625.0], [98.6, 8694.0], [98.7, 8696.0], [98.8, 8800.0], [98.9, 8875.0], [99.0, 8921.0], [99.1, 8956.0], [99.2, 9314.0], [99.3, 9578.0], [99.4, 10224.0], [99.5, 10795.0], [99.6, 15297.0], [99.7, 15305.0], [99.8, 16105.0], [99.9, 16107.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 2.0], [67.3, 3.0], [67.4, 3.0], [67.5, 4.0], [67.6, 4.0], [67.7, 5.0], [67.8, 5.0], [67.9, 6.0], [68.0, 6.0], [68.1, 6.0], [68.2, 6.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 9.0], [68.8, 10.0], [68.9, 11.0], [69.0, 11.0], [69.1, 12.0], [69.2, 13.0], [69.3, 14.0], [69.4, 15.0], [69.5, 16.0], [69.6, 16.0], [69.7, 90.0], [69.8, 98.0], [69.9, 418.0], [70.0, 474.0], [70.1, 611.0], [70.2, 622.0], [70.3, 800.0], [70.4, 873.0], [70.5, 891.0], [70.6, 984.0], [70.7, 1000.0], [70.8, 1193.0], [70.9, 1199.0], [71.0, 1235.0], [71.1, 1264.0], [71.2, 1286.0], [71.3, 1290.0], [71.4, 1310.0], [71.5, 1312.0], [71.6, 1322.0], [71.7, 1381.0], [71.8, 1479.0], [71.9, 1492.0], [72.0, 1520.0], [72.1, 1527.0], [72.2, 1721.0], [72.3, 1822.0], [72.4, 1925.0], [72.5, 1938.0], [72.6, 1971.0], [72.7, 1976.0], [72.8, 1991.0], [72.9, 1996.0], [73.0, 2023.0], [73.1, 2048.0], [73.2, 2086.0], [73.3, 2126.0], [73.4, 2196.0], [73.5, 2197.0], [73.6, 2226.0], [73.7, 2235.0], [73.8, 2297.0], [73.9, 2302.0], [74.0, 2310.0], [74.1, 2322.0], [74.2, 2365.0], [74.3, 2373.0], [74.4, 2394.0], [74.5, 2421.0], [74.6, 2436.0], [74.7, 2437.0], [74.8, 2441.0], [74.9, 2500.0], [75.0, 2515.0], [75.1, 2534.0], [75.2, 2578.0], [75.3, 2583.0], [75.4, 2594.0], [75.5, 2597.0], [75.6, 2606.0], [75.7, 2674.0], [75.8, 2681.0], [75.9, 2692.0], [76.0, 2704.0], [76.1, 2722.0], [76.2, 2771.0], [76.3, 2798.0], [76.4, 2803.0], [76.5, 2810.0], [76.6, 2823.0], [76.7, 2825.0], [76.8, 2831.0], [76.9, 2856.0], [77.0, 2894.0], [77.1, 2909.0], [77.2, 2923.0], [77.3, 2924.0], [77.4, 2988.0], [77.5, 3000.0], [77.6, 3097.0], [77.7, 3098.0], [77.8, 3101.0], [77.9, 3205.0], [78.0, 3296.0], [78.1, 3396.0], [78.2, 3483.0], [78.3, 3494.0], [78.4, 3513.0], [78.5, 3528.0], [78.6, 3609.0], [78.7, 3691.0], [78.8, 3699.0], [78.9, 3719.0], [79.0, 3813.0], [79.1, 3817.0], [79.2, 3840.0], [79.3, 3881.0], [79.4, 3923.0], [79.5, 3989.0], [79.6, 4055.0], [79.7, 4104.0], [79.8, 4212.0], [79.9, 4224.0], [80.0, 4262.0], [80.1, 4265.0], [80.2, 4288.0], [80.3, 4293.0], [80.4, 4295.0], [80.5, 4317.0], [80.6, 4323.0], [80.7, 4378.0], [80.8, 4388.0], [80.9, 4388.0], [81.0, 4482.0], [81.1, 4484.0], [81.2, 4536.0], [81.3, 4601.0], [81.4, 4613.0], [81.5, 4623.0], [81.6, 4690.0], [81.7, 4691.0], [81.8, 4703.0], [81.9, 4706.0], [82.0, 4708.0], [82.1, 4712.0], [82.2, 4726.0], [82.3, 4728.0], [82.4, 4737.0], [82.5, 4738.0], [82.6, 4783.0], [82.7, 4783.0], [82.8, 4828.0], [82.9, 4897.0], [83.0, 4910.0], [83.1, 4934.0], [83.2, 4946.0], [83.3, 4982.0], [83.4, 5010.0], [83.5, 5013.0], [83.6, 5173.0], [83.7, 5177.0], [83.8, 5195.0], [83.9, 5199.0], [84.0, 5222.0], [84.1, 5308.0], [84.2, 5318.0], [84.3, 5320.0], [84.4, 5408.0], [84.5, 5428.0], [84.6, 5448.0], [84.7, 5475.0], [84.8, 5485.0], [84.9, 5490.0], [85.0, 5530.0], [85.1, 5566.0], [85.2, 5599.0], [85.3, 5604.0], [85.4, 5625.0], [85.5, 5665.0], [85.6, 5682.0], [85.7, 5688.0], [85.8, 5705.0], [85.9, 5718.0], [86.0, 5732.0], [86.1, 5734.0], [86.2, 5786.0], [86.3, 5802.0], [86.4, 5907.0], [86.5, 5970.0], [86.6, 5987.0], [86.7, 5993.0], [86.8, 6064.0], [86.9, 6079.0], [87.0, 6099.0], [87.1, 6107.0], [87.2, 6188.0], [87.3, 6190.0], [87.4, 6255.0], [87.5, 6257.0], [87.6, 6289.0], [87.7, 6300.0], [87.8, 6338.0], [87.9, 6371.0], [88.0, 6379.0], [88.1, 6382.0], [88.2, 6387.0], [88.3, 6388.0], [88.4, 6406.0], [88.5, 6407.0], [88.6, 6412.0], [88.7, 6415.0], [88.8, 6425.0], [88.9, 6426.0], [89.0, 6447.0], [89.1, 6455.0], [89.2, 6471.0], [89.3, 6478.0], [89.4, 6503.0], [89.5, 6524.0], [89.6, 6554.0], [89.7, 6565.0], [89.8, 6609.0], [89.9, 6611.0], [90.0, 6620.0], [90.1, 6627.0], [90.2, 6664.0], [90.3, 6728.0], [90.4, 6740.0], [90.5, 6743.0], [90.6, 6804.0], [90.7, 6807.0], [90.8, 6990.0], [90.9, 6991.0], [91.0, 7039.0], [91.1, 7062.0], [91.2, 7081.0], [91.3, 7084.0], [91.4, 7107.0], [91.5, 7108.0], [91.6, 7166.0], [91.7, 7166.0], [91.8, 7183.0], [91.9, 7186.0], [92.0, 7229.0], [92.1, 7240.0], [92.2, 7242.0], [92.3, 7271.0], [92.4, 7294.0], [92.5, 7296.0], [92.6, 7317.0], [92.7, 7386.0], [92.8, 7392.0], [92.9, 7395.0], [93.0, 7609.0], [93.1, 7616.0], [93.2, 7739.0], [93.3, 7764.0], [93.4, 7795.0], [93.5, 7797.0], [93.6, 7806.0], [93.7, 7817.0], [93.8, 7855.0], [93.9, 7875.0], [94.0, 7900.0], [94.1, 7914.0], [94.2, 7972.0], [94.3, 8115.0], [94.4, 8295.0], [94.5, 8306.0], [94.6, 8321.0], [94.7, 8323.0], [94.8, 8329.0], [94.9, 8341.0], [95.0, 8355.0], [95.1, 8358.0], [95.2, 8395.0], [95.3, 8450.0], [95.4, 8476.0], [95.5, 8488.0], [95.6, 8506.0], [95.7, 8515.0], [95.8, 8632.0], [95.9, 8688.0], [96.0, 8700.0], [96.1, 8700.0], [96.2, 8791.0], [96.3, 8912.0], [96.4, 8987.0], [96.5, 9010.0], [96.6, 9132.0], [96.7, 9206.0], [96.8, 9224.0], [96.9, 9250.0], [97.0, 9325.0], [97.1, 9363.0], [97.2, 9690.0], [97.3, 9972.0], [97.4, 10120.0], [97.5, 10121.0], [97.6, 10199.0], [97.7, 10771.0], [97.8, 10878.0], [97.9, 10895.0], [98.0, 11114.0], [98.1, 11204.0], [98.2, 11319.0], [98.3, 11323.0], [98.4, 11738.0], [98.5, 11878.0], [98.6, 11899.0], [98.7, 11973.0], [98.8, 12552.0], [98.9, 12586.0], [99.0, 12597.0], [99.1, 12626.0], [99.2, 15414.0], [99.3, 15560.0], [99.4, 15586.0], [99.5, 15588.0], [99.6, 15599.0], [99.7, 15611.0], [99.8, 15638.0], [99.9, 15672.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 2.0], [67.1, 2.0], [67.2, 5.0], [67.3, 7.0], [67.4, 7.0], [67.5, 8.0], [67.6, 8.0], [67.7, 9.0], [67.8, 10.0], [67.9, 10.0], [68.0, 11.0], [68.1, 11.0], [68.2, 11.0], [68.3, 12.0], [68.4, 13.0], [68.5, 15.0], [68.6, 17.0], [68.7, 18.0], [68.8, 25.0], [68.9, 43.0], [69.0, 77.0], [69.1, 109.0], [69.2, 172.0], [69.3, 184.0], [69.4, 595.0], [69.5, 613.0], [69.6, 703.0], [69.7, 740.0], [69.8, 823.0], [69.9, 845.0], [70.0, 912.0], [70.1, 921.0], [70.2, 1011.0], [70.3, 1013.0], [70.4, 1059.0], [70.5, 1081.0], [70.6, 1286.0], [70.7, 1325.0], [70.8, 1375.0], [70.9, 1396.0], [71.0, 1403.0], [71.1, 1404.0], [71.2, 1415.0], [71.3, 1479.0], [71.4, 1499.0], [71.5, 1518.0], [71.6, 1542.0], [71.7, 1592.0], [71.8, 1615.0], [71.9, 1794.0], [72.0, 1870.0], [72.1, 1906.0], [72.2, 1937.0], [72.3, 1962.0], [72.4, 2006.0], [72.5, 2073.0], [72.6, 2088.0], [72.7, 2089.0], [72.8, 2094.0], [72.9, 2105.0], [73.0, 2197.0], [73.1, 2208.0], [73.2, 2265.0], [73.3, 2272.0], [73.4, 2317.0], [73.5, 2320.0], [73.6, 2346.0], [73.7, 2355.0], [73.8, 2404.0], [73.9, 2407.0], [74.0, 2518.0], [74.1, 2531.0], [74.2, 2599.0], [74.3, 2604.0], [74.4, 2686.0], [74.5, 2688.0], [74.6, 2696.0], [74.7, 2714.0], [74.8, 2785.0], [74.9, 2797.0], [75.0, 2824.0], [75.1, 2825.0], [75.2, 2890.0], [75.3, 2896.0], [75.4, 2909.0], [75.5, 2914.0], [75.6, 2933.0], [75.7, 2978.0], [75.8, 3001.0], [75.9, 3003.0], [76.0, 3106.0], [76.1, 3122.0], [76.2, 3204.0], [76.3, 3234.0], [76.4, 3289.0], [76.5, 3296.0], [76.6, 3420.0], [76.7, 3496.0], [76.8, 3583.0], [76.9, 3717.0], [77.0, 3880.0], [77.1, 4218.0], [77.2, 4381.0], [77.3, 4410.0], [77.4, 4481.0], [77.5, 4500.0], [77.6, 4635.0], [77.7, 4671.0], [77.8, 4699.0], [77.9, 4700.0], [78.0, 4748.0], [78.1, 4761.0], [78.2, 4791.0], [78.3, 4904.0], [78.4, 4920.0], [78.5, 4933.0], [78.6, 4952.0], [78.7, 4981.0], [78.8, 5085.0], [78.9, 5206.0], [79.0, 5333.0], [79.1, 5396.0], [79.2, 5402.0], [79.3, 5419.0], [79.4, 5498.0], [79.5, 5552.0], [79.6, 5618.0], [79.7, 5623.0], [79.8, 5662.0], [79.9, 5670.0], [80.0, 5683.0], [80.1, 5711.0], [80.2, 5773.0], [80.3, 5795.0], [80.4, 5803.0], [80.5, 5863.0], [80.6, 5886.0], [80.7, 5893.0], [80.8, 5973.0], [80.9, 5977.0], [81.0, 6087.0], [81.1, 6093.0], [81.2, 6318.0], [81.3, 6348.0], [81.4, 6366.0], [81.5, 6393.0], [81.6, 6405.0], [81.7, 6406.0], [81.8, 6425.0], [81.9, 6460.0], [82.0, 6594.0], [82.1, 6598.0], [82.2, 6602.0], [82.3, 6618.0], [82.4, 6668.0], [82.5, 6685.0], [82.6, 6695.0], [82.7, 6698.0], [82.8, 6706.0], [82.9, 6806.0], [83.0, 6834.0], [83.1, 6845.0], [83.2, 6874.0], [83.3, 6880.0], [83.4, 6899.0], [83.5, 6902.0], [83.6, 6997.0], [83.7, 6998.0], [83.8, 7008.0], [83.9, 7028.0], [84.0, 7102.0], [84.1, 7116.0], [84.2, 7156.0], [84.3, 7178.0], [84.4, 7209.0], [84.5, 7225.0], [84.6, 7226.0], [84.7, 7241.0], [84.8, 7287.0], [84.9, 7317.0], [85.0, 7333.0], [85.1, 7371.0], [85.2, 7389.0], [85.3, 7392.0], [85.4, 7395.0], [85.5, 7397.0], [85.6, 7402.0], [85.7, 7403.0], [85.8, 7417.0], [85.9, 7417.0], [86.0, 7457.0], [86.1, 7466.0], [86.2, 7484.0], [86.3, 7495.0], [86.4, 7507.0], [86.5, 7516.0], [86.6, 7615.0], [86.7, 7685.0], [86.8, 7700.0], [86.9, 7713.0], [87.0, 7770.0], [87.1, 7800.0], [87.2, 7802.0], [87.3, 7805.0], [87.4, 7819.0], [87.5, 7821.0], [87.6, 7869.0], [87.7, 7872.0], [87.8, 7894.0], [87.9, 7923.0], [88.0, 7978.0], [88.1, 7982.0], [88.2, 7992.0], [88.3, 8002.0], [88.4, 8076.0], [88.5, 8097.0], [88.6, 8108.0], [88.7, 8115.0], [88.8, 8154.0], [88.9, 8183.0], [89.0, 8199.0], [89.1, 8210.0], [89.2, 8263.0], [89.3, 8277.0], [89.4, 8322.0], [89.5, 8351.0], [89.6, 8387.0], [89.7, 8391.0], [89.8, 8398.0], [89.9, 8402.0], [90.0, 8403.0], [90.1, 8404.0], [90.2, 8409.0], [90.3, 8416.0], [90.4, 8453.0], [90.5, 8472.0], [90.6, 8477.0], [90.7, 8481.0], [90.8, 8565.0], [90.9, 8582.0], [91.0, 8587.0], [91.1, 8593.0], [91.2, 8628.0], [91.3, 8631.0], [91.4, 8703.0], [91.5, 8706.0], [91.6, 8733.0], [91.7, 8771.0], [91.8, 9003.0], [91.9, 9004.0], [92.0, 9007.0], [92.1, 9093.0], [92.2, 9198.0], [92.3, 9234.0], [92.4, 9289.0], [92.5, 9308.0], [92.6, 9312.0], [92.7, 9322.0], [92.8, 9395.0], [92.9, 9405.0], [93.0, 9526.0], [93.1, 9573.0], [93.2, 9897.0], [93.3, 9925.0], [93.4, 10003.0], [93.5, 10010.0], [93.6, 10115.0], [93.7, 10210.0], [93.8, 10404.0], [93.9, 10519.0], [94.0, 10615.0], [94.1, 10624.0], [94.2, 10909.0], [94.3, 10909.0], [94.4, 10979.0], [94.5, 10982.0], [94.6, 11038.0], [94.7, 11370.0], [94.8, 11408.0], [94.9, 11429.0], [95.0, 11518.0], [95.1, 11524.0], [95.2, 11546.0], [95.3, 11575.0], [95.4, 11589.0], [95.5, 11606.0], [95.6, 11611.0], [95.7, 11634.0], [95.8, 11692.0], [95.9, 11692.0], [96.0, 12105.0], [96.1, 12221.0], [96.2, 12307.0], [96.3, 12307.0], [96.4, 12377.0], [96.5, 12379.0], [96.6, 12397.0], [96.7, 12397.0], [96.8, 12419.0], [96.9, 12491.0], [97.0, 12558.0], [97.1, 12560.0], [97.2, 12640.0], [97.3, 12694.0], [97.4, 12726.0], [97.5, 12731.0], [97.6, 12829.0], [97.7, 12867.0], [97.8, 12888.0], [97.9, 12890.0], [98.0, 12930.0], [98.1, 12982.0], [98.2, 13005.0], [98.3, 13005.0], [98.4, 13042.0], [98.5, 13060.0], [98.6, 13121.0], [98.7, 13127.0], [98.8, 13146.0], [98.9, 13223.0], [99.0, 13427.0], [99.1, 13522.0], [99.2, 13692.0], [99.3, 13708.0], [99.4, 13819.0], [99.5, 13830.0], [99.6, 14311.0], [99.7, 14361.0], [99.8, 15200.0], [99.9, 16123.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 3.0], [68.8, 3.0], [68.9, 4.0], [69.0, 5.0], [69.1, 5.0], [69.2, 6.0], [69.3, 6.0], [69.4, 6.0], [69.5, 6.0], [69.6, 7.0], [69.7, 9.0], [69.8, 10.0], [69.9, 13.0], [70.0, 14.0], [70.1, 14.0], [70.2, 17.0], [70.3, 104.0], [70.4, 590.0], [70.5, 594.0], [70.6, 687.0], [70.7, 689.0], [70.8, 768.0], [70.9, 779.0], [71.0, 868.0], [71.1, 888.0], [71.2, 919.0], [71.3, 925.0], [71.4, 1004.0], [71.5, 1047.0], [71.6, 1206.0], [71.7, 1293.0], [71.8, 1397.0], [71.9, 1399.0], [72.0, 1737.0], [72.1, 1837.0], [72.2, 1897.0], [72.3, 1918.0], [72.4, 1928.0], [72.5, 1935.0], [72.6, 2013.0], [72.7, 2025.0], [72.8, 2330.0], [72.9, 2338.0], [73.0, 2513.0], [73.1, 2596.0], [73.2, 2690.0], [73.3, 2712.0], [73.4, 2731.0], [73.5, 2781.0], [73.6, 2898.0], [73.7, 2901.0], [73.8, 2977.0], [73.9, 3007.0], [74.0, 3112.0], [74.1, 3305.0], [74.2, 3477.0], [74.3, 3480.0], [74.4, 3659.0], [74.5, 3710.0], [74.6, 3753.0], [74.7, 3805.0], [74.8, 3908.0], [74.9, 4114.0], [75.0, 4201.0], [75.1, 4228.0], [75.2, 4384.0], [75.3, 4466.0], [75.4, 4603.0], [75.5, 4638.0], [75.6, 4701.0], [75.7, 4704.0], [75.8, 4777.0], [75.9, 4803.0], [76.0, 4905.0], [76.1, 4909.0], [76.2, 5117.0], [76.3, 5216.0], [76.4, 5286.0], [76.5, 5355.0], [76.6, 5399.0], [76.7, 5402.0], [76.8, 5418.0], [76.9, 5465.0], [77.0, 5512.0], [77.1, 5513.0], [77.2, 5591.0], [77.3, 5600.0], [77.4, 5610.0], [77.5, 5626.0], [77.6, 5690.0], [77.7, 5692.0], [77.8, 5715.0], [77.9, 5798.0], [78.0, 5814.0], [78.1, 5831.0], [78.2, 5901.0], [78.3, 5905.0], [78.4, 5949.0], [78.5, 5973.0], [78.6, 5997.0], [78.7, 6009.0], [78.8, 6029.0], [78.9, 6078.0], [79.0, 6084.0], [79.1, 6171.0], [79.2, 6177.0], [79.3, 6185.0], [79.4, 6189.0], [79.5, 6207.0], [79.6, 6333.0], [79.7, 6389.0], [79.8, 6454.0], [79.9, 6466.0], [80.0, 6483.0], [80.1, 6501.0], [80.2, 6519.0], [80.3, 6563.0], [80.4, 6572.0], [80.5, 6578.0], [80.6, 6597.0], [80.7, 6610.0], [80.8, 6668.0], [80.9, 6668.0], [81.0, 6699.0], [81.1, 6714.0], [81.2, 6721.0], [81.3, 6739.0], [81.4, 6783.0], [81.5, 6794.0], [81.6, 6812.0], [81.7, 6867.0], [81.8, 6941.0], [81.9, 6991.0], [82.0, 7081.0], [82.1, 7119.0], [82.2, 7133.0], [82.3, 7145.0], [82.4, 7194.0], [82.5, 7195.0], [82.6, 7198.0], [82.7, 7204.0], [82.8, 7263.0], [82.9, 7271.0], [83.0, 7300.0], [83.1, 7311.0], [83.2, 7390.0], [83.3, 7402.0], [83.4, 7432.0], [83.5, 7437.0], [83.6, 7484.0], [83.7, 7501.0], [83.8, 7575.0], [83.9, 7587.0], [84.0, 7638.0], [84.1, 7677.0], [84.2, 7682.0], [84.3, 7692.0], [84.4, 7709.0], [84.5, 7757.0], [84.6, 7793.0], [84.7, 7809.0], [84.8, 7819.0], [84.9, 7901.0], [85.0, 7917.0], [85.1, 8007.0], [85.2, 8178.0], [85.3, 8179.0], [85.4, 8205.0], [85.5, 8233.0], [85.6, 8257.0], [85.7, 8278.0], [85.8, 8314.0], [85.9, 8314.0], [86.0, 8356.0], [86.1, 8358.0], [86.2, 8371.0], [86.3, 8372.0], [86.4, 8396.0], [86.5, 8418.0], [86.6, 8506.0], [86.7, 8565.0], [86.8, 8655.0], [86.9, 8782.0], [87.0, 8903.0], [87.1, 8910.0], [87.2, 8976.0], [87.3, 8985.0], [87.4, 9029.0], [87.5, 9091.0], [87.6, 9127.0], [87.7, 9219.0], [87.8, 9283.0], [87.9, 9284.0], [88.0, 9317.0], [88.1, 9318.0], [88.2, 9479.0], [88.3, 9510.0], [88.4, 9526.0], [88.5, 9547.0], [88.6, 9617.0], [88.7, 9706.0], [88.8, 9745.0], [88.9, 9772.0], [89.0, 9807.0], [89.1, 9820.0], [89.2, 9946.0], [89.3, 10015.0], [89.4, 10225.0], [89.5, 10235.0], [89.6, 10295.0], [89.7, 10310.0], [89.8, 10476.0], [89.9, 10510.0], [90.0, 10644.0], [90.1, 10695.0], [90.2, 10838.0], [90.3, 10853.0], [90.4, 11078.0], [90.5, 11101.0], [90.6, 11123.0], [90.7, 11133.0], [90.8, 11267.0], [90.9, 11290.0], [91.0, 11393.0], [91.1, 11510.0], [91.2, 11579.0], [91.3, 11582.0], [91.4, 11693.0], [91.5, 11706.0], [91.6, 11825.0], [91.7, 11876.0], [91.8, 12352.0], [91.9, 12403.0], [92.0, 12509.0], [92.1, 12512.0], [92.2, 12634.0], [92.3, 12793.0], [92.4, 12910.0], [92.5, 12992.0], [92.6, 13101.0], [92.7, 13119.0], [92.8, 13362.0], [92.9, 13385.0], [93.0, 13476.0], [93.1, 13540.0], [93.2, 13616.0], [93.3, 13807.0], [93.4, 14125.0], [93.5, 14393.0], [93.6, 14645.0], [93.7, 14692.0], [93.8, 14790.0], [93.9, 14982.0], [94.0, 15250.0], [94.1, 15266.0], [94.2, 15280.0], [94.3, 15282.0], [94.4, 15581.0], [94.5, 15682.0], [94.6, 15796.0], [94.7, 15801.0], [94.8, 15998.0], [94.9, 16018.0], [95.0, 16103.0], [95.1, 16269.0], [95.2, 16471.0], [95.3, 16487.0], [95.4, 16699.0], [95.5, 16884.0], [95.6, 17174.0], [95.7, 17499.0], [95.8, 18113.0], [95.9, 18174.0], [96.0, 18546.0], [96.1, 18969.0], [96.2, 19006.0], [96.3, 19011.0], [96.4, 19200.0], [96.5, 19214.0], [96.6, 19280.0], [96.7, 19293.0], [96.8, 19732.0], [96.9, 19800.0], [97.0, 20296.0], [97.1, 20516.0], [97.2, 20799.0], [97.3, 20816.0], [97.4, 21002.0], [97.5, 21065.0], [97.6, 21218.0], [97.7, 21515.0], [97.8, 22374.0], [97.9, 22390.0], [98.0, 22700.0], [98.1, 22767.0], [98.2, 22799.0], [98.3, 22869.0], [98.4, 23376.0], [98.5, 23685.0], [98.6, 23762.0], [98.7, 23762.0], [98.8, 24243.0], [98.9, 24762.0], [99.0, 26103.0], [99.1, 26559.0], [99.2, 27073.0], [99.3, 27296.0], [99.4, 28930.0], [99.5, 31183.0], [99.6, 31682.0], [99.7, 31826.0], [99.8, 33298.0], [99.9, 33613.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1137.0, "series": [{"data": [[0.0, 1137.0], [600.0, 21.0], [700.0, 4.0], [800.0, 13.0], [900.0, 1.0], [1000.0, 4.0], [1100.0, 6.0], [1200.0, 6.0], [1300.0, 14.0], [1400.0, 4.0], [1500.0, 3.0], [1600.0, 2.0], [1700.0, 2.0], [1900.0, 4.0], [2000.0, 7.0], [2200.0, 1.0], [2300.0, 4.0], [2500.0, 4.0], [2700.0, 2.0], [2900.0, 2.0], [3000.0, 1.0], [3200.0, 1.0], [3400.0, 4.0], [3700.0, 4.0], [3600.0, 1.0], [3800.0, 3.0], [3900.0, 3.0], [4200.0, 1.0], [4100.0, 7.0], [4300.0, 4.0], [4600.0, 4.0], [4400.0, 4.0], [4500.0, 3.0], [5100.0, 3.0], [4900.0, 2.0], [5200.0, 4.0], [5600.0, 3.0], [5400.0, 7.0], [5500.0, 6.0], [5800.0, 1.0], [5700.0, 4.0], [6100.0, 2.0], [5900.0, 1.0], [6000.0, 4.0], [6200.0, 1.0], [6300.0, 4.0], [6400.0, 9.0], [6500.0, 12.0], [6600.0, 3.0], [6700.0, 9.0], [6900.0, 7.0], [6800.0, 3.0], [7100.0, 5.0], [7000.0, 12.0], [7300.0, 7.0], [7400.0, 8.0], [7200.0, 2.0], [7500.0, 3.0], [7600.0, 1.0], [7800.0, 3.0], [7900.0, 1.0], [8100.0, 2.0], [8000.0, 9.0], [8700.0, 1.0], [8600.0, 4.0], [8200.0, 2.0], [8500.0, 1.0], [8400.0, 1.0], [8900.0, 2.0], [9200.0, 1.0], [8800.0, 3.0], [9300.0, 1.0], [9500.0, 1.0], [10100.0, 1.0], [10200.0, 1.0], [10700.0, 1.0], [12300.0, 1.0], [15300.0, 2.0], [15200.0, 1.0], [16100.0, 3.0], [100.0, 17.0], [200.0, 11.0], [300.0, 5.0], [400.0, 8.0], [500.0, 13.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[0.0, 1047.0], [100.0, 1.0], [400.0, 2.0], [500.0, 1.0], [600.0, 3.0], [800.0, 4.0], [900.0, 2.0], [1000.0, 2.0], [1100.0, 2.0], [1200.0, 6.0], [1300.0, 7.0], [1400.0, 2.0], [1500.0, 3.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 9.0], [2000.0, 5.0], [2100.0, 4.0], [2200.0, 5.0], [2300.0, 9.0], [2400.0, 6.0], [2500.0, 10.0], [2600.0, 7.0], [2700.0, 5.0], [2800.0, 11.0], [2900.0, 6.0], [3000.0, 5.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 3.0], [3400.0, 4.0], [3500.0, 2.0], [3600.0, 5.0], [3700.0, 2.0], [3800.0, 6.0], [3900.0, 2.0], [4000.0, 2.0], [4200.0, 11.0], [4300.0, 7.0], [4100.0, 1.0], [4600.0, 8.0], [4500.0, 2.0], [4400.0, 3.0], [4800.0, 3.0], [4700.0, 14.0], [4900.0, 7.0], [5000.0, 3.0], [5100.0, 5.0], [5200.0, 2.0], [5300.0, 5.0], [5500.0, 5.0], [5600.0, 8.0], [5400.0, 8.0], [5700.0, 7.0], [5800.0, 2.0], [6100.0, 4.0], [5900.0, 5.0], [6000.0, 5.0], [6300.0, 10.0], [6200.0, 5.0], [6500.0, 5.0], [6400.0, 16.0], [6600.0, 8.0], [6900.0, 3.0], [6700.0, 4.0], [6800.0, 3.0], [7100.0, 9.0], [7000.0, 7.0], [7200.0, 8.0], [7300.0, 6.0], [7600.0, 2.0], [7500.0, 1.0], [7700.0, 6.0], [7800.0, 7.0], [7900.0, 4.0], [8100.0, 1.0], [8300.0, 12.0], [8600.0, 4.0], [8200.0, 2.0], [8400.0, 4.0], [8500.0, 3.0], [8700.0, 4.0], [8900.0, 3.0], [9000.0, 2.0], [9200.0, 4.0], [9100.0, 1.0], [9600.0, 2.0], [9300.0, 3.0], [10100.0, 4.0], [9900.0, 1.0], [10000.0, 1.0], [10700.0, 2.0], [11100.0, 1.0], [10800.0, 2.0], [11200.0, 2.0], [11000.0, 1.0], [11300.0, 2.0], [11700.0, 1.0], [11400.0, 1.0], [11800.0, 3.0], [11900.0, 1.0], [12600.0, 2.0], [12500.0, 4.0], [12400.0, 1.0], [15400.0, 1.0], [15500.0, 6.0], [15600.0, 4.0], [15700.0, 1.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[0.0, 1036.0], [100.0, 4.0], [500.0, 2.0], [600.0, 2.0], [700.0, 2.0], [800.0, 3.0], [900.0, 3.0], [1000.0, 6.0], [1200.0, 2.0], [1300.0, 5.0], [1400.0, 7.0], [1500.0, 4.0], [1600.0, 2.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 8.0], [2100.0, 3.0], [2200.0, 5.0], [2300.0, 6.0], [2400.0, 3.0], [2500.0, 4.0], [2600.0, 6.0], [2800.0, 6.0], [2700.0, 4.0], [2900.0, 7.0], [3000.0, 2.0], [3100.0, 4.0], [3200.0, 5.0], [3300.0, 1.0], [3400.0, 2.0], [3500.0, 2.0], [3700.0, 2.0], [3800.0, 1.0], [4300.0, 1.0], [4200.0, 2.0], [4600.0, 5.0], [4500.0, 1.0], [4400.0, 3.0], [4700.0, 6.0], [4900.0, 7.0], [5000.0, 2.0], [5200.0, 2.0], [5300.0, 2.0], [5400.0, 5.0], [5600.0, 8.0], [5500.0, 1.0], [5700.0, 4.0], [5800.0, 6.0], [5900.0, 3.0], [6100.0, 1.0], [6000.0, 3.0], [6300.0, 6.0], [6600.0, 8.0], [6400.0, 5.0], [6500.0, 4.0], [6800.0, 9.0], [6900.0, 4.0], [6700.0, 2.0], [7000.0, 4.0], [7100.0, 6.0], [7200.0, 7.0], [7400.0, 13.0], [7300.0, 10.0], [7600.0, 3.0], [7500.0, 3.0], [7900.0, 6.0], [7700.0, 4.0], [7800.0, 12.0], [8000.0, 4.0], [8100.0, 8.0], [8600.0, 4.0], [8700.0, 5.0], [8200.0, 4.0], [8400.0, 14.0], [8500.0, 5.0], [8300.0, 8.0], [9200.0, 3.0], [9100.0, 2.0], [8900.0, 1.0], [9000.0, 5.0], [9300.0, 6.0], [9500.0, 3.0], [9400.0, 2.0], [9800.0, 1.0], [10200.0, 2.0], [10100.0, 1.0], [9900.0, 2.0], [10000.0, 3.0], [10400.0, 1.0], [10700.0, 1.0], [10500.0, 2.0], [10600.0, 2.0], [10900.0, 6.0], [11000.0, 1.0], [11500.0, 8.0], [11600.0, 7.0], [11400.0, 3.0], [11300.0, 1.0], [12200.0, 2.0], [12000.0, 1.0], [12100.0, 1.0], [12600.0, 2.0], [12700.0, 4.0], [12300.0, 9.0], [12400.0, 3.0], [12500.0, 3.0], [12800.0, 6.0], [13000.0, 5.0], [13300.0, 1.0], [13100.0, 5.0], [13200.0, 1.0], [12900.0, 3.0], [13500.0, 1.0], [13600.0, 2.0], [13800.0, 2.0], [13700.0, 2.0], [13400.0, 1.0], [14300.0, 2.0], [14100.0, 1.0], [14600.0, 1.0], [15200.0, 1.0], [16100.0, 1.0], [16500.0, 1.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[0.0, 1054.0], [100.0, 1.0], [34700.0, 1.0], [500.0, 3.0], [600.0, 3.0], [700.0, 4.0], [800.0, 3.0], [900.0, 3.0], [1000.0, 3.0], [1200.0, 3.0], [1300.0, 2.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 3.0], [1900.0, 4.0], [2000.0, 3.0], [2300.0, 2.0], [2200.0, 1.0], [2500.0, 3.0], [2600.0, 2.0], [2700.0, 4.0], [2800.0, 2.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 2.0], [3400.0, 3.0], [3700.0, 3.0], [3600.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4200.0, 2.0], [4100.0, 2.0], [4300.0, 2.0], [4600.0, 3.0], [4400.0, 2.0], [4800.0, 2.0], [4700.0, 4.0], [4900.0, 3.0], [5100.0, 1.0], [5200.0, 3.0], [5300.0, 3.0], [5500.0, 5.0], [5400.0, 4.0], [5600.0, 8.0], [5800.0, 4.0], [5700.0, 2.0], [6000.0, 6.0], [6100.0, 6.0], [5900.0, 7.0], [6300.0, 2.0], [6200.0, 2.0], [6600.0, 6.0], [6400.0, 5.0], [6500.0, 9.0], [6900.0, 3.0], [6700.0, 7.0], [6800.0, 3.0], [7100.0, 9.0], [7000.0, 2.0], [7300.0, 4.0], [7400.0, 6.0], [7200.0, 5.0], [7600.0, 6.0], [7500.0, 4.0], [7900.0, 3.0], [7700.0, 5.0], [7800.0, 3.0], [8000.0, 1.0], [8100.0, 4.0], [8200.0, 6.0], [8300.0, 10.0], [8500.0, 3.0], [8600.0, 1.0], [8400.0, 2.0], [8700.0, 2.0], [9200.0, 5.0], [8900.0, 6.0], [9100.0, 2.0], [9000.0, 2.0], [9400.0, 2.0], [9700.0, 4.0], [9600.0, 2.0], [9500.0, 4.0], [9300.0, 2.0], [9900.0, 1.0], [9800.0, 4.0], [10200.0, 5.0], [10000.0, 1.0], [10300.0, 2.0], [10400.0, 1.0], [10500.0, 1.0], [10600.0, 3.0], [11100.0, 4.0], [10800.0, 3.0], [11200.0, 4.0], [11000.0, 1.0], [10900.0, 1.0], [11700.0, 2.0], [11600.0, 2.0], [11500.0, 4.0], [11300.0, 1.0], [11800.0, 2.0], [12100.0, 1.0], [12500.0, 2.0], [12600.0, 2.0], [12400.0, 2.0], [12700.0, 1.0], [12300.0, 1.0], [13100.0, 2.0], [12800.0, 1.0], [13300.0, 3.0], [12900.0, 2.0], [13000.0, 1.0], [13400.0, 2.0], [13800.0, 1.0], [13600.0, 2.0], [13500.0, 1.0], [14300.0, 1.0], [14100.0, 1.0], [13900.0, 1.0], [14700.0, 2.0], [14400.0, 1.0], [14600.0, 2.0], [15200.0, 5.0], [15000.0, 1.0], [14900.0, 1.0], [15700.0, 2.0], [15800.0, 2.0], [15400.0, 1.0], [15500.0, 1.0], [15600.0, 1.0], [16100.0, 1.0], [15900.0, 1.0], [16300.0, 1.0], [16000.0, 2.0], [16200.0, 1.0], [16800.0, 1.0], [16500.0, 1.0], [17400.0, 1.0], [16600.0, 1.0], [16400.0, 2.0], [17100.0, 2.0], [18100.0, 3.0], [17800.0, 1.0], [19200.0, 5.0], [19300.0, 1.0], [19000.0, 3.0], [18500.0, 1.0], [18900.0, 2.0], [20000.0, 1.0], [19700.0, 1.0], [20200.0, 1.0], [19800.0, 1.0], [20500.0, 1.0], [21200.0, 1.0], [21500.0, 2.0], [20800.0, 1.0], [20600.0, 1.0], [20700.0, 1.0], [20900.0, 1.0], [21000.0, 3.0], [22300.0, 3.0], [23000.0, 1.0], [23300.0, 1.0], [22700.0, 4.0], [22800.0, 1.0], [24200.0, 1.0], [23700.0, 3.0], [23600.0, 2.0], [25100.0, 1.0], [24700.0, 1.0], [26100.0, 1.0], [26500.0, 2.0], [27000.0, 1.0], [27200.0, 1.0], [27900.0, 1.0], [28900.0, 1.0], [31100.0, 1.0], [31300.0, 1.0], [31600.0, 1.0], [31800.0, 2.0], [33200.0, 1.0], [33600.0, 1.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 34700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 165.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4176.0, "series": [{"data": [[0.0, 221.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 165.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1438.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 4176.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 49.904255319148945, "minX": 1.64643318E12, "maxY": 75.0, "series": [{"data": [[1.64643318E12, 49.904255319148945], [1.6464333E12, 75.0], [1.64643324E12, 75.0], [1.64643336E12, 60.36595049042495]], "isOverall": false, "label": "API_gateway tests", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643336E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 6595.0196969696935, "series": [{"data": [[2.0, 0.33333333333333337], [3.0, 3.0], [4.0, 2.0], [5.0, 85.0], [6.0, 22.2], [7.0, 1.0], [8.0, 3.0], [10.0, 144.8], [11.0, 31.428571428571427], [12.0, 0.5], [13.0, 80.66666666666666], [14.0, 1.5], [16.0, 0.0], [17.0, 91.25], [18.0, 0.0], [19.0, 0.4], [20.0, 0.3333333333333333], [21.0, 0.375], [22.0, 545.0], [23.0, 0.5], [24.0, 86.57142857142857], [26.0, 0.0], [27.0, 304.8947368421052], [28.0, 0.75], [29.0, 0.0], [30.0, 45.300000000000004], [31.0, 445.0], [32.0, 0.07142857142857144], [35.0, 298.2], [34.0, 0.20000000000000004], [37.0, 956.5], [36.0, 0.23076923076923075], [38.0, 996.75], [39.0, 0.14285714285714285], [40.0, 1083.75], [41.0, 402.66666666666663], [42.0, 178.86956521739128], [43.0, 974.6666666666666], [44.0, 177.33333333333334], [45.0, 0.6], [46.0, 2.0], [47.0, 40.142857142857146], [48.0, 0.5714285714285714], [49.0, 0.7894736842105262], [50.0, 0.6666666666666667], [51.0, 0.4000000000000001], [52.0, 0.375], [53.0, 0.625], [54.0, 0.4285714285714286], [55.0, 1.0], [56.0, 0.6], [57.0, 0.23809523809523814], [59.0, 0.4], [58.0, 0.06666666666666668], [60.0, 198.66666666666669], [61.0, 0.0], [62.0, 206.74999999999997], [63.0, 0.20833333333333331], [64.0, 89.08333333333334], [67.0, 0.3333333333333333], [66.0, 0.22222222222222227], [65.0, 0.0], [71.0, 69.90476190476191], [70.0, 0.19354838709677424], [75.0, 2249.021276595749], [74.0, 0.1], [73.0, 0.5925925925925928], [72.0, 0.46305418719211805], [1.0, 65.29411764705883]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[62.301333333333545, 1022.0133333333316]], "isOverall": false, "label": "getAllInfo-Aggregated", "isController": false}, {"data": [[2.0, 1.0], [3.0, 0.0], [5.0, 418.0], [6.0, 0.0], [8.0, 617.0], [10.0, 198.83333333333331], [11.0, 94.71428571428571], [12.0, 0.25], [13.0, 0.5], [14.0, 644.6666666666667], [16.0, 0.25], [17.0, 384.69230769230774], [18.0, 0.0], [19.0, 0.0], [20.0, 0.0], [21.0, 381.99999999999994], [22.0, 480.25000000000006], [23.0, 0.25], [24.0, 0.375], [25.0, 0.0], [26.0, 240.70000000000002], [27.0, 0.0], [28.0, 305.4], [29.0, 0.0], [30.0, 635.0], [31.0, 0.0], [32.0, 0.23529411764705882], [35.0, 0.0], [34.0, 0.125], [36.0, 0.18181818181818182], [38.0, 493.74999999999994], [39.0, 0.07142857142857144], [40.0, 1417.25], [41.0, 505.66666666666663], [43.0, 446.0], [42.0, 0.20833333333333334], [45.0, 0.33333333333333337], [44.0, 0.0], [47.0, 485.75000000000006], [49.0, 0.8888888888888888], [48.0, 0.25], [51.0, 0.28571428571428575], [50.0, 0.25], [53.0, 0.4], [52.0, 0.14285714285714288], [55.0, 0.0], [54.0, 0.5], [57.0, 173.4090909090909], [56.0, 0.25], [59.0, 0.16666666666666669], [58.0, 0.2777777777777778], [60.0, 1550.0], [61.0, 0.14285714285714285], [63.0, 0.12500000000000003], [62.0, 0.2], [64.0, 508.9545454545453], [67.0, 1.6], [66.0, 0.25], [69.0, 2866.0], [71.0, 0.14634146341463414], [70.0, 1.0967741935483872], [72.0, 46.04761904761904], [74.0, 124.48275862068962], [75.0, 3755.885670731703], [73.0, 0.2142857142857143], [1.0, 10.882352941176471]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[62.70333333333335, 1715.0066666666642]], "isOverall": false, "label": "getAllStatus-Aggregated", "isController": false}, {"data": [[2.0, 0.0], [3.0, 0.0], [4.0, 619.0], [6.0, 169.66666666666663], [9.0, 823.0], [10.0, 250.42857142857144], [11.0, 107.50000000000001], [12.0, 0.33333333333333337], [13.0, 302.0], [14.0, 0.0], [16.0, 0.0], [17.0, 469.4285714285714], [18.0, 0.33333333333333337], [19.0, 0.5], [20.0, 0.5555555555555557], [21.0, 0.28571428571428575], [22.0, 687.1000000000001], [23.0, 0.5], [24.0, 88.125], [25.0, 0.0], [26.0, 0.12500000000000003], [27.0, 0.18181818181818182], [28.0, 0.0], [29.0, 0.2], [30.0, 896.6363636363637], [31.0, 1.0], [32.0, 152.45000000000002], [33.0, 1653.25], [35.0, 2230.5], [34.0, 0.20000000000000004], [36.0, 0.13333333333333333], [39.0, 86.00000000000003], [38.0, 0.5], [40.0, 579.5], [41.0, 0.0], [43.0, 998.1428571428571], [42.0, 0.125], [45.0, 0.0], [44.0, 0.0], [47.0, 1174.5], [49.0, 0.05882352941176472], [48.0, 0.25], [51.0, 0.28571428571428575], [50.0, 0.33333333333333337], [53.0, 0.0], [52.0, 0.2], [55.0, 0.0], [54.0, 0.0], [57.0, 0.45], [56.0, 0.0], [59.0, 0.2727272727272727], [58.0, 0.15384615384615383], [60.0, 3196.0], [61.0, 0.25], [63.0, 553.0333333333334], [62.0, 0.25], [67.0, 0.33333333333333337], [66.0, 0.14285714285714285], [64.0, 0.2727272727272727], [68.0, 3301.0], [70.0, 233.25806451612902], [71.0, 1366.3272727272729], [75.0, 4561.998487140698], [74.0, 0.2222222222222222], [73.0, 0.5909090909090909], [72.0, 0.2644230769230769], [1.0, 80.47058823529412]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[62.63066666666661, 2155.143999999999]], "isOverall": false, "label": "postNewRequest-Aggregated", "isController": false}, {"data": [[2.0, 0.0], [3.0, 1.0], [5.0, 363.66666666666663], [6.0, 0.0], [10.0, 247.50000000000003], [11.0, 14.499999999999998], [12.0, 0.0], [13.0, 378.79999999999995], [14.0, 0.0], [16.0, 0.0], [17.0, 194.16666666666663], [18.0, 0.0], [19.0, 0.0], [20.0, 0.5555555555555556], [21.0, 308.30000000000007], [22.0, 580.4], [23.0, 0.5], [24.0, 342.4166666666667], [25.0, 0.0], [26.0, 520.6], [27.0, 0.22222222222222227], [28.0, 0.33333333333333337], [29.0, 0.25], [30.0, 531.75], [31.0, 0.16666666666666669], [32.0, 0.20000000000000004], [35.0, 0.0], [34.0, 0.22222222222222227], [37.0, 1241.8000000000002], [36.0, 0.0], [38.0, 1398.3333333333335], [39.0, 0.13333333333333336], [40.0, 1215.6], [41.0, 0.0], [43.0, 1313.1666666666665], [42.0, 0.12], [45.0, 0.0], [44.0, 0.12500000000000003], [47.0, 1088.2857142857142], [49.0, 0.31818181818181823], [48.0, 0.0], [51.0, 0.11111111111111113], [50.0, 0.33333333333333337], [53.0, 0.0], [52.0, 0.3636363636363636], [55.0, 0.6666666666666666], [54.0, 0.0], [57.0, 0.09523809523809523], [56.0, 0.0], [58.0, 228.95238095238093], [59.0, 0.07692307692307693], [60.0, 1350.375], [61.0, 0.16666666666666666], [63.0, 0.1785714285714286], [62.0, 0.2], [67.0, 0.4], [66.0, 0.18181818181818182], [65.0, 0.0], [64.0, 0.19047619047619047], [71.0, 211.3589743589743], [70.0, 0.7941176470588237], [68.0, 1.0], [75.0, 6595.0196969696935], [74.0, 0.3214285714285714], [73.0, 0.5172413793103449], [72.0, 0.28140703517587956], [1.0, 390.75]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}, {"data": [[62.72599999999986, 2959.8646666666655]], "isOverall": false, "label": "getDataOfRequestID-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 75.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 432.3666666666667, "minX": 1.64643318E12, "maxY": 7096375.833333333, "series": [{"data": [[1.64643318E12, 3315262.5166666666], [1.6464333E12, 6272503.233333333], [1.64643324E12, 7096375.833333333], [1.64643336E12, 1277618.85]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64643318E12, 1788.7833333333333], [1.6464333E12, 2302.4333333333334], [1.64643324E12, 2610.8333333333335], [1.64643336E12, 432.3666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643336E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 49.81231953801722, "minX": 1.64643318E12, "maxY": 11999.523809523815, "series": [{"data": [[1.64643318E12, 1252.6962025316454], [1.6464333E12, 3991.299319727892], [1.64643324E12, 4465.500000000001], [1.64643336E12, 49.81231953801722]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643318E12, 3200.3269230769233], [1.6464333E12, 6846.919463087246], [1.64643324E12, 5960.388571428569], [1.64643336E12, 164.56809701492534]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643318E12, 4103.951219512195], [1.6464333E12, 7238.944827586209], [1.64643324E12, 8093.022857142853], [1.64643336E12, 247.87511825922454]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643318E12, 4882.870588235293], [1.6464333E12, 11999.523809523815], [1.64643324E12, 9619.629870129871], [1.64643336E12, 699.6409335727116]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643336E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 8.65447545717037, "minX": 1.64643318E12, "maxY": 11969.387755102043, "series": [{"data": [[1.64643318E12, 1252.613924050633], [1.6464333E12, 3991.2653061224482], [1.64643324E12, 4465.435897435898], [1.64643336E12, 8.65447545717037]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643318E12, 3200.278846153846], [1.6464333E12, 6846.8255033557], [1.64643324E12, 5960.354285714287], [1.64643336E12, 98.92257462686561]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643318E12, 4103.886178861787], [1.6464333E12, 7238.868965517243], [1.64643324E12, 8092.994285714283], [1.64643336E12, 169.32734153263968]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643318E12, 4874.823529411765], [1.6464333E12, 11969.387755102043], [1.64643324E12, 9599.805194805196], [1.64643336E12, 133.8491921005387]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643336E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.14285714285714277, "minX": 1.64643318E12, "maxY": 1.2425409047160738, "series": [{"data": [[1.64643318E12, 0.23417721518987353], [1.6464333E12, 0.2312925170068028], [1.64643324E12, 0.185897435897436], [1.64643336E12, 1.2425409047160738]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643318E12, 0.1634615384615385], [1.6464333E12, 0.19463087248322156], [1.64643324E12, 0.15428571428571436], [1.64643336E12, 0.2248134328358207]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643318E12, 0.21138211382113833], [1.6464333E12, 0.17241379310344832], [1.64643324E12, 0.21714285714285717], [1.64643336E12, 1.1967833491012299]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643318E12, 0.17647058823529413], [1.6464333E12, 0.21768707482993194], [1.64643324E12, 0.14285714285714277], [1.64643336E12, 0.23788150807899475]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643336E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.64643318E12, "maxY": 34738.0, "series": [{"data": [[1.64643318E12, 14393.0], [1.6464333E12, 34738.0], [1.64643324E12, 23009.0], [1.64643336E12, 16487.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64643318E12, 7394.8], [1.6464333E12, 15297.8], [1.64643324E12, 12396.3], [1.64643336E12, 12405.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64643318E12, 11281.960000000014], [1.6464333E12, 31697.840000000004], [1.64643324E12, 20140.449999999997], [1.64643336E12, 16485.88]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64643318E12, 8657.55], [1.6464333E12, 16622.949999999993], [1.64643324E12, 13812.64999999999], [1.64643336E12, 13589.4]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64643318E12, 1.0], [1.6464333E12, 1.0], [1.64643324E12, 2.0], [1.64643336E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64643318E12, 1973.5], [1.6464333E12, 6944.0], [1.64643324E12, 6737.0], [1.64643336E12, 773.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643336E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 12982.0, "series": [{"data": [[33.0, 2327.5], [2.0, 7582.0], [32.0, 3760.5], [34.0, 4544.5], [35.0, 2604.0], [39.0, 5333.0], [46.0, 6389.0], [3.0, 6946.5], [4.0, 6408.0], [5.0, 8276.0], [6.0, 7295.0], [7.0, 8096.0], [8.0, 8863.0], [9.0, 8466.0], [10.0, 7270.5], [11.0, 6406.0], [12.0, 6238.5], [13.0, 5688.0], [14.0, 5360.0], [15.0, 6353.0], [16.0, 8700.0], [1.0, 8875.0], [4176.0, 12982.0], [17.0, 1372.0], [18.0, 5590.5], [20.0, 2683.5], [21.0, 2320.0], [22.0, 2917.0], [23.0, 6907.0], [25.0, 4941.0], [26.0, 6803.0], [28.0, 2807.0], [30.0, 1498.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4176.0, 0.0], [1.0, 1021.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4176.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 12982.0, "series": [{"data": [[33.0, 2327.5], [2.0, 7582.0], [32.0, 3760.5], [34.0, 4544.5], [35.0, 2604.0], [39.0, 5333.0], [46.0, 6389.0], [3.0, 6946.5], [4.0, 6408.0], [5.0, 8276.0], [6.0, 7294.5], [7.0, 8096.0], [8.0, 8859.5], [9.0, 8466.0], [10.0, 7270.0], [11.0, 6406.0], [12.0, 6238.5], [13.0, 5688.0], [14.0, 5360.0], [15.0, 6353.0], [16.0, 8700.0], [1.0, 8875.0], [4176.0, 12982.0], [17.0, 1372.0], [18.0, 5590.5], [20.0, 2683.5], [21.0, 2320.0], [22.0, 2917.0], [23.0, 6906.5], [25.0, 4941.0], [26.0, 6803.0], [28.0, 2807.0], [30.0, 1498.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4176.0, 0.0], [1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 4176.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.083333333333334, "minX": 1.64643318E12, "maxY": 70.11666666666666, "series": [{"data": [[1.64643318E12, 9.083333333333334], [1.6464333E12, 9.8], [1.64643324E12, 11.0], [1.64643336E12, 70.11666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643336E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.64643318E12, "maxY": 67.63333333333334, "series": [{"data": [[1.64643318E12, 7.833333333333333], [1.6464333E12, 9.8], [1.64643324E12, 11.0], [1.64643336E12, 1.7666666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64643336E12, 67.63333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.64643336E12, 0.9166666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.64643336E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}, {"data": [[1.64643336E12, 1.0333333333333334]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643336E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.64643318E12, "maxY": 18.1, "series": [{"data": [[1.64643318E12, 2.05], [1.6464333E12, 2.4166666666666665], [1.64643324E12, 2.9166666666666665], [1.64643336E12, 0.5]], "isOverall": false, "label": "postNewRequest-success", "isController": false}, {"data": [[1.64643336E12, 17.116666666666667]], "isOverall": false, "label": "postNewRequest-failure", "isController": false}, {"data": [[1.64643336E12, 17.4]], "isOverall": false, "label": "getAllStatus-failure", "isController": false}, {"data": [[1.64643318E12, 2.6333333333333333], [1.6464333E12, 2.45], [1.64643324E12, 2.6], [1.64643336E12, 0.3333333333333333]], "isOverall": false, "label": "getAllInfo-success", "isController": false}, {"data": [[1.64643336E12, 16.983333333333334]], "isOverall": false, "label": "getAllInfo-failure", "isController": false}, {"data": [[1.64643318E12, 1.4166666666666667], [1.6464333E12, 2.45], [1.64643324E12, 2.566666666666667], [1.64643336E12, 0.4666666666666667]], "isOverall": false, "label": "getDataOfRequestID-success", "isController": false}, {"data": [[1.64643336E12, 18.1]], "isOverall": false, "label": "getDataOfRequestID-failure", "isController": false}, {"data": [[1.64643318E12, 1.7333333333333334], [1.6464333E12, 2.4833333333333334], [1.64643324E12, 2.9166666666666665], [1.64643336E12, 0.4666666666666667]], "isOverall": false, "label": "getAllStatus-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643336E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.7666666666666666, "minX": 1.64643318E12, "maxY": 69.6, "series": [{"data": [[1.64643318E12, 7.833333333333333], [1.6464333E12, 9.8], [1.64643324E12, 11.0], [1.64643336E12, 1.7666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64643336E12, 69.6]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643336E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

