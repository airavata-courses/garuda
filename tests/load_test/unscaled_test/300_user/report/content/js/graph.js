/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 349801.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 5.0], [87.9, 5.0], [88.0, 5.0], [88.1, 6.0], [88.2, 7.0], [88.3, 7.0], [88.4, 8.0], [88.5, 9.0], [88.6, 10.0], [88.7, 11.0], [88.8, 12.0], [88.9, 14.0], [89.0, 16.0], [89.1, 17.0], [89.2, 19.0], [89.3, 23.0], [89.4, 25.0], [89.5, 27.0], [89.6, 29.0], [89.7, 31.0], [89.8, 35.0], [89.9, 36.0], [90.0, 40.0], [90.1, 46.0], [90.2, 50.0], [90.3, 71.0], [90.4, 74.0], [90.5, 90.0], [90.6, 108.0], [90.7, 166.0], [90.8, 185.0], [90.9, 189.0], [91.0, 198.0], [91.1, 234.0], [91.2, 258.0], [91.3, 273.0], [91.4, 301.0], [91.5, 349.0], [91.6, 361.0], [91.7, 414.0], [91.8, 474.0], [91.9, 490.0], [92.0, 603.0], [92.1, 619.0], [92.2, 676.0], [92.3, 706.0], [92.4, 742.0], [92.5, 802.0], [92.6, 863.0], [92.7, 929.0], [92.8, 1005.0], [92.9, 1007.0], [93.0, 1022.0], [93.1, 1023.0], [93.2, 1025.0], [93.3, 1026.0], [93.4, 1027.0], [93.5, 1030.0], [93.6, 1034.0], [93.7, 1037.0], [93.8, 1038.0], [93.9, 1041.0], [94.0, 1043.0], [94.1, 1073.0], [94.2, 1121.0], [94.3, 1136.0], [94.4, 1202.0], [94.5, 1293.0], [94.6, 1369.0], [94.7, 1389.0], [94.8, 1466.0], [94.9, 1561.0], [95.0, 1590.0], [95.1, 1719.0], [95.2, 1793.0], [95.3, 1912.0], [95.4, 2024.0], [95.5, 2079.0], [95.6, 2261.0], [95.7, 2338.0], [95.8, 2464.0], [95.9, 2515.0], [96.0, 2540.0], [96.1, 2614.0], [96.2, 2662.0], [96.3, 2692.0], [96.4, 2766.0], [96.5, 2885.0], [96.6, 2985.0], [96.7, 3040.0], [96.8, 3048.0], [96.9, 3135.0], [97.0, 3364.0], [97.1, 3819.0], [97.2, 4601.0], [97.3, 9149.0], [97.4, 10061.0], [97.5, 10718.0], [97.6, 11414.0], [97.7, 13326.0], [97.8, 15851.0], [97.9, 15946.0], [98.0, 15999.0], [98.1, 16146.0], [98.2, 16341.0], [98.3, 16550.0], [98.4, 16779.0], [98.5, 31074.0], [98.6, 31429.0], [98.7, 31483.0], [98.8, 31585.0], [98.9, 31676.0], [99.0, 31735.0], [99.1, 31876.0], [99.2, 32270.0], [99.3, 32674.0], [99.4, 33073.0], [99.5, 33372.0], [99.6, 33766.0], [99.7, 34169.0], [99.8, 34438.0], [99.9, 34839.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 5.0], [87.7, 5.0], [87.8, 6.0], [87.9, 7.0], [88.0, 8.0], [88.1, 9.0], [88.2, 10.0], [88.3, 11.0], [88.4, 13.0], [88.5, 16.0], [88.6, 19.0], [88.7, 20.0], [88.8, 24.0], [88.9, 26.0], [89.0, 28.0], [89.1, 30.0], [89.2, 31.0], [89.3, 33.0], [89.4, 34.0], [89.5, 36.0], [89.6, 37.0], [89.7, 39.0], [89.8, 41.0], [89.9, 43.0], [90.0, 46.0], [90.1, 48.0], [90.2, 49.0], [90.3, 59.0], [90.4, 94.0], [90.5, 895.0], [90.6, 1001.0], [90.7, 1023.0], [90.8, 1027.0], [90.9, 1031.0], [91.0, 1033.0], [91.1, 1038.0], [91.2, 1228.0], [91.3, 1628.0], [91.4, 1812.0], [91.5, 1909.0], [91.6, 1974.0], [91.7, 1991.0], [91.8, 2364.0], [91.9, 2775.0], [92.0, 2794.0], [92.1, 2872.0], [92.2, 2884.0], [92.3, 2890.0], [92.4, 2962.0], [92.5, 2974.0], [92.6, 2983.0], [92.7, 3066.0], [92.8, 3082.0], [92.9, 3178.0], [93.0, 3350.0], [93.1, 3359.0], [93.2, 3426.0], [93.3, 3453.0], [93.4, 3470.0], [93.5, 3618.0], [93.6, 4562.0], [93.7, 5012.0], [93.8, 5404.0], [93.9, 5489.0], [94.0, 5804.0], [94.1, 6014.0], [94.2, 6157.0], [94.3, 6277.0], [94.4, 6367.0], [94.5, 6483.0], [94.6, 6844.0], [94.7, 7040.0], [94.8, 7159.0], [94.9, 7687.0], [95.0, 7789.0], [95.1, 8146.0], [95.2, 9429.0], [95.3, 10569.0], [95.4, 11744.0], [95.5, 12401.0], [95.6, 12517.0], [95.7, 12916.0], [95.8, 13193.0], [95.9, 13206.0], [96.0, 14809.0], [96.1, 16659.0], [96.2, 20443.0], [96.3, 22496.0], [96.4, 26303.0], [96.5, 26385.0], [96.6, 26485.0], [96.7, 26576.0], [96.8, 26906.0], [96.9, 27079.0], [97.0, 27207.0], [97.1, 28206.0], [97.2, 29069.0], [97.3, 30677.0], [97.4, 31441.0], [97.5, 31909.0], [97.6, 32208.0], [97.7, 32987.0], [97.8, 33002.0], [97.9, 33061.0], [98.0, 33299.0], [98.1, 33638.0], [98.2, 34417.0], [98.3, 34748.0], [98.4, 36685.0], [98.5, 37325.0], [98.6, 38821.0], [98.7, 39027.0], [98.8, 40455.0], [98.9, 315011.0], [99.0, 316893.0], [99.1, 318218.0], [99.2, 319217.0], [99.3, 319977.0], [99.4, 322584.0], [99.5, 323391.0], [99.6, 328876.0], [99.7, 328967.0], [99.8, 329070.0], [99.9, 329752.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 3.0], [87.4, 3.0], [87.5, 4.0], [87.6, 4.0], [87.7, 5.0], [87.8, 5.0], [87.9, 5.0], [88.0, 6.0], [88.1, 6.0], [88.2, 7.0], [88.3, 8.0], [88.4, 8.0], [88.5, 9.0], [88.6, 9.0], [88.7, 11.0], [88.8, 12.0], [88.9, 14.0], [89.0, 16.0], [89.1, 19.0], [89.2, 23.0], [89.3, 34.0], [89.4, 202.0], [89.5, 615.0], [89.6, 958.0], [89.7, 1021.0], [89.8, 1024.0], [89.9, 1117.0], [90.0, 1428.0], [90.1, 1770.0], [90.2, 1886.0], [90.3, 2070.0], [90.4, 2405.0], [90.5, 2611.0], [90.6, 2699.0], [90.7, 3005.0], [90.8, 3214.0], [90.9, 3471.0], [91.0, 3584.0], [91.1, 3630.0], [91.2, 3705.0], [91.3, 3785.0], [91.4, 3811.0], [91.5, 3908.0], [91.6, 3992.0], [91.7, 4028.0], [91.8, 5013.0], [91.9, 6037.0], [92.0, 6612.0], [92.1, 6700.0], [92.2, 6722.0], [92.3, 6794.0], [92.4, 6898.0], [92.5, 7504.0], [92.6, 8073.0], [92.7, 8194.0], [92.8, 8308.0], [92.9, 8626.0], [93.0, 9763.0], [93.1, 10194.0], [93.2, 10923.0], [93.3, 11095.0], [93.4, 11298.0], [93.5, 11321.0], [93.6, 11444.0], [93.7, 11814.0], [93.8, 12632.0], [93.9, 12793.0], [94.0, 13516.0], [94.1, 14897.0], [94.2, 16100.0], [94.3, 16329.0], [94.4, 16586.0], [94.5, 16667.0], [94.6, 16704.0], [94.7, 17610.0], [94.8, 19991.0], [94.9, 20571.0], [95.0, 20753.0], [95.1, 20836.0], [95.2, 20948.0], [95.3, 26284.0], [95.4, 26301.0], [95.5, 26392.0], [95.6, 26405.0], [95.7, 26809.0], [95.8, 26900.0], [95.9, 27305.0], [96.0, 28793.0], [96.1, 28967.0], [96.2, 29875.0], [96.3, 30589.0], [96.4, 31296.0], [96.5, 31799.0], [96.6, 32279.0], [96.7, 32580.0], [96.8, 32976.0], [96.9, 33077.0], [97.0, 35164.0], [97.1, 35566.0], [97.2, 35967.0], [97.3, 36302.0], [97.4, 36639.0], [97.5, 37040.0], [97.6, 37306.0], [97.7, 37395.0], [97.8, 37512.0], [97.9, 37674.0], [98.0, 37777.0], [98.1, 37838.0], [98.2, 37915.0], [98.3, 38231.0], [98.4, 38649.0], [98.5, 38714.0], [98.6, 38722.0], [98.7, 38731.0], [98.8, 38744.0], [98.9, 38810.0], [99.0, 38821.0], [99.1, 38840.0], [99.2, 38845.0], [99.3, 39021.0], [99.4, 39694.0], [99.5, 40458.0], [99.6, 332768.0], [99.7, 333369.0], [99.8, 333587.0], [99.9, 333800.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 0.0], [60.1, 0.0], [60.2, 0.0], [60.3, 0.0], [60.4, 0.0], [60.5, 0.0], [60.6, 0.0], [60.7, 0.0], [60.8, 0.0], [60.9, 0.0], [61.0, 0.0], [61.1, 0.0], [61.2, 0.0], [61.3, 0.0], [61.4, 0.0], [61.5, 0.0], [61.6, 0.0], [61.7, 0.0], [61.8, 0.0], [61.9, 0.0], [62.0, 0.0], [62.1, 0.0], [62.2, 0.0], [62.3, 0.0], [62.4, 0.0], [62.5, 0.0], [62.6, 0.0], [62.7, 0.0], [62.8, 0.0], [62.9, 0.0], [63.0, 0.0], [63.1, 0.0], [63.2, 0.0], [63.3, 0.0], [63.4, 0.0], [63.5, 0.0], [63.6, 0.0], [63.7, 0.0], [63.8, 0.0], [63.9, 0.0], [64.0, 0.0], [64.1, 0.0], [64.2, 0.0], [64.3, 0.0], [64.4, 0.0], [64.5, 0.0], [64.6, 0.0], [64.7, 0.0], [64.8, 0.0], [64.9, 0.0], [65.0, 0.0], [65.1, 0.0], [65.2, 0.0], [65.3, 0.0], [65.4, 0.0], [65.5, 0.0], [65.6, 0.0], [65.7, 0.0], [65.8, 0.0], [65.9, 0.0], [66.0, 0.0], [66.1, 0.0], [66.2, 0.0], [66.3, 0.0], [66.4, 0.0], [66.5, 0.0], [66.6, 0.0], [66.7, 0.0], [66.8, 0.0], [66.9, 0.0], [67.0, 0.0], [67.1, 0.0], [67.2, 0.0], [67.3, 0.0], [67.4, 0.0], [67.5, 0.0], [67.6, 0.0], [67.7, 0.0], [67.8, 0.0], [67.9, 0.0], [68.0, 0.0], [68.1, 0.0], [68.2, 0.0], [68.3, 0.0], [68.4, 0.0], [68.5, 0.0], [68.6, 0.0], [68.7, 0.0], [68.8, 0.0], [68.9, 0.0], [69.0, 0.0], [69.1, 0.0], [69.2, 0.0], [69.3, 0.0], [69.4, 0.0], [69.5, 0.0], [69.6, 0.0], [69.7, 0.0], [69.8, 0.0], [69.9, 0.0], [70.0, 0.0], [70.1, 0.0], [70.2, 0.0], [70.3, 0.0], [70.4, 0.0], [70.5, 0.0], [70.6, 0.0], [70.7, 0.0], [70.8, 0.0], [70.9, 0.0], [71.0, 0.0], [71.1, 0.0], [71.2, 0.0], [71.3, 0.0], [71.4, 0.0], [71.5, 0.0], [71.6, 0.0], [71.7, 0.0], [71.8, 0.0], [71.9, 0.0], [72.0, 0.0], [72.1, 0.0], [72.2, 0.0], [72.3, 0.0], [72.4, 0.0], [72.5, 0.0], [72.6, 0.0], [72.7, 0.0], [72.8, 0.0], [72.9, 0.0], [73.0, 0.0], [73.1, 0.0], [73.2, 0.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 2.0], [88.4, 2.0], [88.5, 2.0], [88.6, 2.0], [88.7, 2.0], [88.8, 3.0], [88.9, 3.0], [89.0, 4.0], [89.1, 4.0], [89.2, 5.0], [89.3, 5.0], [89.4, 6.0], [89.5, 6.0], [89.6, 7.0], [89.7, 8.0], [89.8, 10.0], [89.9, 11.0], [90.0, 13.0], [90.1, 15.0], [90.2, 18.0], [90.3, 21.0], [90.4, 24.0], [90.5, 25.0], [90.6, 26.0], [90.7, 28.0], [90.8, 30.0], [90.9, 37.0], [91.0, 39.0], [91.1, 41.0], [91.2, 49.0], [91.3, 400.0], [91.4, 843.0], [91.5, 1006.0], [91.6, 1023.0], [91.7, 1026.0], [91.8, 1029.0], [91.9, 1032.0], [92.0, 1035.0], [92.1, 1036.0], [92.2, 1040.0], [92.3, 1346.0], [92.4, 1528.0], [92.5, 1838.0], [92.6, 2179.0], [92.7, 2573.0], [92.8, 2908.0], [92.9, 3783.0], [93.0, 4254.0], [93.1, 4490.0], [93.2, 4897.0], [93.3, 5420.0], [93.4, 5604.0], [93.5, 5918.0], [93.6, 6025.0], [93.7, 6295.0], [93.8, 6930.0], [93.9, 7687.0], [94.0, 8030.0], [94.1, 9441.0], [94.2, 10066.0], [94.3, 10928.0], [94.4, 11031.0], [94.5, 11118.0], [94.6, 11196.0], [94.7, 11221.0], [94.8, 11279.0], [94.9, 11607.0], [95.0, 11899.0], [95.1, 13402.0], [95.2, 16215.0], [95.3, 16405.0], [95.4, 16990.0], [95.5, 17088.0], [95.6, 17723.0], [95.7, 18991.0], [95.8, 22613.0], [95.9, 27820.0], [96.0, 29481.0], [96.1, 29603.0], [96.2, 31046.0], [96.3, 31461.0], [96.4, 31579.0], [96.5, 32302.0], [96.6, 33145.0], [96.7, 33409.0], [96.8, 34153.0], [96.9, 34429.0], [97.0, 34501.0], [97.1, 34716.0], [97.2, 35814.0], [97.3, 37512.0], [97.4, 37686.0], [97.5, 37908.0], [97.6, 38005.0], [97.7, 38084.0], [97.8, 38092.0], [97.9, 38178.0], [98.0, 38985.0], [98.1, 39833.0], [98.2, 40455.0], [98.3, 40458.0], [98.4, 40460.0], [98.5, 40465.0], [98.6, 42417.0], [98.7, 44934.0], [98.8, 46116.0], [98.9, 46724.0], [99.0, 62489.0], [99.1, 62501.0], [99.2, 319002.0], [99.3, 319886.0], [99.4, 319912.0], [99.5, 323391.0], [99.6, 349739.0], [99.7, 349745.0], [99.8, 349748.0], [99.9, 349768.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5478.0, "series": [{"data": [[0.0, 5435.0], [318100.0, 1.0], [100.0, 26.0], [34500.0, 2.0], [33300.0, 2.0], [34300.0, 2.0], [33700.0, 2.0], [32900.0, 1.0], [33500.0, 2.0], [33100.0, 2.0], [34100.0, 2.0], [33900.0, 2.0], [34700.0, 2.0], [318300.0, 1.0], [321500.0, 1.0], [319900.0, 1.0], [200.0, 23.0], [300.0, 17.0], [400.0, 14.0], [500.0, 5.0], [600.0, 18.0], [700.0, 12.0], [800.0, 10.0], [900.0, 8.0], [1000.0, 80.0], [1100.0, 16.0], [1200.0, 7.0], [1300.0, 12.0], [1400.0, 8.0], [1500.0, 10.0], [1600.0, 4.0], [1700.0, 10.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 10.0], [2100.0, 3.0], [2300.0, 5.0], [2200.0, 6.0], [2400.0, 9.0], [2500.0, 11.0], [318700.0, 1.0], [2600.0, 14.0], [2800.0, 6.0], [2700.0, 7.0], [2900.0, 6.0], [3000.0, 14.0], [3100.0, 7.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 2.0], [3600.0, 1.0], [3700.0, 1.0], [3800.0, 2.0], [3900.0, 1.0], [4300.0, 1.0], [4400.0, 2.0], [4600.0, 1.0], [8500.0, 1.0], [8700.0, 1.0], [9100.0, 8.0], [9800.0, 1.0], [10200.0, 1.0], [10000.0, 4.0], [10500.0, 1.0], [10700.0, 1.0], [11400.0, 3.0], [11300.0, 3.0], [11900.0, 1.0], [12000.0, 1.0], [12700.0, 1.0], [13300.0, 4.0], [13100.0, 1.0], [15800.0, 9.0], [15900.0, 7.0], [16000.0, 4.0], [16100.0, 6.0], [16200.0, 1.0], [16300.0, 3.0], [16400.0, 3.0], [16500.0, 1.0], [16600.0, 3.0], [16700.0, 3.0], [16900.0, 3.0], [18200.0, 1.0], [31500.0, 5.0], [31200.0, 2.0], [31600.0, 10.0], [31300.0, 1.0], [31400.0, 9.0], [31100.0, 1.0], [31000.0, 2.0], [31700.0, 4.0], [32600.0, 2.0], [31800.0, 4.0], [32200.0, 2.0], [32400.0, 2.0], [31900.0, 1.0], [32000.0, 2.0], [32500.0, 1.0], [32700.0, 1.0], [32300.0, 1.0], [32100.0, 1.0], [34400.0, 1.0], [34600.0, 1.0], [33400.0, 1.0], [34200.0, 3.0], [33000.0, 2.0], [32800.0, 2.0], [33600.0, 1.0], [33200.0, 2.0], [34000.0, 1.0], [34800.0, 1.0], [33800.0, 1.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[0.0, 5429.0], [322500.0, 1.0], [328900.0, 8.0], [316800.0, 5.0], [318400.0, 1.0], [329100.0, 4.0], [319700.0, 2.0], [314900.0, 1.0], [315600.0, 1.0], [100.0, 1.0], [33500.0, 3.0], [33900.0, 2.0], [34700.0, 2.0], [32900.0, 6.0], [33300.0, 1.0], [34500.0, 1.0], [34900.0, 1.0], [37100.0, 2.0], [37300.0, 1.0], [37500.0, 2.0], [38300.0, 1.0], [38500.0, 1.0], [38900.0, 3.0], [321500.0, 1.0], [323100.0, 3.0], [316700.0, 1.0], [319900.0, 2.0], [317400.0, 1.0], [323800.0, 1.0], [319000.0, 1.0], [323300.0, 3.0], [329700.0, 6.0], [800.0, 2.0], [900.0, 3.0], [1000.0, 35.0], [1100.0, 1.0], [1200.0, 5.0], [319200.0, 2.0], [316000.0, 1.0], [328800.0, 3.0], [1600.0, 6.0], [1700.0, 1.0], [1800.0, 6.0], [1900.0, 16.0], [2000.0, 1.0], [2100.0, 1.0], [2300.0, 2.0], [320300.0, 1.0], [2600.0, 1.0], [2700.0, 11.0], [2800.0, 20.0], [2900.0, 17.0], [3000.0, 14.0], [3100.0, 3.0], [3200.0, 5.0], [3300.0, 10.0], [3400.0, 18.0], [3500.0, 1.0], [3600.0, 3.0], [3700.0, 1.0], [4000.0, 1.0], [4300.0, 1.0], [4500.0, 2.0], [4400.0, 1.0], [4700.0, 1.0], [5000.0, 3.0], [4900.0, 2.0], [5100.0, 1.0], [5200.0, 2.0], [5300.0, 1.0], [329000.0, 3.0], [5400.0, 7.0], [5600.0, 1.0], [5800.0, 3.0], [5700.0, 3.0], [5900.0, 3.0], [6000.0, 7.0], [6100.0, 3.0], [6200.0, 8.0], [6300.0, 2.0], [6400.0, 10.0], [6800.0, 3.0], [6900.0, 1.0], [7000.0, 7.0], [7100.0, 4.0], [7200.0, 3.0], [7600.0, 3.0], [7800.0, 1.0], [7700.0, 5.0], [7900.0, 2.0], [8000.0, 2.0], [8100.0, 1.0], [9100.0, 1.0], [9200.0, 3.0], [9300.0, 1.0], [9400.0, 2.0], [9900.0, 1.0], [9800.0, 1.0], [10000.0, 2.0], [10500.0, 1.0], [11000.0, 2.0], [11700.0, 2.0], [11600.0, 2.0], [11800.0, 1.0], [12000.0, 1.0], [12500.0, 6.0], [12600.0, 2.0], [12400.0, 4.0], [12300.0, 3.0], [13100.0, 7.0], [13200.0, 7.0], [12900.0, 1.0], [13600.0, 1.0], [14000.0, 1.0], [14200.0, 1.0], [14800.0, 1.0], [15100.0, 1.0], [15600.0, 1.0], [15500.0, 1.0], [17200.0, 1.0], [16400.0, 2.0], [16600.0, 1.0], [18300.0, 1.0], [18500.0, 1.0], [20100.0, 1.0], [20200.0, 1.0], [20400.0, 1.0], [318000.0, 1.0], [21300.0, 1.0], [20500.0, 1.0], [20800.0, 2.0], [22200.0, 1.0], [22400.0, 1.0], [22500.0, 1.0], [22600.0, 2.0], [24600.0, 1.0], [26300.0, 9.0], [26400.0, 7.0], [26500.0, 8.0], [26600.0, 1.0], [27200.0, 3.0], [26900.0, 5.0], [27000.0, 7.0], [27300.0, 1.0], [27400.0, 2.0], [28200.0, 1.0], [29000.0, 3.0], [29300.0, 1.0], [29600.0, 1.0], [28700.0, 1.0], [28900.0, 2.0], [30100.0, 1.0], [30400.0, 1.0], [30600.0, 2.0], [29800.0, 1.0], [31000.0, 1.0], [31200.0, 2.0], [31300.0, 1.0], [31400.0, 1.0], [31900.0, 5.0], [32400.0, 1.0], [32000.0, 1.0], [32100.0, 3.0], [31800.0, 2.0], [32200.0, 2.0], [33000.0, 13.0], [33200.0, 4.0], [33600.0, 1.0], [34000.0, 1.0], [34200.0, 1.0], [34400.0, 5.0], [36000.0, 2.0], [36400.0, 1.0], [36600.0, 1.0], [36800.0, 2.0], [35600.0, 1.0], [37000.0, 1.0], [37400.0, 1.0], [38800.0, 1.0], [39000.0, 4.0], [40400.0, 8.0], [320700.0, 1.0], [319100.0, 1.0], [39600.0, 1.0], [328700.0, 4.0], [319800.0, 3.0], [321400.0, 1.0], [318200.0, 3.0], [315000.0, 1.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[0.0, 5361.0], [333000.0, 1.0], [100.0, 3.0], [32900.0, 5.0], [36500.0, 2.0], [35300.0, 1.0], [35700.0, 2.0], [36100.0, 3.0], [36900.0, 2.0], [37300.0, 7.0], [38900.0, 2.0], [38100.0, 1.0], [37700.0, 3.0], [39300.0, 1.0], [200.0, 3.0], [333400.0, 2.0], [400.0, 2.0], [500.0, 1.0], [600.0, 2.0], [332900.0, 2.0], [700.0, 1.0], [800.0, 3.0], [900.0, 1.0], [1000.0, 16.0], [1100.0, 4.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 1.0], [1600.0, 2.0], [1700.0, 6.0], [1800.0, 4.0], [1900.0, 4.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 1.0], [2200.0, 2.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 7.0], [2700.0, 3.0], [2900.0, 2.0], [3000.0, 4.0], [3100.0, 1.0], [3200.0, 3.0], [3300.0, 3.0], [3400.0, 4.0], [3500.0, 4.0], [3700.0, 13.0], [3600.0, 8.0], [3800.0, 8.0], [3900.0, 9.0], [4000.0, 6.0], [4100.0, 2.0], [4600.0, 1.0], [5000.0, 3.0], [333800.0, 3.0], [5600.0, 1.0], [5900.0, 1.0], [6000.0, 3.0], [6200.0, 2.0], [6300.0, 1.0], [6600.0, 7.0], [6700.0, 13.0], [6800.0, 6.0], [7100.0, 3.0], [7000.0, 1.0], [7200.0, 1.0], [7500.0, 3.0], [7900.0, 1.0], [8100.0, 8.0], [8000.0, 3.0], [8500.0, 2.0], [8600.0, 1.0], [8300.0, 3.0], [8200.0, 3.0], [8400.0, 1.0], [9100.0, 3.0], [9200.0, 2.0], [9700.0, 1.0], [10100.0, 1.0], [10200.0, 1.0], [9800.0, 2.0], [9900.0, 2.0], [10000.0, 1.0], [10700.0, 4.0], [333300.0, 3.0], [11200.0, 5.0], [11000.0, 7.0], [10900.0, 1.0], [11400.0, 2.0], [11600.0, 1.0], [11700.0, 2.0], [11300.0, 10.0], [12200.0, 1.0], [11800.0, 3.0], [12700.0, 3.0], [12600.0, 6.0], [12300.0, 2.0], [12900.0, 3.0], [13000.0, 2.0], [13500.0, 1.0], [13900.0, 3.0], [14300.0, 2.0], [14800.0, 1.0], [15200.0, 1.0], [15300.0, 1.0], [15700.0, 1.0], [15400.0, 1.0], [15800.0, 1.0], [16100.0, 2.0], [16200.0, 3.0], [16300.0, 2.0], [16600.0, 10.0], [17600.0, 1.0], [18000.0, 1.0], [18200.0, 1.0], [18600.0, 1.0], [20000.0, 1.0], [20600.0, 3.0], [20800.0, 5.0], [332400.0, 1.0], [23200.0, 1.0], [26200.0, 7.0], [26400.0, 7.0], [26800.0, 5.0], [28200.0, 1.0], [28800.0, 3.0], [29400.0, 1.0], [29800.0, 1.0], [31400.0, 1.0], [31200.0, 7.0], [31600.0, 1.0], [31800.0, 1.0], [32200.0, 8.0], [32800.0, 1.0], [35200.0, 2.0], [36800.0, 1.0], [36400.0, 1.0], [35600.0, 1.0], [36000.0, 1.0], [38800.0, 25.0], [38000.0, 1.0], [37200.0, 3.0], [37600.0, 8.0], [40400.0, 10.0], [39600.0, 4.0], [333700.0, 5.0], [349700.0, 3.0], [333200.0, 1.0], [35100.0, 2.0], [36700.0, 2.0], [35500.0, 1.0], [36300.0, 2.0], [35900.0, 2.0], [38700.0, 26.0], [37100.0, 2.0], [37900.0, 6.0], [38300.0, 2.0], [37500.0, 2.0], [332700.0, 1.0], [333100.0, 1.0], [16700.0, 6.0], [16500.0, 6.0], [16900.0, 1.0], [19700.0, 1.0], [19900.0, 5.0], [20500.0, 3.0], [20700.0, 7.0], [20900.0, 4.0], [26300.0, 10.0], [26500.0, 1.0], [25900.0, 1.0], [26900.0, 7.0], [27300.0, 5.0], [28700.0, 2.0], [28900.0, 5.0], [30500.0, 3.0], [29900.0, 2.0], [30100.0, 1.0], [29700.0, 1.0], [31300.0, 2.0], [31700.0, 1.0], [32100.0, 2.0], [32500.0, 1.0], [33000.0, 8.0], [36600.0, 2.0], [35000.0, 2.0], [35800.0, 1.0], [35400.0, 2.0], [36200.0, 1.0], [38600.0, 2.0], [37000.0, 1.0], [38200.0, 4.0], [37400.0, 5.0], [37800.0, 8.0], [39000.0, 2.0], [333500.0, 2.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[0.0, 5478.0], [318400.0, 1.0], [34100.0, 2.0], [32900.0, 1.0], [33300.0, 1.0], [34500.0, 3.0], [34900.0, 1.0], [37700.0, 2.0], [38100.0, 7.0], [38900.0, 3.0], [40500.0, 1.0], [43700.0, 1.0], [44900.0, 2.0], [46500.0, 1.0], [46100.0, 3.0], [48100.0, 1.0], [62500.0, 2.0], [320600.0, 3.0], [317400.0, 1.0], [400.0, 1.0], [600.0, 2.0], [323300.0, 1.0], [700.0, 2.0], [800.0, 2.0], [1000.0, 49.0], [1100.0, 2.0], [1200.0, 1.0], [1300.0, 2.0], [328800.0, 2.0], [1400.0, 2.0], [1500.0, 5.0], [1600.0, 3.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 1.0], [2400.0, 1.0], [2500.0, 4.0], [2600.0, 2.0], [2700.0, 2.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3300.0, 2.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 2.0], [4000.0, 1.0], [4100.0, 2.0], [4300.0, 2.0], [4200.0, 2.0], [4500.0, 2.0], [4400.0, 3.0], [4600.0, 1.0], [4800.0, 3.0], [5000.0, 3.0], [5100.0, 1.0], [314600.0, 1.0], [317800.0, 1.0], [5600.0, 3.0], [5500.0, 4.0], [5400.0, 3.0], [349800.0, 1.0], [5800.0, 2.0], [5900.0, 6.0], [6000.0, 5.0], [6300.0, 1.0], [6200.0, 3.0], [6600.0, 1.0], [6400.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [6900.0, 1.0], [7100.0, 4.0], [7000.0, 1.0], [7600.0, 2.0], [7800.0, 3.0], [7700.0, 1.0], [8000.0, 1.0], [8600.0, 1.0], [8900.0, 1.0], [9000.0, 2.0], [9200.0, 1.0], [9700.0, 1.0], [9400.0, 2.0], [9600.0, 1.0], [9500.0, 1.0], [10000.0, 2.0], [10200.0, 1.0], [10700.0, 2.0], [10600.0, 2.0], [11200.0, 12.0], [11100.0, 10.0], [11000.0, 5.0], [10900.0, 4.0], [11600.0, 6.0], [11300.0, 2.0], [11700.0, 1.0], [11400.0, 1.0], [11800.0, 2.0], [11900.0, 2.0], [12400.0, 3.0], [13400.0, 1.0], [14300.0, 1.0], [14400.0, 1.0], [15400.0, 3.0], [16300.0, 4.0], [16200.0, 1.0], [16400.0, 4.0], [16800.0, 1.0], [17000.0, 6.0], [17600.0, 2.0], [18800.0, 1.0], [18600.0, 2.0], [20200.0, 1.0], [19600.0, 1.0], [20800.0, 1.0], [21800.0, 1.0], [22600.0, 1.0], [27800.0, 2.0], [29000.0, 1.0], [29600.0, 1.0], [29400.0, 3.0], [30200.0, 1.0], [31400.0, 7.0], [31000.0, 2.0], [30800.0, 1.0], [31800.0, 2.0], [32000.0, 2.0], [32600.0, 1.0], [34400.0, 6.0], [33600.0, 1.0], [34800.0, 2.0], [33200.0, 3.0], [36800.0, 1.0], [37600.0, 6.0], [38000.0, 16.0], [40800.0, 1.0], [40400.0, 23.0], [319100.0, 1.0], [42400.0, 3.0], [44800.0, 1.0], [62400.0, 8.0], [349700.0, 24.0], [319500.0, 1.0], [329100.0, 1.0], [333200.0, 1.0], [34300.0, 2.0], [33100.0, 2.0], [33500.0, 1.0], [34700.0, 3.0], [35100.0, 1.0], [35500.0, 1.0], [37900.0, 5.0], [37500.0, 4.0], [39100.0, 1.0], [319900.0, 7.0], [43100.0, 1.0], [46700.0, 1.0], [45500.0, 1.0], [47500.0, 1.0], [319000.0, 1.0], [16500.0, 2.0], [16900.0, 1.0], [17700.0, 6.0], [18900.0, 1.0], [20300.0, 1.0], [26500.0, 3.0], [27100.0, 1.0], [27300.0, 1.0], [28100.0, 1.0], [28700.0, 2.0], [29500.0, 3.0], [29900.0, 1.0], [30300.0, 2.0], [31300.0, 1.0], [31100.0, 2.0], [31500.0, 1.0], [32100.0, 1.0], [32300.0, 1.0], [33000.0, 2.0], [33400.0, 5.0], [34200.0, 1.0], [34600.0, 2.0], [35800.0, 1.0], [38200.0, 1.0], [37800.0, 3.0], [37400.0, 1.0], [38600.0, 1.0], [39400.0, 1.0], [39800.0, 2.0], [40600.0, 1.0], [39000.0, 1.0], [42200.0, 2.0], [45000.0, 2.0], [46600.0, 1.0], [45800.0, 1.0], [46200.0, 1.0], [49000.0, 1.0], [319800.0, 5.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 349800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 144.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 22558.0, "series": [{"data": [[0.0, 231.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 144.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1067.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 22558.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 58.35403008098718, "minX": 1.64642988E12, "maxY": 273.21554205308564, "series": [{"data": [[1.64643E12, 149.0], [1.64643036E12, 58.35403008098718], [1.64642988E12, 136.75468483816022], [1.64642994E12, 273.21554205308564], [1.6464303E12, 122.91746411483258]], "isOverall": false, "label": "API_gateway tests", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643036E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 212559.48780487807, "series": [{"data": [[2.0, 3.3333333333333335], [3.0, 0.7142857142857143], [4.0, 2.0], [5.0, 0.5], [6.0, 0.5], [7.0, 1.0], [8.0, 2.0], [9.0, 1.0], [10.0, 0.0], [14.0, 1.0], [15.0, 66.29411764705884], [16.0, 37.5], [18.0, 0.0], [19.0, 17.94736842105263], [20.0, 8.428571428571427], [21.0, 0.8], [22.0, 1.6666666666666667], [23.0, 0.6666666666666667], [24.0, 0.3333333333333333], [25.0, 1.7499999999999998], [26.0, 1.5], [27.0, 0.8571428571428572], [28.0, 0.5], [30.0, 0.11111111111111113], [31.0, 0.07142857142857144], [33.0, 0.6666666666666666], [32.0, 0.0], [35.0, 0.13043478260869565], [36.0, 484.0], [37.0, 218.81818181818176], [39.0, 0.4285714285714286], [40.0, 60.8], [41.0, 0.6], [42.0, 0.6], [43.0, 1.3], [44.0, 1.2], [45.0, 0.75], [46.0, 1.5], [47.0, 2.0], [48.0, 0.47619047619047616], [49.0, 1.0], [50.0, 1.0], [51.0, 0.375], [52.0, 0.625], [53.0, 0.5], [54.0, 0.38636363636363635], [57.0, 0.0], [56.0, 0.16666666666666669], [59.0, 0.11111111111111113], [58.0, 0.32], [61.0, 0.0], [60.0, 0.2], [63.0, 309.5], [62.0, 0.6666666666666666], [66.0, 25.862068965517242], [67.0, 0.125], [65.0, 0.2777777777777778], [71.0, 0.22222222222222227], [70.0, 0.0], [69.0, 0.0], [68.0, 0.0], [74.0, 3.8571428571428563], [73.0, 0.11111111111111113], [72.0, 0.0], [76.0, 905.3333333333333], [77.0, 707.5714285714287], [78.0, 1005.6666666666666], [79.0, 513.1052631578948], [80.0, 1382.5882352941176], [83.0, 1658.0], [82.0, 327.54285714285703], [81.0, 2124.1666666666665], [87.0, 3364.0], [86.0, 13395.0], [85.0, 3738.0833333333335], [84.0, 2738.5999999999995], [91.0, 46.28358208955224], [90.0, 205.6], [89.0, 1.0], [88.0, 17166.95], [94.0, 138.24999999999997], [95.0, 0.3], [93.0, 0.33333333333333337], [92.0, 0.1923076923076923], [98.0, 0.0], [97.0, 0.36111111111111105], [96.0, 1.0188679245283017], [103.0, 0.3], [102.0, 0.5], [100.0, 0.2500000000000001], [106.0, 0.0], [105.0, 0.4166666666666667], [104.0, 0.0], [110.0, 0.30000000000000004], [109.0, 0.28301886792452835], [108.0, 0.16666666666666669], [115.0, 1.2500000000000002], [114.0, 8.333333333333334], [113.0, 0.2941176470588236], [112.0, 0.0], [118.0, 124.5348837209303], [119.0, 974.3103448275863], [116.0, 0.25], [117.0, 1.5], [120.0, 148.21428571428567], [121.0, 675.9999999999999], [122.0, 1039.0], [123.0, 142.36], [124.0, 89.06382978723406], [125.0, 239.25], [127.0, 15.529411764705875], [126.0, 0.18181818181818185], [128.0, 3.7567567567567557], [129.0, 63.57142857142856], [130.0, 10.173913043478262], [131.0, 3.166666666666666], [135.0, 0.20833333333333331], [134.0, 0.4107142857142858], [133.0, 0.41666666666666674], [132.0, 0.10000000000000002], [142.0, 69.59999999999998], [143.0, 0.20000000000000004], [141.0, 0.10000000000000002], [140.0, 0.20000000000000004], [139.0, 0.14754098360655743], [138.0, 27.0], [137.0, 0.4], [136.0, 1.75], [151.0, 1115.3461538461538], [149.0, 12497.375], [148.0, 7764.048780487807], [147.0, 0.0], [146.0, 160784.0], [145.0, 8864.092592592588], [144.0, 0.18918918918918923], [159.0, 1.8333333333333333], [157.0, 6.5], [156.0, 0.0], [153.0, 1022.7619047619046], [152.0, 1034.0], [167.0, 229.5], [166.0, 0.0], [165.0, 0.0], [164.0, 0.1875], [163.0, 0.25000000000000006], [162.0, 0.0], [175.0, 0.0], [174.0, 0.0], [171.0, 0.0], [170.0, 0.0], [169.0, 0.33333333333333337], [168.0, 0.2222222222222222], [179.0, 3013.0], [180.0, 2992.0], [181.0, 329.66666666666674], [182.0, 2187.5599999999995], [183.0, 915.5], [178.0, 0.12500000000000003], [176.0, 0.20000000000000004], [184.0, 744.2222222222222], [185.0, 177.0], [189.0, 166.25], [190.0, 77.25000000000001], [191.0, 216.75], [188.0, 0.0], [187.0, 0.6], [193.0, 101.0], [194.0, 747.0], [195.0, 393.5], [196.0, 144.64285714285717], [197.0, 164.73684210526318], [198.0, 36.375], [199.0, 0.0], [192.0, 0.25], [200.0, 13.117647058823529], [201.0, 1.25], [202.0, 0.5], [203.0, 0.4285714285714286], [204.0, 3.0], [205.0, 0.2727272727272727], [206.0, 0.4000000000000001], [207.0, 3.0], [208.0, 0.5], [209.0, 0.75], [210.0, 1.3333333333333335], [211.0, 0.5], [212.0, 0.4761904761904763], [213.0, 0.4285714285714286], [214.0, 0.38095238095238093], [215.0, 2.142857142857143], [216.0, 0.5714285714285715], [217.0, 6.0], [218.0, 0.6071428571428573], [219.0, 0.41666666666666674], [220.0, 0.5000000000000001], [221.0, 2.0], [222.0, 0.5], [223.0, 0.24999999999999997], [224.0, 1.0], [225.0, 0.5], [226.0, 1.8181818181818181], [227.0, 0.5], [228.0, 4.0], [229.0, 0.923076923076923], [230.0, 2.0], [231.0, 0.6363636363636364], [232.0, 3.333333333333333], [233.0, 3.0], [234.0, 0.75], [235.0, 1.0], [236.0, 1.0], [237.0, 0.5000000000000001], [238.0, 0.1290322580645161], [239.0, 14.0], [247.0, 0.25806451612903225], [246.0, 0.09999999999999999], [245.0, 0.5789473684210527], [244.0, 0.0], [243.0, 1.8], [242.0, 0.4], [240.0, 0.0], [255.0, 0.15625], [254.0, 0.14285714285714285], [253.0, 0.16666666666666669], [252.0, 0.125], [251.0, 0.16666666666666669], [250.0, 0.375], [249.0, 0.25], [248.0, 0.14285714285714285], [270.0, 0.6721311475409834], [271.0, 0.125], [269.0, 0.3333333333333333], [268.0, 0.5625000000000001], [267.0, 0.4285714285714286], [266.0, 0.6], [265.0, 0.0], [264.0, 0.12820512820512825], [263.0, 0.22222222222222227], [257.0, 0.3333333333333333], [256.0, 0.10526315789473684], [259.0, 0.676470588235294], [258.0, 0.4024390243902441], [262.0, 0.14285714285714285], [261.0, 0.19852941176470612], [260.0, 0.41666666666666663], [286.0, 270.051724137931], [287.0, 2523.2352941176478], [285.0, 7.44], [284.0, 25.63636363636363], [283.0, 0.10000000000000003], [282.0, 0.21739130434782608], [281.0, 0.5784313725490196], [280.0, 1.1], [279.0, 0.375], [272.0, 0.39024390243902435], [273.0, 0.0], [275.0, 0.2444444444444445], [274.0, 1.1818181818181819], [278.0, 0.14999999999999997], [276.0, 0.20000000000000004], [300.0, 2030.4407894736798], [292.0, 147.74999999999997], [299.0, 0.2647058823529411], [298.0, 0.33333333333333337], [297.0, 0.30434782608695665], [296.0, 0.41463414634146356], [295.0, 0.29166666666666674], [289.0, 0.20833333333333331], [288.0, 2314.377952755906], [291.0, 0.28571428571428575], [290.0, 0.19718309859154934], [294.0, 0.21428571428571427], [293.0, 0.1842105263157895], [1.0, 2.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[212.64716666666695, 1004.6921666666677]], "isOverall": false, "label": "getAllInfo-Aggregated", "isController": false}, {"data": [[2.0, 5.5], [3.0, 0.2], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [8.0, 1.0], [10.0, 0.16666666666666669], [12.0, 0.0], [15.0, 0.2], [16.0, 66.30000000000001], [17.0, 176.0], [18.0, 0.0], [19.0, 0.06666666666666668], [20.0, 0.0], [21.0, 0.0], [22.0, 1.0], [23.0, 0.0], [24.0, 0.5], [25.0, 0.0], [26.0, 0.5], [27.0, 0.0], [28.0, 0.16666666666666669], [30.0, 0.0], [31.0, 0.26666666666666666], [33.0, 0.2], [35.0, 0.1875], [36.0, 1241.8], [37.0, 1268.0], [39.0, 0.0], [41.0, 0.4], [40.0, 0.0], [43.0, 0.16666666666666666], [45.0, 0.16666666666666669], [44.0, 0.22222222222222227], [47.0, 0.0], [46.0, 0.33333333333333337], [49.0, 1.0], [48.0, 1.0588235294117647], [51.0, 1.0], [50.0, 0.28571428571428575], [53.0, 0.0], [52.0, 0.5714285714285715], [54.0, 0.19512195121951229], [57.0, 0.2727272727272727], [56.0, 0.25], [59.0, 0.125], [58.0, 0.04545454545454545], [61.0, 0.0], [60.0, 0.0], [62.0, 0.3333333333333333], [64.0, 1814.3333333333333], [65.0, 91.00000000000001], [66.0, 159.95833333333334], [67.0, 690.3846153846154], [71.0, 0.0], [70.0, 0.1111111111111111], [68.0, 0.2], [75.0, 0.0], [74.0, 1.8214285714285712], [73.0, 2.1111111111111107], [72.0, 0.0], [78.0, 1699.25], [79.0, 3.1538461538461533], [77.0, 3353.0], [76.0, 665.1666666666667], [83.0, 906.9545454545454], [82.0, 254.97297297297285], [81.0, 0.0], [80.0, 907.0], [85.0, 0.0], [84.0, 746.2916666666666], [89.0, 471.0], [90.0, 1008.2857142857143], [91.0, 189.2702702702702], [88.0, 14880.724637681154], [95.0, 0.25], [94.0, 0.0], [93.0, 0.0], [92.0, 0.1923076923076923], [98.0, 0.2222222222222222], [97.0, 0.11428571428571428], [96.0, 0.37500000000000006], [103.0, 1.0], [102.0, 0.2857142857142857], [101.0, 0.5], [100.0, 1.7407407407407407], [107.0, 0.5], [106.0, 0.0], [105.0, 0.34782608695652173], [104.0, 0.0], [109.0, 47.91304347826088], [110.0, 0.0], [108.0, 0.6153846153846153], [115.0, 0.3], [114.0, 3.1], [113.0, 0.3571428571428571], [112.0, 0.0], [118.0, 70.23076923076923], [119.0, 0.36363636363636365], [116.0, 0.25], [117.0, 4.0], [123.0, 0.2608695652173913], [122.0, 0.375], [121.0, 0.14285714285714288], [120.0, 0.17857142857142858], [127.0, 0.42105263157894746], [126.0, 0.19999999999999998], [125.0, 0.0], [124.0, 0.27027027027027034], [128.0, 316.45977011494256], [131.0, 301.1041666666667], [133.0, 247.33333333333334], [135.0, 0.23076923076923075], [134.0, 0.6129032258064517], [132.0, 0.0], [130.0, 0.3571428571428571], [129.0, 0.0], [143.0, 0.20000000000000004], [142.0, 0.16666666666666669], [141.0, 0.10526315789473686], [140.0, 0.09523809523809523], [139.0, 0.6363636363636365], [138.0, 1.0], [137.0, 0.20689655172413796], [136.0, 0.5714285714285714], [149.0, 167899.94520547948], [151.0, 1260.3333333333333], [150.0, 3043.0], [148.0, 97761.89130434784], [147.0, 106663.66666666666], [146.0, 160156.0], [145.0, 47232.90099009901], [144.0, 0.30303030303030315], [152.0, 3030.5], [155.0, 5211.0], [156.0, 729.6666666666667], [159.0, 0.25], [158.0, 1.0], [157.0, 0.0], [153.0, 1023.157894736842], [167.0, 1400.9166666666663], [165.0, 0.2], [164.0, 0.35294117647058826], [163.0, 0.18181818181818182], [162.0, 0.0], [160.0, 0.0], [175.0, 0.3333333333333333], [174.0, 0.0], [171.0, 0.0], [170.0, 0.2], [169.0, 0.2857142857142857], [168.0, 0.0], [178.0, 945.2727272727275], [183.0, 0.33333333333333337], [181.0, 0.0], [180.0, 0.0], [176.0, 0.3333333333333333], [191.0, 0.16666666666666669], [190.0, 0.11111111111111113], [189.0, 0.0], [188.0, 0.5], [187.0, 0.0], [185.0, 0.0], [199.0, 0.0], [198.0, 0.14285714285714288], [197.0, 0.2], [196.0, 0.10000000000000002], [195.0, 1.0], [193.0, 0.0], [192.0, 0.11111111111111113], [206.0, 0.12500000000000003], [205.0, 0.0909090909090909], [204.0, 0.0], [203.0, 0.4], [202.0, 0.2], [201.0, 0.25], [200.0, 0.12500000000000003], [215.0, 2.333333333333333], [214.0, 0.5714285714285714], [213.0, 0.0], [212.0, 0.15], [211.0, 0.0], [210.0, 0.5], [209.0, 0.0], [208.0, 0.0], [223.0, 1.0833333333333333], [222.0, 0.21052631578947367], [221.0, 0.0], [220.0, 0.3333333333333333], [219.0, 0.19999999999999998], [218.0, 0.3793103448275863], [217.0, 0.25], [216.0, 0.5], [231.0, 0.0], [230.0, 0.5], [229.0, 0.7777777777777777], [228.0, 0.6666666666666667], [227.0, 0.0], [226.0, 0.28571428571428575], [225.0, 0.13333333333333336], [224.0, 0.0], [239.0, 0.0], [238.0, 0.2285714285714286], [237.0, 0.0], [236.0, 1.0], [235.0, 0.14285714285714288], [233.0, 0.0], [247.0, 180.56666666666666], [246.0, 0.30000000000000004], [245.0, 0.1764705882352941], [243.0, 1.8181818181818181], [242.0, 0.0909090909090909], [240.0, 3.0], [248.0, 284.7631578947369], [249.0, 1199.111111111111], [252.0, 607.7777777777777], [255.0, 0.19354838709677422], [254.0, 0.3846153846153846], [253.0, 0.16666666666666666], [251.0, 0.0], [250.0, 0.3333333333333333], [259.0, 0.17391304347826086], [270.0, 103.32835820895522], [260.0, 0.2142857142857143], [262.0, 0.625], [261.0, 0.29411764705882365], [263.0, 190.53333333333342], [267.0, 2405.2], [268.0, 338.94444444444446], [258.0, 0.5874999999999999], [257.0, 0.14285714285714288], [256.0, 0.42105263157894735], [271.0, 0.1666666666666667], [269.0, 0.1818181818181818], [266.0, 0.33333333333333337], [265.0, 0.0], [264.0, 0.431372549019608], [286.0, 133.3103448275861], [282.0, 305.695652173913], [283.0, 148.84905660377353], [284.0, 114.29629629629632], [287.0, 17042.714285714286], [285.0, 13.357142857142858], [281.0, 0.3191489361702128], [280.0, 0.15000000000000005], [279.0, 0.0], [273.0, 0.0], [272.0, 0.1848739495798319], [275.0, 0.24444444444444444], [274.0, 0.18181818181818182], [278.0, 0.35526315789473695], [276.0, 0.5714285714285714], [300.0, 2002.8748824082772], [292.0, 961.8333333333334], [293.0, 417.0810810810812], [294.0, 623.4399999999998], [299.0, 0.37226277372262767], [298.0, 0.0], [297.0, 0.18681318681318682], [296.0, 0.44999999999999996], [295.0, 0.31843575418994413], [291.0, 0.14285714285714288], [290.0, 0.5662650602409639], [289.0, 0.1739130434782609], [288.0, 12665.288461538468], [1.0, 11.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[215.34066666666533, 4767.060666666662]], "isOverall": false, "label": "getAllStatus-Aggregated", "isController": false}, {"data": [[2.0, 13.333333333333332], [3.0, 0.0], [4.0, 0.5], [5.0, 0.5], [7.0, 0.0], [8.0, 1.0], [10.0, 0.0], [14.0, 1.0], [15.0, 254.64999999999998], [16.0, 44.199999999999996], [17.0, 0.0], [18.0, 159.0], [19.0, 0.25], [20.0, 0.0], [21.0, 0.9999999999999999], [22.0, 0.0], [23.0, 0.0], [24.0, 0.1111111111111111], [25.0, 0.0], [26.0, 0.0], [27.0, 0.12500000000000003], [28.0, 0.25], [30.0, 1.0], [31.0, 0.058823529411764705], [33.0, 0.0], [32.0, 0.0], [35.0, 0.1111111111111111], [37.0, 1144.6000000000001], [39.0, 0.14285714285714288], [41.0, 0.25], [40.0, 0.5], [43.0, 0.23076923076923075], [42.0, 0.0], [45.0, 0.4285714285714286], [44.0, 0.5], [46.0, 1.0], [48.0, 0.2857142857142857], [51.0, 1.2], [50.0, 0.33333333333333337], [52.0, 629.1428571428571], [53.0, 0.6666666666666667], [54.0, 0.2142857142857143], [57.0, 0.2222222222222222], [56.0, 0.0], [59.0, 0.0], [58.0, 0.12000000000000002], [61.0, 0.0], [60.0, 0.0], [62.0, 1.5999999999999999], [67.0, 503.5], [66.0, 0.4545454545454546], [65.0, 0.05263157894736842], [71.0, 0.0909090909090909], [70.0, 0.2], [69.0, 0.0], [68.0, 0.0], [74.0, 1.6153846153846152], [73.0, 0.2], [72.0, 0.375], [76.0, 1481.133333333333], [77.0, 1915.5], [79.0, 0.33333333333333337], [80.0, 146.07692307692307], [83.0, 0.09999999999999999], [82.0, 287.5142857142857], [81.0, 0.28571428571428575], [87.0, 10128.25], [86.0, 15835.25], [85.0, 0.33333333333333337], [84.0, 519.8846153846155], [91.0, 309.8461538461538], [90.0, 2918.1666666666665], [89.0, 11.0], [88.0, 22504.078431372553], [92.0, 65.88888888888886], [95.0, 0.14285714285714285], [94.0, 0.11111111111111113], [93.0, 0.2], [99.0, 0.0], [98.0, 2.5], [97.0, 0.9729729729729727], [96.0, 0.6346153846153847], [103.0, 0.22222222222222227], [102.0, 0.33333333333333337], [101.0, 0.0], [100.0, 0.6363636363636365], [106.0, 0.4], [105.0, 0.25000000000000006], [104.0, 0.0], [109.0, 42.480769230769226], [110.0, 0.7692307692307693], [108.0, 0.3], [115.0, 0.19999999999999998], [114.0, 3.4444444444444446], [113.0, 0.15384615384615383], [112.0, 0.28571428571428575], [119.0, 0.23809523809523808], [118.0, 0.2894736842105263], [116.0, 0.2], [117.0, 2.0], [123.0, 0.23529411764705882], [122.0, 0.2857142857142857], [121.0, 0.375], [120.0, 0.17857142857142858], [127.0, 0.6774193548387096], [126.0, 0.2727272727272727], [124.0, 0.22727272727272735], [135.0, 0.3076923076923077], [134.0, 0.32786885245901637], [133.0, 0.7692307692307692], [131.0, 0.29268292682926833], [130.0, 0.4444444444444444], [129.0, 0.0], [128.0, 0.2987012987012988], [132.0, 0.4], [143.0, 0.18181818181818182], [142.0, 4.285714285714285], [141.0, 0.2105263157894737], [140.0, 0.6111111111111112], [139.0, 0.13636363636363638], [137.0, 0.2647058823529412], [136.0, 0.0], [151.0, 1022.3333333333334], [149.0, 80694.13675213676], [148.0, 18048.13513513514], [147.0, 0.0], [146.0, 0.0], [145.0, 0.7341772151898734], [144.0, 0.12121212121212124], [159.0, 0.33333333333333337], [157.0, 0.0], [156.0, 0.0], [153.0, 1023.375], [167.0, 1062.6249999999998], [165.0, 0.0], [164.0, 0.4], [163.0, 0.8333333333333333], [162.0, 0.0], [160.0, 1.0], [170.0, 1983.6], [175.0, 0.25], [174.0, 0.0], [171.0, 0.33333333333333337], [169.0, 0.21428571428571427], [168.0, 0.14285714285714288], [177.0, 4967.142857142857], [178.0, 2427.75], [179.0, 4870.209302325579], [180.0, 4040.071428571429], [181.0, 1229.4999999999998], [182.0, 3517.5], [183.0, 0.0], [176.0, 0.18181818181818182], [191.0, 0.39999999999999997], [190.0, 0.16666666666666669], [189.0, 0.5], [188.0, 0.0], [187.0, 0.4], [185.0, 0.3333333333333333], [199.0, 0.33333333333333337], [198.0, 0.5], [197.0, 0.0], [196.0, 0.0909090909090909], [195.0, 0.0], [193.0, 0.4], [192.0, 0.11764705882352944], [206.0, 0.11111111111111113], [205.0, 0.0], [203.0, 0.0], [202.0, 0.16666666666666669], [201.0, 0.33333333333333337], [200.0, 0.07142857142857142], [215.0, 0.5], [214.0, 0.2380952380952381], [213.0, 0.16666666666666669], [212.0, 0.2727272727272728], [211.0, 0.14285714285714288], [210.0, 0.0], [209.0, 0.5], [208.0, 0.0], [223.0, 0.19999999999999998], [222.0, 0.22222222222222224], [221.0, 0.0], [220.0, 0.3333333333333333], [219.0, 0.21428571428571427], [218.0, 0.18518518518518517], [217.0, 0.33333333333333337], [216.0, 0.0], [230.0, 3306.0], [231.0, 0.11111111111111113], [229.0, 0.5], [228.0, 0.0], [227.0, 0.0], [226.0, 0.19999999999999998], [225.0, 0.1111111111111111], [224.0, 0.6666666666666666], [239.0, 0.5], [238.0, 0.3548387096774194], [237.0, 0.14285714285714288], [236.0, 0.5], [235.0, 0.4], [234.0, 1.0], [233.0, 0.6666666666666667], [247.0, 0.4516129032258065], [246.0, 0.25000000000000006], [245.0, 0.38888888888888895], [243.0, 2.0], [242.0, 0.5454545454545454], [240.0, 0.0], [255.0, 0.0625], [254.0, 0.09090909090909093], [253.0, 0.25000000000000006], [252.0, 0.0], [251.0, 1.6249999999999998], [250.0, 0.0], [249.0, 0.4285714285714286], [248.0, 0.45945945945945965], [257.0, 0.33333333333333337], [270.0, 0.2580645161290322], [261.0, 0.4676258992805756], [260.0, 0.45454545454545453], [263.0, 0.06896551724137931], [256.0, 0.5], [259.0, 0.10344827586206898], [258.0, 1.5731707317073171], [262.0, 0.12500000000000003], [271.0, 0.06451612903225808], [269.0, 0.0], [268.0, 0.3125], [267.0, 0.5], [266.0, 0.16666666666666669], [265.0, 0.75], [264.0, 0.16279069767441867], [286.0, 0.14285714285714288], [287.0, 14712.545454545454], [285.0, 0.21739130434782608], [284.0, 1.163265306122449], [283.0, 0.3333333333333334], [282.0, 0.07999999999999999], [281.0, 0.37755102040816335], [280.0, 0.2916666666666667], [279.0, 0.0], [273.0, 0.0], [272.0, 0.373913043478261], [275.0, 0.19565217391304351], [274.0, 0.18181818181818185], [278.0, 0.28205128205128216], [276.0, 0.12500000000000003], [296.0, 0.44311377245509], [300.0, 4145.387096774187], [299.0, 0.2919708029197079], [298.0, 0.0], [297.0, 0.28571428571428575], [295.0, 0.3294797687861271], [289.0, 0.3181818181818182], [288.0, 21152.169811320753], [291.0, 0.25000000000000006], [290.0, 0.3506493506493506], [294.0, 0.24000000000000005], [293.0, 0.1935483870967742], [292.0, 0.7916666666666667], [1.0, 42.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[214.93566666666717, 3382.539666666655]], "isOverall": false, "label": "postNewRequest-Aggregated", "isController": false}, {"data": [[2.0, 12.333333333333332], [3.0, 0.14285714285714288], [4.0, 0.0], [5.0, 0.33333333333333337], [6.0, 0.0], [7.0, 0.0], [8.0, 1.0], [10.0, 0.14285714285714288], [12.0, 0.0], [14.0, 0.6666666666666667], [15.0, 64.92307692307693], [16.0, 0.0], [17.0, 0.0], [18.0, 0.0], [19.0, 0.24999999999999997], [20.0, 0.28571428571428575], [21.0, 0.14285714285714285], [22.0, 0.0], [23.0, 0.0], [24.0, 0.5], [25.0, 201.66666666666669], [26.0, 0.33333333333333337], [27.0, 0.0], [28.0, 101.37500000000001], [30.0, 0.20000000000000004], [31.0, 0.07692307692307693], [33.0, 0.16666666666666669], [35.0, 0.0], [36.0, 968.75], [39.0, 0.0], [38.0, 1.0], [41.0, 0.0], [40.0, 0.33333333333333337], [43.0, 0.12500000000000003], [42.0, 0.0], [45.0, 0.36363636363636365], [44.0, 2.0909090909090913], [46.0, 0.0], [49.0, 0.5], [48.0, 0.13333333333333336], [51.0, 1.5], [50.0, 0.0], [53.0, 0.0], [52.0, 0.5], [54.0, 0.3157894736842107], [57.0, 0.6666666666666666], [56.0, 0.25], [59.0, 0.0], [58.0, 0.1111111111111111], [61.0, 0.0], [60.0, 0.25], [63.0, 0.0], [62.0, 0.5], [66.0, 317.65217391304344], [67.0, 0.0], [65.0, 0.19999999999999998], [64.0, 0.0], [71.0, 1.2], [70.0, 0.2857142857142857], [69.0, 0.0], [68.0, 0.0], [75.0, 0.0], [74.0, 2702.944444444445], [73.0, 1.0], [72.0, 0.4285714285714286], [76.0, 224.33333333333331], [78.0, 1031.75], [79.0, 0.09090909090909093], [77.0, 0.0], [82.0, 2811.2999999999993], [83.0, 2405.6190476190477], [81.0, 4061.4], [80.0, 6354.7], [87.0, 13356.666666666666], [86.0, 31888.866666666665], [85.0, 17527.928571428572], [84.0, 9795.111111111113], [89.0, 1053.6], [91.0, 257.3676470588236], [90.0, 1857.3333333333335], [88.0, 18578.47222222222], [95.0, 0.4444444444444444], [94.0, 0.22222222222222227], [93.0, 0.25000000000000006], [92.0, 0.23076923076923075], [98.0, 0.25], [97.0, 0.6923076923076925], [96.0, 1.5517241379310345], [103.0, 409.54545454545456], [102.0, 0.33333333333333337], [101.0, 0.0], [100.0, 0.19230769230769232], [107.0, 0.6666666666666667], [106.0, 0.4285714285714286], [105.0, 0.1904761904761905], [104.0, 0.0], [109.0, 98.39999999999998], [110.0, 0.4166666666666667], [108.0, 0.39999999999999997], [115.0, 0.17391304347826084], [114.0, 7.0], [113.0, 0.1875], [112.0, 0.4444444444444444], [118.0, 163.00000000000003], [119.0, 0.25], [116.0, 0.0], [123.0, 0.19999999999999998], [122.0, 0.22222222222222227], [121.0, 0.0], [120.0, 0.17857142857142855], [127.0, 0.2580645161290323], [126.0, 0.4444444444444444], [125.0, 0.2], [124.0, 0.19354838709677424], [135.0, 0.3043478260869566], [134.0, 0.3770491803278688], [133.0, 1.0000000000000002], [131.0, 0.2340425531914894], [130.0, 0.23529411764705882], [129.0, 0.2857142857142857], [128.0, 0.14285714285714285], [132.0, 0.0], [143.0, 2.5454545454545454], [142.0, 0.12500000000000003], [141.0, 0.09523809523809526], [140.0, 0.19999999999999998], [139.0, 0.23287671232876722], [137.0, 0.03333333333333335], [136.0, 0.125], [151.0, 1036.375], [150.0, 1019.0], [149.0, 212559.48780487807], [148.0, 98845.92], [147.0, 0.0], [146.0, 0.0], [145.0, 32444.691666666666], [144.0, 0.3947368421052633], [155.0, 4302.0], [159.0, 0.0], [158.0, 1.0], [157.0, 0.0], [156.0, 0.0], [153.0, 987.6000000000001], [152.0, 1027.0], [166.0, 2185.8], [167.0, 2269.866666666667], [165.0, 0.25], [164.0, 0.11111111111111113], [163.0, 0.3076923076923077], [162.0, 0.0], [160.0, 1.0], [175.0, 0.0], [174.0, 0.0], [171.0, 0.25], [170.0, 0.0], [169.0, 0.5833333333333334], [168.0, 0.125], [180.0, 828.0], [181.0, 1117.4285714285713], [182.0, 6946.5], [183.0, 0.0], [178.0, 0.0], [177.0, 1.0], [176.0, 0.16666666666666666], [191.0, 0.0], [190.0, 0.3], [189.0, 0.6], [187.0, 0.0], [185.0, 0.4], [199.0, 1.2], [198.0, 0.16666666666666669], [197.0, 0.25], [196.0, 0.09999999999999999], [195.0, 0.0], [193.0, 0.0], [192.0, 0.09523809523809523], [206.0, 0.0], [205.0, 0.09090909090909091], [204.0, 0.0], [203.0, 0.4], [202.0, 0.0], [201.0, 0.3333333333333333], [200.0, 0.19999999999999998], [215.0, 1.6], [214.0, 0.2916666666666667], [213.0, 0.2], [212.0, 0.10526315789473685], [211.0, 0.30000000000000004], [210.0, 0.6666666666666667], [209.0, 0.0], [208.0, 0.125], [222.0, 305.09999999999997], [223.0, 0.16666666666666669], [221.0, 0.0], [220.0, 0.2], [219.0, 0.0], [218.0, 0.4666666666666668], [217.0, 0.0], [216.0, 0.4285714285714286], [231.0, 0.0], [230.0, 0.33333333333333337], [229.0, 0.7777777777777777], [228.0, 0.0], [227.0, 0.0], [226.0, 0.3333333333333333], [225.0, 0.36363636363636365], [224.0, 0.5], [237.0, 646.1818181818182], [239.0, 0.0], [238.0, 0.1212121212121213], [236.0, 1.0], [235.0, 0.16666666666666669], [234.0, 0.0], [233.0, 0.25], [232.0, 0.0], [247.0, 0.32], [246.0, 0.09090909090909091], [245.0, 0.0], [244.0, 0.0], [243.0, 0.875], [242.0, 0.08333333333333334], [241.0, 0.0], [240.0, 0.0], [251.0, 3264.8], [255.0, 0.2258064516129033], [254.0, 0.29411764705882354], [253.0, 0.09090909090909093], [252.0, 0.0], [250.0, 0.375], [249.0, 0.16666666666666666], [248.0, 0.18918918918918917], [271.0, 0.3103448275862069], [266.0, 1118.714285714286], [270.0, 0.14492753623188415], [269.0, 0.15384615384615385], [268.0, 0.2], [259.0, 0.17391304347826084], [258.0, 0.8780487804878051], [257.0, 0.0], [256.0, 0.23529411764705888], [267.0, 0.0], [265.0, 0.0], [264.0, 0.34999999999999987], [263.0, 0.25925925925925924], [262.0, 0.0], [261.0, 0.4892086330935253], [260.0, 0.06666666666666667], [286.0, 80.76], [287.0, 27559.45714285715], [285.0, 3.4], [284.0, 12.692307692307692], [283.0, 1.2586206896551728], [282.0, 0.24000000000000005], [281.0, 0.4479166666666667], [280.0, 0.7000000000000001], [279.0, 0.2857142857142857], [273.0, 0.0], [272.0, 0.20689655172413804], [275.0, 0.5106382978723403], [274.0, 0.09999999999999999], [278.0, 0.2692307692307693], [276.0, 0.14285714285714288], [291.0, 625.0], [292.0, 615.3200000000003], [293.0, 0.2972972972972972], [300.0, 1928.7789275634982], [299.0, 0.22142857142857142], [298.0, 0.0], [297.0, 0.24444444444444458], [296.0, 0.368421052631579], [295.0, 0.4382022471910113], [288.0, 27247.897959183672], [290.0, 0.4819277108433735], [289.0, 0.96], [294.0, 1.6], [1.0, 0.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}, {"data": [[214.58416666666668, 4492.533666666673]], "isOverall": false, "label": "getDataOfRequestID-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5.85, "minX": 1.64642988E12, "maxY": 1586169.8666666667, "series": [{"data": [[1.64643E12, 329866.01666666666], [1.64643036E12, 1355912.6], [1.64642988E12, 1113161.9666666666], [1.64642994E12, 1586169.8666666667], [1.6464303E12, 224866.41666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64643E12, 739.5166666666667], [1.64643036E12, 933.95], [1.64642988E12, 2096.6666666666665], [1.64642994E12, 1602.1333333333334], [1.6464303E12, 5.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643036E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 669.7060969254837, "minX": 1.64642988E12, "maxY": 19822.942528735635, "series": [{"data": [[1.64643E12, 15552.222222222223], [1.64643036E12, 1493.4673202614358], [1.64642988E12, 868.7678571428565], [1.64642994E12, 669.7060969254837], [1.6464303E12, 1306.7053061224494]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643E12, 16188.8], [1.64643036E12, 1679.33990895296], [1.64642988E12, 7290.916666666667], [1.64642994E12, 1155.075769132975], [1.6464303E12, 17070.61653543304]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643E12, 19822.942528735635], [1.64643036E12, 2143.4711388455544], [1.64642988E12, 3414.4025974025994], [1.64642994E12, 2121.822940723642], [1.6464303E12, 6881.339066339075]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643E12, 19320.571428571428], [1.64643036E12, 3130.9118942731216], [1.64642988E12, 4116.066666666666], [1.64642994E12, 1783.3592135114643], [1.6464303E12, 13406.152307692328]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643036E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64642988E12, "maxY": 19822.919540229886, "series": [{"data": [[1.64643E12, 15552.133333333333], [1.64643036E12, 1127.524509803923], [1.64642988E12, 868.7178571428575], [1.64642994E12, 76.58025013027624], [1.6464303E12, 0.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643E12, 16188.766666666661], [1.64643036E12, 1562.8816388467399], [1.64642988E12, 7290.861111111111], [1.64642994E12, 520.9410119501678], [1.6464303E12, 0.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643E12, 19822.919540229886], [1.64643036E12, 1931.4087363494518], [1.64642988E12, 3414.3636363636356], [1.64642994E12, 199.85091095714654], [1.6464303E12, 272.7223587223586]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643E12, 19311.571428571428], [1.64643036E12, 1026.3509544787078], [1.64642988E12, 4111.577777777778], [1.64642994E12, 319.56642298966574], [1.6464303E12, 0.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643036E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.19444444444444453, "minX": 1.64642988E12, "maxY": 14763.955555555554, "series": [{"data": [[1.64643E12, 14763.955555555554], [1.64643036E12, 1080.1797385620898], [1.64642988E12, 0.2785714285714285], [1.64642994E12, 60.69150599270463], [1.6464303E12, 2.882448979591837]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64643E12, 5138.000000000001], [1.64643036E12, 867.8042488619102], [1.64642988E12, 0.19444444444444453], [1.64642994E12, 58.92499364352911], [1.6464303E12, 4.413385826771654]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64643E12, 11358.448275862072], [1.64643036E12, 1398.4243369734777], [1.64642988E12, 0.21428571428571438], [1.64642994E12, 34.29458557865021], [1.6464303E12, 52.39967239967233]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64643E12, 8797.714285714286], [1.64643036E12, 981.3245227606463], [1.64642988E12, 0.2222222222222223], [1.64642994E12, 34.86639778169903], [1.6464303E12, 306.47692307692256]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643036E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.64642988E12, "maxY": 332994.0, "series": [{"data": [[1.64643E12, 32955.0], [1.64643036E12, 49095.0], [1.64642988E12, 31984.0], [1.64642994E12, 39411.0], [1.6464303E12, 332994.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64643E12, 28183.0], [1.64643036E12, 33064.5], [1.64642988E12, 6713.200000000001], [1.64642994E12, 33240.6], [1.6464303E12, 332994.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64643E12, 32893.4], [1.64643036E12, 47933.5], [1.64642988E12, 29365.760000000002], [1.64642994E12, 38255.560000000005], [1.6464303E12, 332994.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64643E12, 30263.0], [1.64643036E12, 39692.5], [1.64642988E12, 7796.200000000001], [1.64642994E12, 35057.799999999996], [1.6464303E12, 332994.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64643E12, 93.0], [1.64643036E12, 1.0], [1.64642988E12, 1.0], [1.64642994E12, 6.0], [1.6464303E12, 332994.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64643E12, 16638.0], [1.64643036E12, 8843.5], [1.64642988E12, 1628.0], [1.64642994E12, 6076.0], [1.6464303E12, 332994.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643036E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 332994.0, "series": [{"data": [[2.0, 20234.5], [32.0, 15996.5], [33.0, 32989.0], [34.0, 1760.0], [35.0, 3142.0], [36.0, 16659.5], [39.0, 115.0], [43.0, 361.0], [3.0, 12251.0], [49.0, 6411.0], [53.0, 1784.0], [60.0, 11006.0], [63.0, 11222.0], [4.0, 17448.5], [72.0, 1755.0], [5.0, 11.0], [6.0, 13762.5], [1576.0, 1156.0], [97.0, 2885.0], [7.0, 24516.5], [8.0, 33055.0], [144.0, 3614.0], [9.0, 6295.0], [2355.0, 16299.0], [10.0, 7174.0], [11.0, 9231.0], [12.0, 3.5], [13.0, 1770.0], [14.0, 6057.5], [15.0, 3.0], [16.0, 3911.0], [1.0, 15816.0], [17.0, 6518.5], [19.0, 1625.0], [4999.0, 332994.0], [5508.0, 34405.0], [5772.0, 38575.0], [22.0, 13191.5], [23.0, 4302.0], [25.0, 3423.0], [30.0, 31688.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 1024.0], [2.0, 11263.5], [2330.0, 0.0], [2355.0, 0.0], [4999.0, 0.0], [5508.0, 0.0], [5772.0, 0.0], [1576.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5772.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 332994.0, "series": [{"data": [[2.0, 20234.5], [32.0, 15996.0], [33.0, 32989.0], [34.0, 1760.0], [35.0, 3142.0], [36.0, 16659.5], [39.0, 115.0], [43.0, 361.0], [3.0, 12251.0], [49.0, 6411.0], [53.0, 1784.0], [60.0, 11006.0], [63.0, 11222.0], [4.0, 17448.5], [72.0, 1755.0], [5.0, 11.0], [6.0, 13762.5], [1576.0, 1156.0], [97.0, 2885.0], [7.0, 24516.5], [8.0, 33055.0], [144.0, 3614.0], [9.0, 6295.0], [2355.0, 16299.0], [10.0, 7174.0], [11.0, 9231.0], [12.0, 3.5], [13.0, 1770.0], [14.0, 6057.0], [15.0, 3.0], [16.0, 3911.0], [1.0, 15816.0], [17.0, 6518.5], [19.0, 1625.0], [4999.0, 332994.0], [5508.0, 34404.0], [5772.0, 38575.0], [22.0, 13191.5], [23.0, 4302.0], [25.0, 3423.0], [30.0, 31688.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[1.0, 0.0], [2.0, 0.0], [2330.0, 0.0], [2355.0, 0.0], [4999.0, 0.0], [5508.0, 0.0], [5772.0, 0.0], [1576.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 5772.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.816666666666667, "minX": 1.64642988E12, "maxY": 258.06666666666666, "series": [{"data": [[1.64643E12, 2.816666666666667], [1.64643036E12, 41.71666666666667], [1.64642988E12, 14.783333333333333], [1.64642994E12, 258.06666666666666], [1.6464303E12, 82.61666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643036E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.64642988E12, "maxY": 241.26666666666668, "series": [{"data": [[1.64643E12, 2.816666666666667], [1.64643036E12, 3.9], [1.64642988E12, 9.783333333333333], [1.64642994E12, 7.516666666666667], [1.6464303E12, 0.016666666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64643036E12, 37.483333333333334], [1.64642994E12, 241.26666666666668], [1.6464303E12, 80.01666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.64643036E12, 1.2333333333333334], [1.64642994E12, 7.433333333333334], [1.6464303E12, 1.95]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.64642994E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.ConnectionClosedException", "isController": false}, {"data": [[1.64643036E12, 0.6], [1.64642994E12, 4.333333333333333], [1.6464303E12, 1.6166666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64643036E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.64642988E12, "maxY": 64.93333333333334, "series": [{"data": [[1.64643E12, 1.45], [1.64643036E12, 1.1], [1.64642988E12, 2.566666666666667], [1.64642994E12, 1.2333333333333334], [1.6464303E12, 0.016666666666666666]], "isOverall": false, "label": "postNewRequest-success", "isController": false}, {"data": [[1.64643036E12, 9.583333333333334], [1.64642994E12, 63.71666666666667], [1.6464303E12, 20.333333333333332]], "isOverall": false, "label": "postNewRequest-failure", "isController": false}, {"data": [[1.64643036E12, 9.733333333333333], [1.64642994E12, 62.55], [1.6464303E12, 21.166666666666668]], "isOverall": false, "label": "getAllStatus-failure", "isController": false}, {"data": [[1.64643E12, 0.75], [1.64643036E12, 0.7666666666666667], [1.64642988E12, 4.666666666666667], [1.64642994E12, 2.1]], "isOverall": false, "label": "getAllInfo-success", "isController": false}, {"data": [[1.64643036E12, 9.433333333333334], [1.64642994E12, 61.86666666666667], [1.6464303E12, 20.416666666666668]], "isOverall": false, "label": "getAllInfo-failure", "isController": false}, {"data": [[1.64643E12, 0.11666666666666667], [1.64643036E12, 0.7833333333333333], [1.64642988E12, 0.75], [1.64642994E12, 1.1833333333333333]], "isOverall": false, "label": "getDataOfRequestID-success", "isController": false}, {"data": [[1.64643036E12, 10.566666666666666], [1.64642994E12, 64.93333333333334], [1.6464303E12, 21.666666666666668]], "isOverall": false, "label": "getDataOfRequestID-failure", "isController": false}, {"data": [[1.64643E12, 0.5], [1.64643036E12, 1.25], [1.64642988E12, 1.8], [1.64642994E12, 3.0]], "isOverall": false, "label": "getAllStatus-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643036E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.64642988E12, "maxY": 253.06666666666666, "series": [{"data": [[1.64643E12, 2.816666666666667], [1.64643036E12, 3.9], [1.64642988E12, 9.783333333333333], [1.64642994E12, 7.516666666666667], [1.6464303E12, 0.016666666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64643036E12, 39.31666666666667], [1.64642994E12, 253.06666666666666], [1.6464303E12, 83.58333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64643036E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

