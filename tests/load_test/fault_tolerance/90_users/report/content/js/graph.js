/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 26647.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 3.0], [4.9, 3.0], [5.0, 3.0], [5.1, 3.0], [5.2, 3.0], [5.3, 3.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 4.0], [11.3, 4.0], [11.4, 4.0], [11.5, 4.0], [11.6, 4.0], [11.7, 4.0], [11.8, 4.0], [11.9, 4.0], [12.0, 4.0], [12.1, 4.0], [12.2, 4.0], [12.3, 4.0], [12.4, 4.0], [12.5, 4.0], [12.6, 4.0], [12.7, 4.0], [12.8, 4.0], [12.9, 4.0], [13.0, 4.0], [13.1, 4.0], [13.2, 4.0], [13.3, 4.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 5.0], [16.1, 5.0], [16.2, 5.0], [16.3, 5.0], [16.4, 5.0], [16.5, 5.0], [16.6, 5.0], [16.7, 5.0], [16.8, 5.0], [16.9, 5.0], [17.0, 5.0], [17.1, 5.0], [17.2, 5.0], [17.3, 5.0], [17.4, 5.0], [17.5, 5.0], [17.6, 5.0], [17.7, 5.0], [17.8, 6.0], [17.9, 6.0], [18.0, 6.0], [18.1, 6.0], [18.2, 6.0], [18.3, 6.0], [18.4, 6.0], [18.5, 6.0], [18.6, 6.0], [18.7, 6.0], [18.8, 6.0], [18.9, 6.0], [19.0, 6.0], [19.1, 6.0], [19.2, 6.0], [19.3, 6.0], [19.4, 6.0], [19.5, 7.0], [19.6, 7.0], [19.7, 7.0], [19.8, 7.0], [19.9, 7.0], [20.0, 7.0], [20.1, 7.0], [20.2, 7.0], [20.3, 7.0], [20.4, 7.0], [20.5, 7.0], [20.6, 7.0], [20.7, 7.0], [20.8, 7.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 9.0], [21.8, 9.0], [21.9, 9.0], [22.0, 9.0], [22.1, 9.0], [22.2, 9.0], [22.3, 9.0], [22.4, 9.0], [22.5, 9.0], [22.6, 9.0], [22.7, 9.0], [22.8, 9.0], [22.9, 9.0], [23.0, 9.0], [23.1, 10.0], [23.2, 10.0], [23.3, 10.0], [23.4, 10.0], [23.5, 10.0], [23.6, 10.0], [23.7, 10.0], [23.8, 10.0], [23.9, 10.0], [24.0, 11.0], [24.1, 11.0], [24.2, 11.0], [24.3, 11.0], [24.4, 11.0], [24.5, 12.0], [24.6, 12.0], [24.7, 12.0], [24.8, 12.0], [24.9, 13.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 13.0], [25.4, 14.0], [25.5, 14.0], [25.6, 14.0], [25.7, 14.0], [25.8, 14.0], [25.9, 14.0], [26.0, 14.0], [26.1, 14.0], [26.2, 15.0], [26.3, 15.0], [26.4, 15.0], [26.5, 15.0], [26.6, 15.0], [26.7, 15.0], [26.8, 15.0], [26.9, 15.0], [27.0, 16.0], [27.1, 16.0], [27.2, 16.0], [27.3, 17.0], [27.4, 17.0], [27.5, 17.0], [27.6, 17.0], [27.7, 17.0], [27.8, 18.0], [27.9, 18.0], [28.0, 18.0], [28.1, 18.0], [28.2, 18.0], [28.3, 19.0], [28.4, 19.0], [28.5, 20.0], [28.6, 20.0], [28.7, 20.0], [28.8, 21.0], [28.9, 21.0], [29.0, 23.0], [29.1, 23.0], [29.2, 23.0], [29.3, 24.0], [29.4, 24.0], [29.5, 25.0], [29.6, 25.0], [29.7, 25.0], [29.8, 27.0], [29.9, 29.0], [30.0, 30.0], [30.1, 31.0], [30.2, 33.0], [30.3, 33.0], [30.4, 37.0], [30.5, 37.0], [30.6, 39.0], [30.7, 43.0], [30.8, 44.0], [30.9, 44.0], [31.0, 46.0], [31.1, 49.0], [31.2, 50.0], [31.3, 51.0], [31.4, 59.0], [31.5, 59.0], [31.6, 65.0], [31.7, 67.0], [31.8, 69.0], [31.9, 70.0], [32.0, 71.0], [32.1, 72.0], [32.2, 74.0], [32.3, 74.0], [32.4, 76.0], [32.5, 77.0], [32.6, 78.0], [32.7, 79.0], [32.8, 81.0], [32.9, 84.0], [33.0, 84.0], [33.1, 87.0], [33.2, 89.0], [33.3, 89.0], [33.4, 90.0], [33.5, 90.0], [33.6, 93.0], [33.7, 96.0], [33.8, 97.0], [33.9, 98.0], [34.0, 99.0], [34.1, 100.0], [34.2, 101.0], [34.3, 102.0], [34.4, 102.0], [34.5, 102.0], [34.6, 104.0], [34.7, 105.0], [34.8, 106.0], [34.9, 107.0], [35.0, 108.0], [35.1, 108.0], [35.2, 110.0], [35.3, 110.0], [35.4, 111.0], [35.5, 112.0], [35.6, 112.0], [35.7, 113.0], [35.8, 113.0], [35.9, 114.0], [36.0, 115.0], [36.1, 116.0], [36.2, 116.0], [36.3, 116.0], [36.4, 117.0], [36.5, 118.0], [36.6, 119.0], [36.7, 119.0], [36.8, 121.0], [36.9, 122.0], [37.0, 123.0], [37.1, 124.0], [37.2, 126.0], [37.3, 127.0], [37.4, 128.0], [37.5, 128.0], [37.6, 129.0], [37.7, 133.0], [37.8, 134.0], [37.9, 135.0], [38.0, 137.0], [38.1, 138.0], [38.2, 140.0], [38.3, 140.0], [38.4, 140.0], [38.5, 144.0], [38.6, 146.0], [38.7, 154.0], [38.8, 158.0], [38.9, 162.0], [39.0, 163.0], [39.1, 167.0], [39.2, 169.0], [39.3, 170.0], [39.4, 172.0], [39.5, 173.0], [39.6, 174.0], [39.7, 174.0], [39.8, 176.0], [39.9, 178.0], [40.0, 179.0], [40.1, 179.0], [40.2, 181.0], [40.3, 181.0], [40.4, 182.0], [40.5, 182.0], [40.6, 184.0], [40.7, 186.0], [40.8, 186.0], [40.9, 188.0], [41.0, 189.0], [41.1, 190.0], [41.2, 191.0], [41.3, 191.0], [41.4, 192.0], [41.5, 192.0], [41.6, 193.0], [41.7, 194.0], [41.8, 195.0], [41.9, 195.0], [42.0, 195.0], [42.1, 196.0], [42.2, 197.0], [42.3, 197.0], [42.4, 198.0], [42.5, 198.0], [42.6, 199.0], [42.7, 199.0], [42.8, 200.0], [42.9, 200.0], [43.0, 201.0], [43.1, 202.0], [43.2, 203.0], [43.3, 205.0], [43.4, 206.0], [43.5, 206.0], [43.6, 208.0], [43.7, 209.0], [43.8, 210.0], [43.9, 212.0], [44.0, 213.0], [44.1, 214.0], [44.2, 217.0], [44.3, 220.0], [44.4, 224.0], [44.5, 226.0], [44.6, 234.0], [44.7, 237.0], [44.8, 246.0], [44.9, 260.0], [45.0, 262.0], [45.1, 267.0], [45.2, 271.0], [45.3, 272.0], [45.4, 276.0], [45.5, 276.0], [45.6, 287.0], [45.7, 288.0], [45.8, 289.0], [45.9, 291.0], [46.0, 292.0], [46.1, 294.0], [46.2, 295.0], [46.3, 296.0], [46.4, 297.0], [46.5, 298.0], [46.6, 301.0], [46.7, 302.0], [46.8, 304.0], [46.9, 305.0], [47.0, 305.0], [47.1, 307.0], [47.2, 312.0], [47.3, 312.0], [47.4, 315.0], [47.5, 316.0], [47.6, 319.0], [47.7, 319.0], [47.8, 321.0], [47.9, 322.0], [48.0, 323.0], [48.1, 323.0], [48.2, 325.0], [48.3, 325.0], [48.4, 328.0], [48.5, 328.0], [48.6, 332.0], [48.7, 335.0], [48.8, 356.0], [48.9, 357.0], [49.0, 361.0], [49.1, 364.0], [49.2, 369.0], [49.3, 372.0], [49.4, 372.0], [49.5, 372.0], [49.6, 374.0], [49.7, 376.0], [49.8, 377.0], [49.9, 379.0], [50.0, 379.0], [50.1, 380.0], [50.2, 380.0], [50.3, 381.0], [50.4, 383.0], [50.5, 384.0], [50.6, 384.0], [50.7, 385.0], [50.8, 385.0], [50.9, 387.0], [51.0, 387.0], [51.1, 387.0], [51.2, 387.0], [51.3, 388.0], [51.4, 389.0], [51.5, 389.0], [51.6, 389.0], [51.7, 393.0], [51.8, 395.0], [51.9, 395.0], [52.0, 396.0], [52.1, 396.0], [52.2, 396.0], [52.3, 397.0], [52.4, 398.0], [52.5, 398.0], [52.6, 399.0], [52.7, 400.0], [52.8, 400.0], [52.9, 401.0], [53.0, 401.0], [53.1, 401.0], [53.2, 403.0], [53.3, 404.0], [53.4, 405.0], [53.5, 406.0], [53.6, 409.0], [53.7, 411.0], [53.8, 412.0], [53.9, 412.0], [54.0, 414.0], [54.1, 414.0], [54.2, 417.0], [54.3, 418.0], [54.4, 421.0], [54.5, 421.0], [54.6, 421.0], [54.7, 421.0], [54.8, 422.0], [54.9, 423.0], [55.0, 424.0], [55.1, 424.0], [55.2, 426.0], [55.3, 426.0], [55.4, 427.0], [55.5, 427.0], [55.6, 428.0], [55.7, 428.0], [55.8, 429.0], [55.9, 431.0], [56.0, 433.0], [56.1, 438.0], [56.2, 440.0], [56.3, 449.0], [56.4, 458.0], [56.5, 458.0], [56.6, 461.0], [56.7, 462.0], [56.8, 463.0], [56.9, 466.0], [57.0, 466.0], [57.1, 468.0], [57.2, 471.0], [57.3, 472.0], [57.4, 475.0], [57.5, 476.0], [57.6, 477.0], [57.7, 478.0], [57.8, 478.0], [57.9, 479.0], [58.0, 479.0], [58.1, 480.0], [58.2, 481.0], [58.3, 481.0], [58.4, 482.0], [58.5, 482.0], [58.6, 483.0], [58.7, 483.0], [58.8, 483.0], [58.9, 484.0], [59.0, 484.0], [59.1, 485.0], [59.2, 486.0], [59.3, 487.0], [59.4, 487.0], [59.5, 487.0], [59.6, 487.0], [59.7, 488.0], [59.8, 489.0], [59.9, 490.0], [60.0, 491.0], [60.1, 492.0], [60.2, 493.0], [60.3, 493.0], [60.4, 495.0], [60.5, 495.0], [60.6, 496.0], [60.7, 497.0], [60.8, 497.0], [60.9, 497.0], [61.0, 497.0], [61.1, 498.0], [61.2, 498.0], [61.3, 499.0], [61.4, 500.0], [61.5, 500.0], [61.6, 501.0], [61.7, 502.0], [61.8, 502.0], [61.9, 503.0], [62.0, 503.0], [62.1, 504.0], [62.2, 507.0], [62.3, 508.0], [62.4, 511.0], [62.5, 511.0], [62.6, 512.0], [62.7, 512.0], [62.8, 515.0], [62.9, 518.0], [63.0, 518.0], [63.1, 519.0], [63.2, 521.0], [63.3, 523.0], [63.4, 525.0], [63.5, 525.0], [63.6, 525.0], [63.7, 527.0], [63.8, 530.0], [63.9, 541.0], [64.0, 548.0], [64.1, 555.0], [64.2, 559.0], [64.3, 563.0], [64.4, 568.0], [64.5, 569.0], [64.6, 571.0], [64.7, 572.0], [64.8, 574.0], [64.9, 576.0], [65.0, 577.0], [65.1, 580.0], [65.2, 582.0], [65.3, 584.0], [65.4, 586.0], [65.5, 587.0], [65.6, 590.0], [65.7, 590.0], [65.8, 591.0], [65.9, 592.0], [66.0, 593.0], [66.1, 594.0], [66.2, 595.0], [66.3, 596.0], [66.4, 598.0], [66.5, 598.0], [66.6, 599.0], [66.7, 599.0], [66.8, 604.0], [66.9, 607.0], [67.0, 608.0], [67.1, 609.0], [67.2, 611.0], [67.3, 613.0], [67.4, 613.0], [67.5, 614.0], [67.6, 616.0], [67.7, 619.0], [67.8, 621.0], [67.9, 622.0], [68.0, 625.0], [68.1, 627.0], [68.2, 629.0], [68.3, 632.0], [68.4, 637.0], [68.5, 637.0], [68.6, 639.0], [68.7, 649.0], [68.8, 669.0], [68.9, 680.0], [69.0, 682.0], [69.1, 684.0], [69.2, 685.0], [69.3, 686.0], [69.4, 687.0], [69.5, 689.0], [69.6, 690.0], [69.7, 691.0], [69.8, 692.0], [69.9, 693.0], [70.0, 695.0], [70.1, 696.0], [70.2, 697.0], [70.3, 698.0], [70.4, 698.0], [70.5, 699.0], [70.6, 699.0], [70.7, 700.0], [70.8, 702.0], [70.9, 703.0], [71.0, 703.0], [71.1, 704.0], [71.2, 708.0], [71.3, 709.0], [71.4, 712.0], [71.5, 712.0], [71.6, 714.0], [71.7, 715.0], [71.8, 716.0], [71.9, 717.0], [72.0, 717.0], [72.1, 718.0], [72.2, 720.0], [72.3, 721.0], [72.4, 723.0], [72.5, 723.0], [72.6, 724.0], [72.7, 725.0], [72.8, 728.0], [72.9, 729.0], [73.0, 730.0], [73.1, 732.0], [73.2, 733.0], [73.3, 735.0], [73.4, 736.0], [73.5, 738.0], [73.6, 741.0], [73.7, 744.0], [73.8, 757.0], [73.9, 760.0], [74.0, 760.0], [74.1, 766.0], [74.2, 767.0], [74.3, 767.0], [74.4, 770.0], [74.5, 770.0], [74.6, 772.0], [74.7, 772.0], [74.8, 773.0], [74.9, 774.0], [75.0, 774.0], [75.1, 776.0], [75.2, 776.0], [75.3, 778.0], [75.4, 779.0], [75.5, 781.0], [75.6, 782.0], [75.7, 783.0], [75.8, 783.0], [75.9, 785.0], [76.0, 786.0], [76.1, 788.0], [76.2, 791.0], [76.3, 792.0], [76.4, 792.0], [76.5, 794.0], [76.6, 794.0], [76.7, 796.0], [76.8, 796.0], [76.9, 798.0], [77.0, 798.0], [77.1, 800.0], [77.2, 801.0], [77.3, 803.0], [77.4, 805.0], [77.5, 806.0], [77.6, 810.0], [77.7, 812.0], [77.8, 813.0], [77.9, 815.0], [78.0, 816.0], [78.1, 820.0], [78.2, 826.0], [78.3, 829.0], [78.4, 832.0], [78.5, 832.0], [78.6, 834.0], [78.7, 835.0], [78.8, 841.0], [78.9, 845.0], [79.0, 845.0], [79.1, 846.0], [79.2, 858.0], [79.3, 864.0], [79.4, 870.0], [79.5, 871.0], [79.6, 874.0], [79.7, 877.0], [79.8, 880.0], [79.9, 882.0], [80.0, 883.0], [80.1, 884.0], [80.2, 885.0], [80.3, 888.0], [80.4, 889.0], [80.5, 890.0], [80.6, 890.0], [80.7, 892.0], [80.8, 892.0], [80.9, 892.0], [81.0, 892.0], [81.1, 893.0], [81.2, 894.0], [81.3, 895.0], [81.4, 896.0], [81.5, 896.0], [81.6, 897.0], [81.7, 898.0], [81.8, 899.0], [81.9, 900.0], [82.0, 901.0], [82.1, 902.0], [82.2, 903.0], [82.3, 905.0], [82.4, 905.0], [82.5, 906.0], [82.6, 907.0], [82.7, 909.0], [82.8, 910.0], [82.9, 916.0], [83.0, 916.0], [83.1, 918.0], [83.2, 919.0], [83.3, 920.0], [83.4, 920.0], [83.5, 922.0], [83.6, 923.0], [83.7, 924.0], [83.8, 927.0], [83.9, 932.0], [84.0, 932.0], [84.1, 941.0], [84.2, 942.0], [84.3, 952.0], [84.4, 956.0], [84.5, 956.0], [84.6, 962.0], [84.7, 963.0], [84.8, 966.0], [84.9, 971.0], [85.0, 971.0], [85.1, 973.0], [85.2, 976.0], [85.3, 978.0], [85.4, 979.0], [85.5, 980.0], [85.6, 981.0], [85.7, 983.0], [85.8, 984.0], [85.9, 984.0], [86.0, 984.0], [86.1, 986.0], [86.2, 989.0], [86.3, 990.0], [86.4, 990.0], [86.5, 991.0], [86.6, 991.0], [86.7, 993.0], [86.8, 993.0], [86.9, 994.0], [87.0, 995.0], [87.1, 996.0], [87.2, 998.0], [87.3, 999.0], [87.4, 1000.0], [87.5, 1000.0], [87.6, 1001.0], [87.7, 1003.0], [87.8, 1006.0], [87.9, 1008.0], [88.0, 1008.0], [88.1, 1009.0], [88.2, 1009.0], [88.3, 1010.0], [88.4, 1011.0], [88.5, 1011.0], [88.6, 1014.0], [88.7, 1017.0], [88.8, 1018.0], [88.9, 1020.0], [89.0, 1020.0], [89.1, 1022.0], [89.2, 1023.0], [89.3, 1027.0], [89.4, 1029.0], [89.5, 1031.0], [89.6, 1032.0], [89.7, 1042.0], [89.8, 1045.0], [89.9, 1055.0], [90.0, 1061.0], [90.1, 1072.0], [90.2, 1075.0], [90.3, 1075.0], [90.4, 1079.0], [90.5, 1080.0], [90.6, 1083.0], [90.7, 1088.0], [90.8, 1090.0], [90.9, 1094.0], [91.0, 1095.0], [91.1, 1098.0], [91.2, 1098.0], [91.3, 1103.0], [91.4, 1104.0], [91.5, 1107.0], [91.6, 1108.0], [91.7, 1110.0], [91.8, 1117.0], [91.9, 1121.0], [92.0, 1127.0], [92.1, 1128.0], [92.2, 1129.0], [92.3, 1134.0], [92.4, 1137.0], [92.5, 1160.0], [92.6, 1162.0], [92.7, 1171.0], [92.8, 1178.0], [92.9, 1182.0], [93.0, 1182.0], [93.1, 1185.0], [93.2, 1188.0], [93.3, 1189.0], [93.4, 1193.0], [93.5, 1193.0], [93.6, 1196.0], [93.7, 1201.0], [93.8, 1203.0], [93.9, 1208.0], [94.0, 1211.0], [94.1, 1213.0], [94.2, 1223.0], [94.3, 1261.0], [94.4, 1263.0], [94.5, 1271.0], [94.6, 1273.0], [94.7, 1279.0], [94.8, 1282.0], [94.9, 1283.0], [95.0, 1284.0], [95.1, 1296.0], [95.2, 1307.0], [95.3, 1312.0], [95.4, 1321.0], [95.5, 1330.0], [95.6, 1337.0], [95.7, 1357.0], [95.8, 1373.0], [95.9, 1390.0], [96.0, 1397.0], [96.1, 1400.0], [96.2, 1401.0], [96.3, 1408.0], [96.4, 1425.0], [96.5, 1448.0], [96.6, 1464.0], [96.7, 1515.0], [96.8, 1551.0], [96.9, 1614.0], [97.0, 1621.0], [97.1, 1626.0], [97.2, 1877.0], [97.3, 1986.0], [97.4, 1993.0], [97.5, 2014.0], [97.6, 2076.0], [97.7, 2200.0], [97.8, 2214.0], [97.9, 2282.0], [98.0, 2424.0], [98.1, 2482.0], [98.2, 2482.0], [98.3, 2521.0], [98.4, 2674.0], [98.5, 2684.0], [98.6, 2690.0], [98.7, 2699.0], [98.8, 2721.0], [98.9, 2732.0], [99.0, 2778.0], [99.1, 2845.0], [99.2, 3000.0], [99.3, 3076.0], [99.4, 3091.0], [99.5, 3109.0], [99.6, 3185.0], [99.7, 3400.0], [99.8, 3541.0], [99.9, 4182.0], [100.0, 4211.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[0.0, 5.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 7.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 11.0], [4.0, 11.0], [4.1, 11.0], [4.2, 11.0], [4.3, 11.0], [4.4, 11.0], [4.5, 11.0], [4.6, 11.0], [4.7, 12.0], [4.8, 12.0], [4.9, 12.0], [5.0, 12.0], [5.1, 12.0], [5.2, 12.0], [5.3, 12.0], [5.4, 12.0], [5.5, 12.0], [5.6, 12.0], [5.7, 12.0], [5.8, 13.0], [5.9, 13.0], [6.0, 13.0], [6.1, 13.0], [6.2, 13.0], [6.3, 14.0], [6.4, 14.0], [6.5, 14.0], [6.6, 14.0], [6.7, 14.0], [6.8, 14.0], [6.9, 14.0], [7.0, 14.0], [7.1, 14.0], [7.2, 15.0], [7.3, 15.0], [7.4, 15.0], [7.5, 15.0], [7.6, 15.0], [7.7, 15.0], [7.8, 15.0], [7.9, 15.0], [8.0, 15.0], [8.1, 15.0], [8.2, 16.0], [8.3, 16.0], [8.4, 16.0], [8.5, 16.0], [8.6, 16.0], [8.7, 16.0], [8.8, 16.0], [8.9, 17.0], [9.0, 17.0], [9.1, 17.0], [9.2, 17.0], [9.3, 17.0], [9.4, 18.0], [9.5, 18.0], [9.6, 18.0], [9.7, 19.0], [9.8, 19.0], [9.9, 19.0], [10.0, 20.0], [10.1, 20.0], [10.2, 20.0], [10.3, 21.0], [10.4, 21.0], [10.5, 21.0], [10.6, 21.0], [10.7, 21.0], [10.8, 22.0], [10.9, 23.0], [11.0, 23.0], [11.1, 23.0], [11.2, 23.0], [11.3, 24.0], [11.4, 25.0], [11.5, 25.0], [11.6, 25.0], [11.7, 26.0], [11.8, 27.0], [11.9, 27.0], [12.0, 28.0], [12.1, 28.0], [12.2, 28.0], [12.3, 29.0], [12.4, 29.0], [12.5, 29.0], [12.6, 31.0], [12.7, 32.0], [12.8, 32.0], [12.9, 32.0], [13.0, 33.0], [13.1, 37.0], [13.2, 41.0], [13.3, 42.0], [13.4, 48.0], [13.5, 49.0], [13.6, 50.0], [13.7, 51.0], [13.8, 54.0], [13.9, 54.0], [14.0, 57.0], [14.1, 57.0], [14.2, 62.0], [14.3, 65.0], [14.4, 66.0], [14.5, 67.0], [14.6, 67.0], [14.7, 70.0], [14.8, 74.0], [14.9, 78.0], [15.0, 80.0], [15.1, 80.0], [15.2, 80.0], [15.3, 85.0], [15.4, 88.0], [15.5, 90.0], [15.6, 91.0], [15.7, 91.0], [15.8, 92.0], [15.9, 92.0], [16.0, 94.0], [16.1, 95.0], [16.2, 96.0], [16.3, 98.0], [16.4, 99.0], [16.5, 100.0], [16.6, 100.0], [16.7, 101.0], [16.8, 102.0], [16.9, 104.0], [17.0, 105.0], [17.1, 107.0], [17.2, 108.0], [17.3, 109.0], [17.4, 112.0], [17.5, 113.0], [17.6, 114.0], [17.7, 116.0], [17.8, 116.0], [17.9, 117.0], [18.0, 118.0], [18.1, 119.0], [18.2, 119.0], [18.3, 120.0], [18.4, 122.0], [18.5, 124.0], [18.6, 125.0], [18.7, 126.0], [18.8, 127.0], [18.9, 127.0], [19.0, 128.0], [19.1, 131.0], [19.2, 132.0], [19.3, 133.0], [19.4, 134.0], [19.5, 134.0], [19.6, 158.0], [19.7, 160.0], [19.8, 160.0], [19.9, 165.0], [20.0, 165.0], [20.1, 170.0], [20.2, 171.0], [20.3, 172.0], [20.4, 175.0], [20.5, 178.0], [20.6, 179.0], [20.7, 180.0], [20.8, 181.0], [20.9, 181.0], [21.0, 181.0], [21.1, 183.0], [21.2, 184.0], [21.3, 184.0], [21.4, 186.0], [21.5, 186.0], [21.6, 189.0], [21.7, 189.0], [21.8, 189.0], [21.9, 191.0], [22.0, 191.0], [22.1, 191.0], [22.2, 192.0], [22.3, 193.0], [22.4, 193.0], [22.5, 194.0], [22.6, 194.0], [22.7, 195.0], [22.8, 195.0], [22.9, 196.0], [23.0, 197.0], [23.1, 198.0], [23.2, 198.0], [23.3, 199.0], [23.4, 199.0], [23.5, 200.0], [23.6, 202.0], [23.7, 202.0], [23.8, 203.0], [23.9, 203.0], [24.0, 203.0], [24.1, 205.0], [24.2, 206.0], [24.3, 207.0], [24.4, 208.0], [24.5, 208.0], [24.6, 208.0], [24.7, 209.0], [24.8, 210.0], [24.9, 210.0], [25.0, 212.0], [25.1, 213.0], [25.2, 213.0], [25.3, 215.0], [25.4, 216.0], [25.5, 218.0], [25.6, 219.0], [25.7, 220.0], [25.8, 221.0], [25.9, 222.0], [26.0, 222.0], [26.1, 224.0], [26.2, 227.0], [26.3, 228.0], [26.4, 231.0], [26.5, 231.0], [26.6, 248.0], [26.7, 256.0], [26.8, 264.0], [26.9, 266.0], [27.0, 266.0], [27.1, 268.0], [27.2, 269.0], [27.3, 270.0], [27.4, 272.0], [27.5, 272.0], [27.6, 274.0], [27.7, 280.0], [27.8, 282.0], [27.9, 286.0], [28.0, 286.0], [28.1, 286.0], [28.2, 287.0], [28.3, 289.0], [28.4, 291.0], [28.5, 294.0], [28.6, 297.0], [28.7, 299.0], [28.8, 300.0], [28.9, 302.0], [29.0, 305.0], [29.1, 307.0], [29.2, 308.0], [29.3, 310.0], [29.4, 311.0], [29.5, 312.0], [29.6, 315.0], [29.7, 316.0], [29.8, 318.0], [29.9, 324.0], [30.0, 325.0], [30.1, 332.0], [30.2, 341.0], [30.3, 353.0], [30.4, 359.0], [30.5, 365.0], [30.6, 366.0], [30.7, 371.0], [30.8, 374.0], [30.9, 377.0], [31.0, 379.0], [31.1, 381.0], [31.2, 384.0], [31.3, 385.0], [31.4, 386.0], [31.5, 386.0], [31.6, 387.0], [31.7, 388.0], [31.8, 389.0], [31.9, 391.0], [32.0, 392.0], [32.1, 393.0], [32.2, 394.0], [32.3, 394.0], [32.4, 395.0], [32.5, 396.0], [32.6, 396.0], [32.7, 396.0], [32.8, 397.0], [32.9, 398.0], [33.0, 398.0], [33.1, 399.0], [33.2, 400.0], [33.3, 401.0], [33.4, 402.0], [33.5, 402.0], [33.6, 402.0], [33.7, 403.0], [33.8, 404.0], [33.9, 406.0], [34.0, 407.0], [34.1, 407.0], [34.2, 408.0], [34.3, 408.0], [34.4, 408.0], [34.5, 408.0], [34.6, 409.0], [34.7, 409.0], [34.8, 410.0], [34.9, 411.0], [35.0, 411.0], [35.1, 412.0], [35.2, 413.0], [35.3, 413.0], [35.4, 415.0], [35.5, 415.0], [35.6, 419.0], [35.7, 420.0], [35.8, 422.0], [35.9, 423.0], [36.0, 424.0], [36.1, 424.0], [36.2, 425.0], [36.3, 426.0], [36.4, 427.0], [36.5, 429.0], [36.6, 431.0], [36.7, 432.0], [36.8, 439.0], [36.9, 465.0], [37.0, 465.0], [37.1, 469.0], [37.2, 470.0], [37.3, 472.0], [37.4, 475.0], [37.5, 475.0], [37.6, 477.0], [37.7, 479.0], [37.8, 479.0], [37.9, 480.0], [38.0, 480.0], [38.1, 481.0], [38.2, 481.0], [38.3, 482.0], [38.4, 484.0], [38.5, 485.0], [38.6, 485.0], [38.7, 486.0], [38.8, 486.0], [38.9, 487.0], [39.0, 487.0], [39.1, 487.0], [39.2, 488.0], [39.3, 490.0], [39.4, 491.0], [39.5, 492.0], [39.6, 492.0], [39.7, 493.0], [39.8, 494.0], [39.9, 495.0], [40.0, 495.0], [40.1, 496.0], [40.2, 496.0], [40.3, 496.0], [40.4, 497.0], [40.5, 497.0], [40.6, 498.0], [40.7, 499.0], [40.8, 499.0], [40.9, 501.0], [41.0, 501.0], [41.1, 502.0], [41.2, 503.0], [41.3, 503.0], [41.4, 503.0], [41.5, 504.0], [41.6, 505.0], [41.7, 506.0], [41.8, 507.0], [41.9, 507.0], [42.0, 507.0], [42.1, 508.0], [42.2, 508.0], [42.3, 510.0], [42.4, 512.0], [42.5, 513.0], [42.6, 514.0], [42.7, 515.0], [42.8, 516.0], [42.9, 517.0], [43.0, 518.0], [43.1, 518.0], [43.2, 519.0], [43.3, 519.0], [43.4, 521.0], [43.5, 522.0], [43.6, 523.0], [43.7, 523.0], [43.8, 525.0], [43.9, 529.0], [44.0, 529.0], [44.1, 533.0], [44.2, 536.0], [44.3, 553.0], [44.4, 558.0], [44.5, 563.0], [44.6, 565.0], [44.7, 567.0], [44.8, 570.0], [44.9, 573.0], [45.0, 573.0], [45.1, 574.0], [45.2, 574.0], [45.3, 576.0], [45.4, 578.0], [45.5, 578.0], [45.6, 580.0], [45.7, 580.0], [45.8, 582.0], [45.9, 583.0], [46.0, 583.0], [46.1, 583.0], [46.2, 585.0], [46.3, 586.0], [46.4, 587.0], [46.5, 587.0], [46.6, 588.0], [46.7, 589.0], [46.8, 589.0], [46.9, 589.0], [47.0, 590.0], [47.1, 591.0], [47.2, 593.0], [47.3, 593.0], [47.4, 594.0], [47.5, 594.0], [47.6, 594.0], [47.7, 595.0], [47.8, 596.0], [47.9, 596.0], [48.0, 596.0], [48.1, 597.0], [48.2, 598.0], [48.3, 599.0], [48.4, 599.0], [48.5, 599.0], [48.6, 600.0], [48.7, 601.0], [48.8, 603.0], [48.9, 606.0], [49.0, 607.0], [49.1, 610.0], [49.2, 611.0], [49.3, 613.0], [49.4, 616.0], [49.5, 616.0], [49.6, 623.0], [49.7, 626.0], [49.8, 629.0], [49.9, 632.0], [50.0, 637.0], [50.1, 638.0], [50.2, 648.0], [50.3, 654.0], [50.4, 660.0], [50.5, 660.0], [50.6, 663.0], [50.7, 664.0], [50.8, 667.0], [50.9, 673.0], [51.0, 673.0], [51.1, 677.0], [51.2, 679.0], [51.3, 680.0], [51.4, 684.0], [51.5, 686.0], [51.6, 687.0], [51.7, 688.0], [51.8, 689.0], [51.9, 690.0], [52.0, 690.0], [52.1, 691.0], [52.2, 692.0], [52.3, 695.0], [52.4, 695.0], [52.5, 695.0], [52.6, 697.0], [52.7, 699.0], [52.8, 701.0], [52.9, 701.0], [53.0, 702.0], [53.1, 703.0], [53.2, 706.0], [53.3, 706.0], [53.4, 708.0], [53.5, 708.0], [53.6, 709.0], [53.7, 711.0], [53.8, 713.0], [53.9, 715.0], [54.0, 715.0], [54.1, 717.0], [54.2, 717.0], [54.3, 720.0], [54.4, 721.0], [54.5, 721.0], [54.6, 723.0], [54.7, 724.0], [54.8, 727.0], [54.9, 729.0], [55.0, 729.0], [55.1, 731.0], [55.2, 735.0], [55.3, 736.0], [55.4, 740.0], [55.5, 742.0], [55.6, 751.0], [55.7, 758.0], [55.8, 763.0], [55.9, 764.0], [56.0, 765.0], [56.1, 766.0], [56.2, 769.0], [56.3, 771.0], [56.4, 773.0], [56.5, 774.0], [56.6, 777.0], [56.7, 778.0], [56.8, 779.0], [56.9, 780.0], [57.0, 780.0], [57.1, 781.0], [57.2, 781.0], [57.3, 784.0], [57.4, 787.0], [57.5, 788.0], [57.6, 788.0], [57.7, 789.0], [57.8, 791.0], [57.9, 791.0], [58.0, 792.0], [58.1, 794.0], [58.2, 794.0], [58.3, 795.0], [58.4, 797.0], [58.5, 797.0], [58.6, 798.0], [58.7, 799.0], [58.8, 800.0], [58.9, 801.0], [59.0, 801.0], [59.1, 801.0], [59.2, 802.0], [59.3, 804.0], [59.4, 805.0], [59.5, 805.0], [59.6, 806.0], [59.7, 806.0], [59.8, 807.0], [59.9, 808.0], [60.0, 810.0], [60.1, 810.0], [60.2, 811.0], [60.3, 812.0], [60.4, 812.0], [60.5, 813.0], [60.6, 813.0], [60.7, 815.0], [60.8, 823.0], [60.9, 826.0], [61.0, 829.0], [61.1, 830.0], [61.2, 845.0], [61.3, 852.0], [61.4, 858.0], [61.5, 859.0], [61.6, 862.0], [61.7, 863.0], [61.8, 865.0], [61.9, 867.0], [62.0, 868.0], [62.1, 868.0], [62.2, 872.0], [62.3, 874.0], [62.4, 875.0], [62.5, 875.0], [62.6, 879.0], [62.7, 882.0], [62.8, 887.0], [62.9, 889.0], [63.0, 889.0], [63.1, 890.0], [63.2, 891.0], [63.3, 891.0], [63.4, 892.0], [63.5, 892.0], [63.6, 895.0], [63.7, 897.0], [63.8, 899.0], [63.9, 903.0], [64.0, 903.0], [64.1, 904.0], [64.2, 905.0], [64.3, 906.0], [64.4, 908.0], [64.5, 911.0], [64.6, 914.0], [64.7, 915.0], [64.8, 916.0], [64.9, 917.0], [65.0, 918.0], [65.1, 918.0], [65.2, 920.0], [65.3, 921.0], [65.4, 922.0], [65.5, 923.0], [65.6, 925.0], [65.7, 926.0], [65.8, 927.0], [65.9, 928.0], [66.0, 929.0], [66.1, 931.0], [66.2, 934.0], [66.3, 942.0], [66.4, 960.0], [66.5, 960.0], [66.6, 961.0], [66.7, 967.0], [66.8, 970.0], [66.9, 973.0], [67.0, 975.0], [67.1, 975.0], [67.2, 976.0], [67.3, 978.0], [67.4, 983.0], [67.5, 983.0], [67.6, 983.0], [67.7, 983.0], [67.8, 985.0], [67.9, 986.0], [68.0, 986.0], [68.1, 989.0], [68.2, 989.0], [68.3, 989.0], [68.4, 990.0], [68.5, 991.0], [68.6, 991.0], [68.7, 993.0], [68.8, 995.0], [68.9, 996.0], [69.0, 997.0], [69.1, 999.0], [69.2, 1001.0], [69.3, 1001.0], [69.4, 1002.0], [69.5, 1004.0], [69.6, 1005.0], [69.7, 1009.0], [69.8, 1012.0], [69.9, 1013.0], [70.0, 1014.0], [70.1, 1016.0], [70.2, 1017.0], [70.3, 1021.0], [70.4, 1022.0], [70.5, 1023.0], [70.6, 1024.0], [70.7, 1026.0], [70.8, 1030.0], [70.9, 1031.0], [71.0, 1031.0], [71.1, 1033.0], [71.2, 1037.0], [71.3, 1038.0], [71.4, 1052.0], [71.5, 1053.0], [71.6, 1061.0], [71.7, 1065.0], [71.8, 1070.0], [71.9, 1071.0], [72.0, 1071.0], [72.1, 1072.0], [72.2, 1075.0], [72.3, 1076.0], [72.4, 1078.0], [72.5, 1080.0], [72.6, 1081.0], [72.7, 1083.0], [72.8, 1083.0], [72.9, 1087.0], [73.0, 1088.0], [73.1, 1092.0], [73.2, 1093.0], [73.3, 1096.0], [73.4, 1096.0], [73.5, 1096.0], [73.6, 1098.0], [73.7, 1098.0], [73.8, 1103.0], [73.9, 1106.0], [74.0, 1108.0], [74.1, 1112.0], [74.2, 1113.0], [74.3, 1117.0], [74.4, 1120.0], [74.5, 1123.0], [74.6, 1125.0], [74.7, 1131.0], [74.8, 1138.0], [74.9, 1150.0], [75.0, 1155.0], [75.1, 1164.0], [75.2, 1172.0], [75.3, 1174.0], [75.4, 1175.0], [75.5, 1176.0], [75.6, 1177.0], [75.7, 1178.0], [75.8, 1181.0], [75.9, 1182.0], [76.0, 1184.0], [76.1, 1185.0], [76.2, 1186.0], [76.3, 1189.0], [76.4, 1190.0], [76.5, 1191.0], [76.6, 1192.0], [76.7, 1194.0], [76.8, 1196.0], [76.9, 1198.0], [77.0, 1200.0], [77.1, 1201.0], [77.2, 1205.0], [77.3, 1207.0], [77.4, 1209.0], [77.5, 1213.0], [77.6, 1217.0], [77.7, 1219.0], [77.8, 1237.0], [77.9, 1259.0], [78.0, 1259.0], [78.1, 1263.0], [78.2, 1271.0], [78.3, 1274.0], [78.4, 1279.0], [78.5, 1280.0], [78.6, 1282.0], [78.7, 1283.0], [78.8, 1288.0], [78.9, 1289.0], [79.0, 1292.0], [79.1, 1293.0], [79.2, 1296.0], [79.3, 1297.0], [79.4, 1299.0], [79.5, 1299.0], [79.6, 1305.0], [79.7, 1311.0], [79.8, 1324.0], [79.9, 1357.0], [80.0, 1362.0], [80.1, 1380.0], [80.2, 1384.0], [80.3, 1389.0], [80.4, 1403.0], [80.5, 1407.0], [80.6, 1413.0], [80.7, 1437.0], [80.8, 1453.0], [80.9, 1472.0], [81.0, 1476.0], [81.1, 1484.0], [81.2, 1488.0], [81.3, 1491.0], [81.4, 1494.0], [81.5, 1501.0], [81.6, 1508.0], [81.7, 1509.0], [81.8, 1514.0], [81.9, 1539.0], [82.0, 1541.0], [82.1, 1544.0], [82.2, 1548.0], [82.3, 1553.0], [82.4, 1566.0], [82.5, 1566.0], [82.6, 1571.0], [82.7, 1581.0], [82.8, 1592.0], [82.9, 1597.0], [83.0, 1598.0], [83.1, 1600.0], [83.2, 1619.0], [83.3, 1630.0], [83.4, 1639.0], [83.5, 1644.0], [83.6, 1650.0], [83.7, 1662.0], [83.8, 1672.0], [83.9, 1681.0], [84.0, 1682.0], [84.1, 1688.0], [84.2, 1696.0], [84.3, 1708.0], [84.4, 1732.0], [84.5, 1735.0], [84.6, 1751.0], [84.7, 1755.0], [84.8, 1758.0], [84.9, 1778.0], [85.0, 1780.0], [85.1, 1782.0], [85.2, 1787.0], [85.3, 1797.0], [85.4, 1807.0], [85.5, 1809.0], [85.6, 1845.0], [85.7, 1851.0], [85.8, 1863.0], [85.9, 1869.0], [86.0, 1871.0], [86.1, 1880.0], [86.2, 1892.0], [86.3, 1897.0], [86.4, 1913.0], [86.5, 1917.0], [86.6, 1922.0], [86.7, 1929.0], [86.8, 1930.0], [86.9, 1938.0], [87.0, 1945.0], [87.1, 1965.0], [87.2, 1967.0], [87.3, 1971.0], [87.4, 1987.0], [87.5, 1988.0], [87.6, 1994.0], [87.7, 2018.0], [87.8, 2024.0], [87.9, 2044.0], [88.0, 2047.0], [88.1, 2051.0], [88.2, 2057.0], [88.3, 2070.0], [88.4, 2073.0], [88.5, 2074.0], [88.6, 2080.0], [88.7, 2089.0], [88.8, 2101.0], [88.9, 2107.0], [89.0, 2112.0], [89.1, 2127.0], [89.2, 2147.0], [89.3, 2155.0], [89.4, 2165.0], [89.5, 2167.0], [89.6, 2171.0], [89.7, 2173.0], [89.8, 2176.0], [89.9, 2194.0], [90.0, 2194.0], [90.1, 2211.0], [90.2, 2212.0], [90.3, 2239.0], [90.4, 2243.0], [90.5, 2244.0], [90.6, 2246.0], [90.7, 2251.0], [90.8, 2258.0], [90.9, 2263.0], [91.0, 2288.0], [91.1, 2303.0], [91.2, 2330.0], [91.3, 2351.0], [91.4, 2362.0], [91.5, 2378.0], [91.6, 2389.0], [91.7, 2399.0], [91.8, 2420.0], [91.9, 2443.0], [92.0, 2444.0], [92.1, 2467.0], [92.2, 2479.0], [92.3, 2489.0], [92.4, 2520.0], [92.5, 2527.0], [92.6, 2553.0], [92.7, 2568.0], [92.8, 2592.0], [92.9, 2607.0], [93.0, 2609.0], [93.1, 2627.0], [93.2, 2648.0], [93.3, 2670.0], [93.4, 2673.0], [93.5, 2676.0], [93.6, 2682.0], [93.7, 2698.0], [93.8, 2709.0], [93.9, 2757.0], [94.0, 2759.0], [94.1, 2763.0], [94.2, 2768.0], [94.3, 2773.0], [94.4, 2789.0], [94.5, 2797.0], [94.6, 2804.0], [94.7, 2834.0], [94.8, 2840.0], [94.9, 2880.0], [95.0, 2886.0], [95.1, 2888.0], [95.2, 2890.0], [95.3, 2978.0], [95.4, 2990.0], [95.5, 3036.0], [95.6, 3073.0], [95.7, 3098.0], [95.8, 3145.0], [95.9, 3168.0], [96.0, 3177.0], [96.1, 3192.0], [96.2, 3240.0], [96.3, 3280.0], [96.4, 3284.0], [96.5, 3287.0], [96.6, 3298.0], [96.7, 3335.0], [96.8, 3377.0], [96.9, 3471.0], [97.0, 3489.0], [97.1, 3494.0], [97.2, 3562.0], [97.3, 3577.0], [97.4, 3589.0], [97.5, 3589.0], [97.6, 3618.0], [97.7, 3653.0], [97.8, 3669.0], [97.9, 3699.0], [98.0, 3706.0], [98.1, 3771.0], [98.2, 3812.0], [98.3, 3822.0], [98.4, 3873.0], [98.5, 3879.0], [98.6, 4000.0], [98.7, 4034.0], [98.8, 4121.0], [98.9, 4180.0], [99.0, 4250.0], [99.1, 4415.0], [99.2, 4470.0], [99.3, 4483.0], [99.4, 4836.0], [99.5, 4896.0], [99.6, 4978.0], [99.7, 5485.0], [99.8, 5570.0], [99.9, 5574.0], [100.0, 5974.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[0.0, 5.0], [0.1, 8.0], [0.2, 11.0], [0.3, 12.0], [0.4, 13.0], [0.5, 13.0], [0.6, 13.0], [0.7, 13.0], [0.8, 14.0], [0.9, 15.0], [1.0, 15.0], [1.1, 15.0], [1.2, 16.0], [1.3, 16.0], [1.4, 17.0], [1.5, 17.0], [1.6, 17.0], [1.7, 17.0], [1.8, 17.0], [1.9, 17.0], [2.0, 18.0], [2.1, 18.0], [2.2, 18.0], [2.3, 18.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 19.0], [2.8, 19.0], [2.9, 19.0], [3.0, 19.0], [3.1, 19.0], [3.2, 20.0], [3.3, 20.0], [3.4, 21.0], [3.5, 21.0], [3.6, 22.0], [3.7, 22.0], [3.8, 23.0], [3.9, 23.0], [4.0, 23.0], [4.1, 24.0], [4.2, 24.0], [4.3, 24.0], [4.4, 25.0], [4.5, 25.0], [4.6, 25.0], [4.7, 25.0], [4.8, 26.0], [4.9, 26.0], [5.0, 26.0], [5.1, 26.0], [5.2, 27.0], [5.3, 28.0], [5.4, 28.0], [5.5, 29.0], [5.6, 30.0], [5.7, 31.0], [5.8, 31.0], [5.9, 31.0], [6.0, 31.0], [6.1, 31.0], [6.2, 32.0], [6.3, 32.0], [6.4, 32.0], [6.5, 33.0], [6.6, 33.0], [6.7, 34.0], [6.8, 35.0], [6.9, 36.0], [7.0, 36.0], [7.1, 37.0], [7.2, 37.0], [7.3, 38.0], [7.4, 39.0], [7.5, 41.0], [7.6, 42.0], [7.7, 43.0], [7.8, 44.0], [7.9, 46.0], [8.0, 48.0], [8.1, 51.0], [8.2, 53.0], [8.3, 54.0], [8.4, 56.0], [8.5, 57.0], [8.6, 60.0], [8.7, 65.0], [8.8, 66.0], [8.9, 71.0], [9.0, 77.0], [9.1, 83.0], [9.2, 87.0], [9.3, 93.0], [9.4, 97.0], [9.5, 98.0], [9.6, 99.0], [9.7, 100.0], [9.8, 102.0], [9.9, 105.0], [10.0, 105.0], [10.1, 106.0], [10.2, 108.0], [10.3, 110.0], [10.4, 113.0], [10.5, 114.0], [10.6, 115.0], [10.7, 118.0], [10.8, 120.0], [10.9, 121.0], [11.0, 121.0], [11.1, 122.0], [11.2, 123.0], [11.3, 125.0], [11.4, 130.0], [11.5, 134.0], [11.6, 135.0], [11.7, 137.0], [11.8, 139.0], [11.9, 141.0], [12.0, 151.0], [12.1, 153.0], [12.2, 159.0], [12.3, 162.0], [12.4, 171.0], [12.5, 172.0], [12.6, 174.0], [12.7, 181.0], [12.8, 182.0], [12.9, 183.0], [13.0, 185.0], [13.1, 187.0], [13.2, 188.0], [13.3, 191.0], [13.4, 191.0], [13.5, 193.0], [13.6, 194.0], [13.7, 195.0], [13.8, 196.0], [13.9, 197.0], [14.0, 197.0], [14.1, 198.0], [14.2, 200.0], [14.3, 200.0], [14.4, 201.0], [14.5, 201.0], [14.6, 201.0], [14.7, 203.0], [14.8, 204.0], [14.9, 206.0], [15.0, 206.0], [15.1, 207.0], [15.2, 207.0], [15.3, 208.0], [15.4, 209.0], [15.5, 212.0], [15.6, 212.0], [15.7, 213.0], [15.8, 213.0], [15.9, 213.0], [16.0, 215.0], [16.1, 215.0], [16.2, 216.0], [16.3, 216.0], [16.4, 218.0], [16.5, 220.0], [16.6, 220.0], [16.7, 220.0], [16.8, 221.0], [16.9, 222.0], [17.0, 223.0], [17.1, 223.0], [17.2, 224.0], [17.3, 225.0], [17.4, 226.0], [17.5, 227.0], [17.6, 227.0], [17.7, 230.0], [17.8, 233.0], [17.9, 235.0], [18.0, 239.0], [18.1, 240.0], [18.2, 244.0], [18.3, 248.0], [18.4, 252.0], [18.5, 255.0], [18.6, 256.0], [18.7, 262.0], [18.8, 265.0], [18.9, 269.0], [19.0, 271.0], [19.1, 272.0], [19.2, 275.0], [19.3, 277.0], [19.4, 278.0], [19.5, 278.0], [19.6, 279.0], [19.7, 280.0], [19.8, 282.0], [19.9, 283.0], [20.0, 284.0], [20.1, 285.0], [20.2, 286.0], [20.3, 288.0], [20.4, 289.0], [20.5, 289.0], [20.6, 289.0], [20.7, 290.0], [20.8, 291.0], [20.9, 291.0], [21.0, 291.0], [21.1, 292.0], [21.2, 294.0], [21.3, 294.0], [21.4, 295.0], [21.5, 295.0], [21.6, 296.0], [21.7, 298.0], [21.8, 299.0], [21.9, 299.0], [22.0, 300.0], [22.1, 302.0], [22.2, 303.0], [22.3, 304.0], [22.4, 306.0], [22.5, 306.0], [22.6, 308.0], [22.7, 310.0], [22.8, 310.0], [22.9, 312.0], [23.0, 312.0], [23.1, 315.0], [23.2, 318.0], [23.3, 319.0], [23.4, 323.0], [23.5, 326.0], [23.6, 328.0], [23.7, 329.0], [23.8, 337.0], [23.9, 367.0], [24.0, 367.0], [24.1, 373.0], [24.2, 378.0], [24.3, 381.0], [24.4, 386.0], [24.5, 387.0], [24.6, 388.0], [24.7, 390.0], [24.8, 390.0], [24.9, 391.0], [25.0, 392.0], [25.1, 393.0], [25.2, 393.0], [25.3, 394.0], [25.4, 395.0], [25.5, 396.0], [25.6, 399.0], [25.7, 400.0], [25.8, 404.0], [25.9, 411.0], [26.0, 411.0], [26.1, 414.0], [26.2, 415.0], [26.3, 417.0], [26.4, 421.0], [26.5, 421.0], [26.6, 424.0], [26.7, 426.0], [26.8, 427.0], [26.9, 431.0], [27.0, 431.0], [27.1, 434.0], [27.2, 435.0], [27.3, 438.0], [27.4, 444.0], [27.5, 445.0], [27.6, 467.0], [27.7, 471.0], [27.8, 473.0], [27.9, 476.0], [28.0, 476.0], [28.1, 477.0], [28.2, 477.0], [28.3, 478.0], [28.4, 482.0], [28.5, 482.0], [28.6, 483.0], [28.7, 484.0], [28.8, 485.0], [28.9, 486.0], [29.0, 486.0], [29.1, 488.0], [29.2, 489.0], [29.3, 490.0], [29.4, 490.0], [29.5, 491.0], [29.6, 491.0], [29.7, 492.0], [29.8, 492.0], [29.9, 494.0], [30.0, 494.0], [30.1, 495.0], [30.2, 496.0], [30.3, 497.0], [30.4, 498.0], [30.5, 498.0], [30.6, 498.0], [30.7, 499.0], [30.8, 500.0], [30.9, 500.0], [31.0, 501.0], [31.1, 501.0], [31.2, 502.0], [31.3, 502.0], [31.4, 503.0], [31.5, 503.0], [31.6, 503.0], [31.7, 504.0], [31.8, 505.0], [31.9, 505.0], [32.0, 506.0], [32.1, 507.0], [32.2, 507.0], [32.3, 508.0], [32.4, 508.0], [32.5, 508.0], [32.6, 509.0], [32.7, 509.0], [32.8, 510.0], [32.9, 511.0], [33.0, 511.0], [33.1, 511.0], [33.2, 511.0], [33.3, 512.0], [33.4, 513.0], [33.5, 513.0], [33.6, 513.0], [33.7, 517.0], [33.8, 517.0], [33.9, 518.0], [34.0, 518.0], [34.1, 521.0], [34.2, 521.0], [34.3, 522.0], [34.4, 522.0], [34.5, 523.0], [34.6, 526.0], [34.7, 527.0], [34.8, 528.0], [34.9, 528.0], [35.0, 529.0], [35.1, 529.0], [35.2, 532.0], [35.3, 534.0], [35.4, 535.0], [35.5, 542.0], [35.6, 557.0], [35.7, 561.0], [35.8, 563.0], [35.9, 566.0], [36.0, 567.0], [36.1, 568.0], [36.2, 571.0], [36.3, 572.0], [36.4, 573.0], [36.5, 573.0], [36.6, 576.0], [36.7, 577.0], [36.8, 578.0], [36.9, 579.0], [37.0, 579.0], [37.1, 580.0], [37.2, 581.0], [37.3, 581.0], [37.4, 583.0], [37.5, 583.0], [37.6, 584.0], [37.7, 585.0], [37.8, 588.0], [37.9, 588.0], [38.0, 588.0], [38.1, 589.0], [38.2, 590.0], [38.3, 590.0], [38.4, 592.0], [38.5, 592.0], [38.6, 593.0], [38.7, 593.0], [38.8, 594.0], [38.9, 595.0], [39.0, 595.0], [39.1, 596.0], [39.2, 596.0], [39.3, 597.0], [39.4, 597.0], [39.5, 597.0], [39.6, 598.0], [39.7, 598.0], [39.8, 599.0], [39.9, 600.0], [40.0, 600.0], [40.1, 600.0], [40.2, 601.0], [40.3, 602.0], [40.4, 602.0], [40.5, 603.0], [40.6, 604.0], [40.7, 604.0], [40.8, 604.0], [40.9, 604.0], [41.0, 604.0], [41.1, 605.0], [41.2, 605.0], [41.3, 606.0], [41.4, 606.0], [41.5, 607.0], [41.6, 609.0], [41.7, 609.0], [41.8, 609.0], [41.9, 610.0], [42.0, 610.0], [42.1, 612.0], [42.2, 613.0], [42.3, 616.0], [42.4, 618.0], [42.5, 619.0], [42.6, 620.0], [42.7, 621.0], [42.8, 625.0], [42.9, 627.0], [43.0, 627.0], [43.1, 630.0], [43.2, 634.0], [43.3, 648.0], [43.4, 658.0], [43.5, 663.0], [43.6, 666.0], [43.7, 671.0], [43.8, 671.0], [43.9, 674.0], [44.0, 675.0], [44.1, 675.0], [44.2, 676.0], [44.3, 679.0], [44.4, 681.0], [44.5, 684.0], [44.6, 687.0], [44.7, 688.0], [44.8, 690.0], [44.9, 695.0], [45.0, 696.0], [45.1, 697.0], [45.2, 700.0], [45.3, 704.0], [45.4, 705.0], [45.5, 706.0], [45.6, 711.0], [45.7, 712.0], [45.8, 714.0], [45.9, 715.0], [46.0, 716.0], [46.1, 721.0], [46.2, 722.0], [46.3, 729.0], [46.4, 732.0], [46.5, 735.0], [46.6, 739.0], [46.7, 740.0], [46.8, 761.0], [46.9, 766.0], [47.0, 767.0], [47.1, 770.0], [47.2, 773.0], [47.3, 774.0], [47.4, 779.0], [47.5, 779.0], [47.6, 781.0], [47.7, 783.0], [47.8, 784.0], [47.9, 785.0], [48.0, 785.0], [48.1, 786.0], [48.2, 788.0], [48.3, 789.0], [48.4, 789.0], [48.5, 791.0], [48.6, 793.0], [48.7, 794.0], [48.8, 794.0], [48.9, 795.0], [49.0, 796.0], [49.1, 798.0], [49.2, 799.0], [49.3, 800.0], [49.4, 801.0], [49.5, 801.0], [49.6, 804.0], [49.7, 804.0], [49.8, 805.0], [49.9, 805.0], [50.0, 805.0], [50.1, 809.0], [50.2, 810.0], [50.3, 810.0], [50.4, 811.0], [50.5, 812.0], [50.6, 814.0], [50.7, 815.0], [50.8, 818.0], [50.9, 818.0], [51.0, 818.0], [51.1, 818.0], [51.2, 820.0], [51.3, 821.0], [51.4, 825.0], [51.5, 826.0], [51.6, 826.0], [51.7, 826.0], [51.8, 828.0], [51.9, 829.0], [52.0, 830.0], [52.1, 835.0], [52.2, 840.0], [52.3, 841.0], [52.4, 847.0], [52.5, 850.0], [52.6, 855.0], [52.7, 861.0], [52.8, 863.0], [52.9, 866.0], [53.0, 868.0], [53.1, 871.0], [53.2, 875.0], [53.3, 878.0], [53.4, 879.0], [53.5, 880.0], [53.6, 880.0], [53.7, 881.0], [53.8, 883.0], [53.9, 887.0], [54.0, 889.0], [54.1, 890.0], [54.2, 891.0], [54.3, 894.0], [54.4, 894.0], [54.5, 895.0], [54.6, 900.0], [54.7, 900.0], [54.8, 902.0], [54.9, 903.0], [55.0, 904.0], [55.1, 905.0], [55.2, 908.0], [55.3, 912.0], [55.4, 914.0], [55.5, 915.0], [55.6, 916.0], [55.7, 917.0], [55.8, 919.0], [55.9, 923.0], [56.0, 923.0], [56.1, 926.0], [56.2, 927.0], [56.3, 928.0], [56.4, 933.0], [56.5, 943.0], [56.6, 945.0], [56.7, 954.0], [56.8, 955.0], [56.9, 967.0], [57.0, 969.0], [57.1, 972.0], [57.2, 973.0], [57.3, 977.0], [57.4, 980.0], [57.5, 981.0], [57.6, 982.0], [57.7, 983.0], [57.8, 984.0], [57.9, 984.0], [58.0, 985.0], [58.1, 987.0], [58.2, 988.0], [58.3, 988.0], [58.4, 989.0], [58.5, 990.0], [58.6, 991.0], [58.7, 992.0], [58.8, 995.0], [58.9, 995.0], [59.0, 995.0], [59.1, 997.0], [59.2, 998.0], [59.3, 1001.0], [59.4, 1001.0], [59.5, 1001.0], [59.6, 1003.0], [59.7, 1004.0], [59.8, 1004.0], [59.9, 1005.0], [60.0, 1007.0], [60.1, 1008.0], [60.2, 1010.0], [60.3, 1011.0], [60.4, 1013.0], [60.5, 1013.0], [60.6, 1014.0], [60.7, 1015.0], [60.8, 1015.0], [60.9, 1017.0], [61.0, 1019.0], [61.1, 1021.0], [61.2, 1024.0], [61.3, 1026.0], [61.4, 1030.0], [61.5, 1030.0], [61.6, 1034.0], [61.7, 1038.0], [61.8, 1042.0], [61.9, 1042.0], [62.0, 1049.0], [62.1, 1053.0], [62.2, 1056.0], [62.3, 1062.0], [62.4, 1068.0], [62.5, 1070.0], [62.6, 1076.0], [62.7, 1077.0], [62.8, 1080.0], [62.9, 1082.0], [63.0, 1082.0], [63.1, 1083.0], [63.2, 1084.0], [63.3, 1088.0], [63.4, 1089.0], [63.5, 1090.0], [63.6, 1090.0], [63.7, 1092.0], [63.8, 1095.0], [63.9, 1096.0], [64.0, 1097.0], [64.1, 1097.0], [64.2, 1099.0], [64.3, 1101.0], [64.4, 1102.0], [64.5, 1102.0], [64.6, 1103.0], [64.7, 1105.0], [64.8, 1106.0], [64.9, 1107.0], [65.0, 1107.0], [65.1, 1108.0], [65.2, 1110.0], [65.3, 1112.0], [65.4, 1114.0], [65.5, 1119.0], [65.6, 1120.0], [65.7, 1124.0], [65.8, 1125.0], [65.9, 1126.0], [66.0, 1128.0], [66.1, 1130.0], [66.2, 1132.0], [66.3, 1138.0], [66.4, 1141.0], [66.5, 1146.0], [66.6, 1153.0], [66.7, 1161.0], [66.8, 1166.0], [66.9, 1169.0], [67.0, 1169.0], [67.1, 1172.0], [67.2, 1173.0], [67.3, 1175.0], [67.4, 1176.0], [67.5, 1180.0], [67.6, 1187.0], [67.7, 1188.0], [67.8, 1193.0], [67.9, 1195.0], [68.0, 1197.0], [68.1, 1200.0], [68.2, 1201.0], [68.3, 1204.0], [68.4, 1205.0], [68.5, 1206.0], [68.6, 1212.0], [68.7, 1214.0], [68.8, 1216.0], [68.9, 1219.0], [69.0, 1219.0], [69.1, 1235.0], [69.2, 1255.0], [69.3, 1266.0], [69.4, 1269.0], [69.5, 1270.0], [69.6, 1271.0], [69.7, 1281.0], [69.8, 1283.0], [69.9, 1284.0], [70.0, 1286.0], [70.1, 1291.0], [70.2, 1294.0], [70.3, 1299.0], [70.4, 1300.0], [70.5, 1300.0], [70.6, 1305.0], [70.7, 1307.0], [70.8, 1308.0], [70.9, 1311.0], [71.0, 1313.0], [71.1, 1314.0], [71.2, 1320.0], [71.3, 1335.0], [71.4, 1338.0], [71.5, 1339.0], [71.6, 1342.0], [71.7, 1344.0], [71.8, 1369.0], [71.9, 1373.0], [72.0, 1376.0], [72.1, 1385.0], [72.2, 1390.0], [72.3, 1395.0], [72.4, 1399.0], [72.5, 1402.0], [72.6, 1408.0], [72.7, 1413.0], [72.8, 1420.0], [72.9, 1433.0], [73.0, 1456.0], [73.1, 1466.0], [73.2, 1475.0], [73.3, 1483.0], [73.4, 1489.0], [73.5, 1492.0], [73.6, 1501.0], [73.7, 1501.0], [73.8, 1503.0], [73.9, 1507.0], [74.0, 1508.0], [74.1, 1516.0], [74.2, 1517.0], [74.3, 1528.0], [74.4, 1532.0], [74.5, 1537.0], [74.6, 1541.0], [74.7, 1552.0], [74.8, 1564.0], [74.9, 1570.0], [75.0, 1577.0], [75.1, 1586.0], [75.2, 1591.0], [75.3, 1599.0], [75.4, 1617.0], [75.5, 1628.0], [75.6, 1632.0], [75.7, 1638.0], [75.8, 1658.0], [75.9, 1666.0], [76.0, 1700.0], [76.1, 1701.0], [76.2, 1725.0], [76.3, 1736.0], [76.4, 1737.0], [76.5, 1748.0], [76.6, 1767.0], [76.7, 1776.0], [76.8, 1791.0], [76.9, 1794.0], [77.0, 1796.0], [77.1, 1801.0], [77.2, 1803.0], [77.3, 1816.0], [77.4, 1829.0], [77.5, 1845.0], [77.6, 1887.0], [77.7, 1906.0], [77.8, 1927.0], [77.9, 1941.0], [78.0, 1947.0], [78.1, 1974.0], [78.2, 1990.0], [78.3, 1996.0], [78.4, 1998.0], [78.5, 2006.0], [78.6, 2014.0], [78.7, 2031.0], [78.8, 2042.0], [78.9, 2070.0], [79.0, 2073.0], [79.1, 2083.0], [79.2, 2087.0], [79.3, 2093.0], [79.4, 2101.0], [79.5, 2102.0], [79.6, 2106.0], [79.7, 2108.0], [79.8, 2114.0], [79.9, 2127.0], [80.0, 2138.0], [80.1, 2151.0], [80.2, 2157.0], [80.3, 2163.0], [80.4, 2172.0], [80.5, 2174.0], [80.6, 2200.0], [80.7, 2216.0], [80.8, 2229.0], [80.9, 2258.0], [81.0, 2261.0], [81.1, 2263.0], [81.2, 2264.0], [81.3, 2292.0], [81.4, 2316.0], [81.5, 2319.0], [81.6, 2346.0], [81.7, 2360.0], [81.8, 2382.0], [81.9, 2395.0], [82.0, 2398.0], [82.1, 2412.0], [82.2, 2439.0], [82.3, 2463.0], [82.4, 2491.0], [82.5, 2501.0], [82.6, 2572.0], [82.7, 2595.0], [82.8, 2623.0], [82.9, 2645.0], [83.0, 2645.0], [83.1, 2672.0], [83.2, 2699.0], [83.3, 2706.0], [83.4, 2715.0], [83.5, 2716.0], [83.6, 2782.0], [83.7, 2804.0], [83.8, 2842.0], [83.9, 2868.0], [84.0, 2876.0], [84.1, 2890.0], [84.2, 2945.0], [84.3, 2981.0], [84.4, 3014.0], [84.5, 3035.0], [84.6, 3071.0], [84.7, 3087.0], [84.8, 3136.0], [84.9, 3152.0], [85.0, 3172.0], [85.1, 3197.0], [85.2, 3210.0], [85.3, 3222.0], [85.4, 3277.0], [85.5, 3287.0], [85.6, 3300.0], [85.7, 3345.0], [85.8, 3379.0], [85.9, 3406.0], [86.0, 3438.0], [86.1, 3474.0], [86.2, 3504.0], [86.3, 3615.0], [86.4, 3686.0], [86.5, 3721.0], [86.6, 3792.0], [86.7, 3821.0], [86.8, 3830.0], [86.9, 3858.0], [87.0, 3912.0], [87.1, 4016.0], [87.2, 4039.0], [87.3, 4087.0], [87.4, 4107.0], [87.5, 4178.0], [87.6, 4204.0], [87.7, 4446.0], [87.8, 4491.0], [87.9, 4548.0], [88.0, 4666.0], [88.1, 4705.0], [88.2, 4846.0], [88.3, 4872.0], [88.4, 4912.0], [88.5, 4967.0], [88.6, 5016.0], [88.7, 5070.0], [88.8, 5102.0], [88.9, 5304.0], [89.0, 5500.0], [89.1, 5549.0], [89.2, 5692.0], [89.3, 5816.0], [89.4, 5956.0], [89.5, 6070.0], [89.6, 6806.0], [89.7, 7626.0], [89.8, 8287.0], [89.9, 8593.0], [90.0, 8862.0], [90.1, 8943.0], [90.2, 9463.0], [90.3, 10301.0], [90.4, 11645.0], [90.5, 11696.0], [90.6, 11743.0], [90.7, 11811.0], [90.8, 11816.0], [90.9, 11831.0], [91.0, 11840.0], [91.1, 11888.0], [91.2, 11915.0], [91.3, 11929.0], [91.4, 11984.0], [91.5, 12008.0], [91.6, 12045.0], [91.7, 12376.0], [91.8, 12521.0], [91.9, 12528.0], [92.0, 12609.0], [92.1, 12614.0], [92.2, 12786.0], [92.3, 12901.0], [92.4, 13009.0], [92.5, 13039.0], [92.6, 13414.0], [92.7, 13474.0], [92.8, 13506.0], [92.9, 13624.0], [93.0, 13641.0], [93.1, 13684.0], [93.2, 14210.0], [93.3, 14330.0], [93.4, 14510.0], [93.5, 14534.0], [93.6, 14895.0], [93.7, 14933.0], [93.8, 15704.0], [93.9, 15775.0], [94.0, 15888.0], [94.1, 15945.0], [94.2, 16493.0], [94.3, 16498.0], [94.4, 16574.0], [94.5, 16600.0], [94.6, 17440.0], [94.7, 17684.0], [94.8, 18524.0], [94.9, 19176.0], [95.0, 19199.0], [95.1, 20005.0], [95.2, 20092.0], [95.3, 20156.0], [95.4, 20177.0], [95.5, 20193.0], [95.6, 20212.0], [95.7, 20272.0], [95.8, 20296.0], [95.9, 20300.0], [96.0, 20314.0], [96.1, 20322.0], [96.2, 20391.0], [96.3, 20425.0], [96.4, 20502.0], [96.5, 20561.0], [96.6, 20584.0], [96.7, 20608.0], [96.8, 20669.0], [96.9, 20758.0], [97.0, 20768.0], [97.1, 20892.0], [97.2, 20906.0], [97.3, 20989.0], [97.4, 21045.0], [97.5, 21067.0], [97.6, 21080.0], [97.7, 21106.0], [97.8, 21123.0], [97.9, 21297.0], [98.0, 21370.0], [98.1, 21516.0], [98.2, 21599.0], [98.3, 21712.0], [98.4, 21719.0], [98.5, 21742.0], [98.6, 21777.0], [98.7, 21815.0], [98.8, 22096.0], [98.9, 22178.0], [99.0, 22184.0], [99.1, 22204.0], [99.2, 22276.0], [99.3, 22391.0], [99.4, 22415.0], [99.5, 22423.0], [99.6, 22672.0], [99.7, 22807.0], [99.8, 23852.0], [99.9, 25306.0], [100.0, 26647.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[0.0, 6.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 7.0], [1.1, 7.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 8.0], [1.9, 8.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 11.0], [3.4, 11.0], [3.5, 11.0], [3.6, 11.0], [3.7, 11.0], [3.8, 12.0], [3.9, 12.0], [4.0, 12.0], [4.1, 12.0], [4.2, 12.0], [4.3, 12.0], [4.4, 13.0], [4.5, 13.0], [4.6, 13.0], [4.7, 14.0], [4.8, 14.0], [4.9, 14.0], [5.0, 14.0], [5.1, 14.0], [5.2, 14.0], [5.3, 14.0], [5.4, 15.0], [5.5, 15.0], [5.6, 15.0], [5.7, 15.0], [5.8, 15.0], [5.9, 16.0], [6.0, 16.0], [6.1, 17.0], [6.2, 17.0], [6.3, 17.0], [6.4, 18.0], [6.5, 19.0], [6.6, 19.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 20.0], [7.1, 21.0], [7.2, 21.0], [7.3, 22.0], [7.4, 22.0], [7.5, 22.0], [7.6, 22.0], [7.7, 23.0], [7.8, 23.0], [7.9, 23.0], [8.0, 23.0], [8.1, 24.0], [8.2, 24.0], [8.3, 25.0], [8.4, 27.0], [8.5, 28.0], [8.6, 28.0], [8.7, 29.0], [8.8, 30.0], [8.9, 31.0], [9.0, 31.0], [9.1, 31.0], [9.2, 33.0], [9.3, 33.0], [9.4, 36.0], [9.5, 36.0], [9.6, 37.0], [9.7, 38.0], [9.8, 40.0], [9.9, 46.0], [10.0, 49.0], [10.1, 51.0], [10.2, 51.0], [10.3, 53.0], [10.4, 56.0], [10.5, 60.0], [10.6, 60.0], [10.7, 66.0], [10.8, 67.0], [10.9, 71.0], [11.0, 75.0], [11.1, 77.0], [11.2, 78.0], [11.3, 79.0], [11.4, 80.0], [11.5, 82.0], [11.6, 82.0], [11.7, 83.0], [11.8, 84.0], [11.9, 87.0], [12.0, 89.0], [12.1, 89.0], [12.2, 89.0], [12.3, 92.0], [12.4, 94.0], [12.5, 96.0], [12.6, 96.0], [12.7, 97.0], [12.8, 98.0], [12.9, 99.0], [13.0, 102.0], [13.1, 102.0], [13.2, 103.0], [13.3, 104.0], [13.4, 104.0], [13.5, 105.0], [13.6, 106.0], [13.7, 107.0], [13.8, 109.0], [13.9, 111.0], [14.0, 114.0], [14.1, 114.0], [14.2, 116.0], [14.3, 116.0], [14.4, 117.0], [14.5, 118.0], [14.6, 120.0], [14.7, 121.0], [14.8, 122.0], [14.9, 124.0], [15.0, 124.0], [15.1, 125.0], [15.2, 126.0], [15.3, 128.0], [15.4, 130.0], [15.5, 132.0], [15.6, 133.0], [15.7, 136.0], [15.8, 137.0], [15.9, 150.0], [16.0, 157.0], [16.1, 159.0], [16.2, 163.0], [16.3, 164.0], [16.4, 164.0], [16.5, 170.0], [16.6, 170.0], [16.7, 174.0], [16.8, 174.0], [16.9, 177.0], [17.0, 179.0], [17.1, 179.0], [17.2, 180.0], [17.3, 181.0], [17.4, 185.0], [17.5, 187.0], [17.6, 187.0], [17.7, 188.0], [17.8, 189.0], [17.9, 190.0], [18.0, 190.0], [18.1, 190.0], [18.2, 191.0], [18.3, 191.0], [18.4, 191.0], [18.5, 192.0], [18.6, 192.0], [18.7, 192.0], [18.8, 193.0], [18.9, 195.0], [19.0, 195.0], [19.1, 196.0], [19.2, 196.0], [19.3, 197.0], [19.4, 198.0], [19.5, 199.0], [19.6, 199.0], [19.7, 200.0], [19.8, 200.0], [19.9, 201.0], [20.0, 201.0], [20.1, 201.0], [20.2, 202.0], [20.3, 203.0], [20.4, 204.0], [20.5, 204.0], [20.6, 204.0], [20.7, 204.0], [20.8, 205.0], [20.9, 206.0], [21.0, 208.0], [21.1, 208.0], [21.2, 209.0], [21.3, 210.0], [21.4, 210.0], [21.5, 211.0], [21.6, 211.0], [21.7, 213.0], [21.8, 213.0], [21.9, 213.0], [22.0, 214.0], [22.1, 214.0], [22.2, 215.0], [22.3, 217.0], [22.4, 218.0], [22.5, 219.0], [22.6, 221.0], [22.7, 222.0], [22.8, 225.0], [22.9, 237.0], [23.0, 253.0], [23.1, 270.0], [23.2, 272.0], [23.3, 273.0], [23.4, 275.0], [23.5, 278.0], [23.6, 279.0], [23.7, 280.0], [23.8, 282.0], [23.9, 284.0], [24.0, 287.0], [24.1, 290.0], [24.2, 291.0], [24.3, 293.0], [24.4, 296.0], [24.5, 296.0], [24.6, 297.0], [24.7, 297.0], [24.8, 299.0], [24.9, 301.0], [25.0, 301.0], [25.1, 304.0], [25.2, 305.0], [25.3, 310.0], [25.4, 311.0], [25.5, 312.0], [25.6, 314.0], [25.7, 316.0], [25.8, 320.0], [25.9, 322.0], [26.0, 323.0], [26.1, 326.0], [26.2, 332.0], [26.3, 333.0], [26.4, 351.0], [26.5, 357.0], [26.6, 363.0], [26.7, 372.0], [26.8, 377.0], [26.9, 379.0], [27.0, 381.0], [27.1, 382.0], [27.2, 385.0], [27.3, 386.0], [27.4, 388.0], [27.5, 390.0], [27.6, 390.0], [27.7, 391.0], [27.8, 392.0], [27.9, 392.0], [28.0, 392.0], [28.1, 394.0], [28.2, 396.0], [28.3, 396.0], [28.4, 396.0], [28.5, 397.0], [28.6, 399.0], [28.7, 401.0], [28.8, 402.0], [28.9, 404.0], [29.0, 405.0], [29.1, 406.0], [29.2, 406.0], [29.3, 407.0], [29.4, 407.0], [29.5, 408.0], [29.6, 409.0], [29.7, 410.0], [29.8, 410.0], [29.9, 412.0], [30.0, 412.0], [30.1, 412.0], [30.2, 414.0], [30.3, 415.0], [30.4, 418.0], [30.5, 418.0], [30.6, 419.0], [30.7, 420.0], [30.8, 420.0], [30.9, 420.0], [31.0, 421.0], [31.1, 422.0], [31.2, 425.0], [31.3, 427.0], [31.4, 428.0], [31.5, 429.0], [31.6, 430.0], [31.7, 431.0], [31.8, 434.0], [31.9, 437.0], [32.0, 438.0], [32.1, 452.0], [32.2, 460.0], [32.3, 462.0], [32.4, 468.0], [32.5, 469.0], [32.6, 475.0], [32.7, 477.0], [32.8, 478.0], [32.9, 479.0], [33.0, 480.0], [33.1, 483.0], [33.2, 484.0], [33.3, 486.0], [33.4, 487.0], [33.5, 487.0], [33.6, 488.0], [33.7, 489.0], [33.8, 490.0], [33.9, 490.0], [34.0, 491.0], [34.1, 491.0], [34.2, 492.0], [34.3, 492.0], [34.4, 493.0], [34.5, 493.0], [34.6, 494.0], [34.7, 496.0], [34.8, 496.0], [34.9, 496.0], [35.0, 496.0], [35.1, 497.0], [35.2, 498.0], [35.3, 498.0], [35.4, 499.0], [35.5, 499.0], [35.6, 499.0], [35.7, 500.0], [35.8, 500.0], [35.9, 500.0], [36.0, 501.0], [36.1, 501.0], [36.2, 501.0], [36.3, 502.0], [36.4, 502.0], [36.5, 502.0], [36.6, 503.0], [36.7, 503.0], [36.8, 503.0], [36.9, 504.0], [37.0, 504.0], [37.1, 505.0], [37.2, 505.0], [37.3, 506.0], [37.4, 506.0], [37.5, 507.0], [37.6, 508.0], [37.7, 509.0], [37.8, 510.0], [37.9, 510.0], [38.0, 510.0], [38.1, 511.0], [38.2, 512.0], [38.3, 513.0], [38.4, 513.0], [38.5, 513.0], [38.6, 514.0], [38.7, 515.0], [38.8, 515.0], [38.9, 517.0], [39.0, 518.0], [39.1, 520.0], [39.2, 521.0], [39.3, 522.0], [39.4, 523.0], [39.5, 523.0], [39.6, 524.0], [39.7, 526.0], [39.8, 528.0], [39.9, 532.0], [40.0, 533.0], [40.1, 538.0], [40.2, 562.0], [40.3, 566.0], [40.4, 569.0], [40.5, 570.0], [40.6, 572.0], [40.7, 574.0], [40.8, 574.0], [40.9, 575.0], [41.0, 575.0], [41.1, 576.0], [41.2, 577.0], [41.3, 577.0], [41.4, 580.0], [41.5, 580.0], [41.6, 581.0], [41.7, 582.0], [41.8, 584.0], [41.9, 586.0], [42.0, 588.0], [42.1, 588.0], [42.2, 588.0], [42.3, 590.0], [42.4, 590.0], [42.5, 592.0], [42.6, 593.0], [42.7, 594.0], [42.8, 595.0], [42.9, 596.0], [43.0, 596.0], [43.1, 597.0], [43.2, 599.0], [43.3, 601.0], [43.4, 601.0], [43.5, 602.0], [43.6, 603.0], [43.7, 604.0], [43.8, 606.0], [43.9, 608.0], [44.0, 608.0], [44.1, 609.0], [44.2, 611.0], [44.3, 612.0], [44.4, 616.0], [44.5, 617.0], [44.6, 618.0], [44.7, 619.0], [44.8, 621.0], [44.9, 624.0], [45.0, 626.0], [45.1, 627.0], [45.2, 631.0], [45.3, 655.0], [45.4, 670.0], [45.5, 673.0], [45.6, 674.0], [45.7, 678.0], [45.8, 680.0], [45.9, 683.0], [46.0, 684.0], [46.1, 685.0], [46.2, 686.0], [46.3, 687.0], [46.4, 688.0], [46.5, 690.0], [46.6, 693.0], [46.7, 694.0], [46.8, 697.0], [46.9, 697.0], [47.0, 698.0], [47.1, 698.0], [47.2, 699.0], [47.3, 699.0], [47.4, 701.0], [47.5, 701.0], [47.6, 703.0], [47.7, 704.0], [47.8, 706.0], [47.9, 708.0], [48.0, 708.0], [48.1, 709.0], [48.2, 714.0], [48.3, 715.0], [48.4, 716.0], [48.5, 717.0], [48.6, 721.0], [48.7, 726.0], [48.8, 730.0], [48.9, 731.0], [49.0, 733.0], [49.1, 743.0], [49.2, 748.0], [49.3, 755.0], [49.4, 764.0], [49.5, 767.0], [49.6, 767.0], [49.7, 771.0], [49.8, 776.0], [49.9, 778.0], [50.0, 778.0], [50.1, 778.0], [50.2, 779.0], [50.3, 780.0], [50.4, 782.0], [50.5, 783.0], [50.6, 786.0], [50.7, 786.0], [50.8, 787.0], [50.9, 789.0], [51.0, 789.0], [51.1, 790.0], [51.2, 791.0], [51.3, 792.0], [51.4, 793.0], [51.5, 793.0], [51.6, 794.0], [51.7, 795.0], [51.8, 797.0], [51.9, 798.0], [52.0, 799.0], [52.1, 799.0], [52.2, 800.0], [52.3, 801.0], [52.4, 801.0], [52.5, 802.0], [52.6, 802.0], [52.7, 803.0], [52.8, 804.0], [52.9, 805.0], [53.0, 805.0], [53.1, 806.0], [53.2, 807.0], [53.3, 808.0], [53.4, 811.0], [53.5, 812.0], [53.6, 812.0], [53.7, 815.0], [53.8, 815.0], [53.9, 816.0], [54.0, 816.0], [54.1, 818.0], [54.2, 818.0], [54.3, 820.0], [54.4, 821.0], [54.5, 821.0], [54.6, 822.0], [54.7, 824.0], [54.8, 828.0], [54.9, 829.0], [55.0, 830.0], [55.1, 832.0], [55.2, 833.0], [55.3, 840.0], [55.4, 843.0], [55.5, 846.0], [55.6, 850.0], [55.7, 858.0], [55.8, 862.0], [55.9, 867.0], [56.0, 867.0], [56.1, 868.0], [56.2, 875.0], [56.3, 878.0], [56.4, 882.0], [56.5, 883.0], [56.6, 884.0], [56.7, 885.0], [56.8, 888.0], [56.9, 890.0], [57.0, 892.0], [57.1, 895.0], [57.2, 897.0], [57.3, 898.0], [57.4, 902.0], [57.5, 902.0], [57.6, 903.0], [57.7, 904.0], [57.8, 905.0], [57.9, 906.0], [58.0, 906.0], [58.1, 908.0], [58.2, 910.0], [58.3, 911.0], [58.4, 912.0], [58.5, 912.0], [58.6, 914.0], [58.7, 916.0], [58.8, 924.0], [58.9, 925.0], [59.0, 927.0], [59.1, 932.0], [59.2, 935.0], [59.3, 937.0], [59.4, 939.0], [59.5, 940.0], [59.6, 943.0], [59.7, 952.0], [59.8, 957.0], [59.9, 960.0], [60.0, 964.0], [60.1, 965.0], [60.2, 966.0], [60.3, 968.0], [60.4, 971.0], [60.5, 972.0], [60.6, 974.0], [60.7, 975.0], [60.8, 976.0], [60.9, 976.0], [61.0, 977.0], [61.1, 980.0], [61.2, 981.0], [61.3, 983.0], [61.4, 983.0], [61.5, 984.0], [61.6, 986.0], [61.7, 988.0], [61.8, 988.0], [61.9, 990.0], [62.0, 991.0], [62.1, 992.0], [62.2, 993.0], [62.3, 994.0], [62.4, 994.0], [62.5, 995.0], [62.6, 999.0], [62.7, 1001.0], [62.8, 1002.0], [62.9, 1004.0], [63.0, 1005.0], [63.1, 1006.0], [63.2, 1008.0], [63.3, 1008.0], [63.4, 1009.0], [63.5, 1009.0], [63.6, 1012.0], [63.7, 1014.0], [63.8, 1017.0], [63.9, 1018.0], [64.0, 1018.0], [64.1, 1019.0], [64.2, 1019.0], [64.3, 1024.0], [64.4, 1028.0], [64.5, 1029.0], [64.6, 1030.0], [64.7, 1036.0], [64.8, 1039.0], [64.9, 1056.0], [65.0, 1059.0], [65.1, 1061.0], [65.2, 1064.0], [65.3, 1067.0], [65.4, 1069.0], [65.5, 1071.0], [65.6, 1074.0], [65.7, 1075.0], [65.8, 1076.0], [65.9, 1077.0], [66.0, 1079.0], [66.1, 1082.0], [66.2, 1082.0], [66.3, 1082.0], [66.4, 1084.0], [66.5, 1088.0], [66.6, 1092.0], [66.7, 1093.0], [66.8, 1093.0], [66.9, 1095.0], [67.0, 1095.0], [67.1, 1096.0], [67.2, 1096.0], [67.3, 1097.0], [67.4, 1098.0], [67.5, 1098.0], [67.6, 1099.0], [67.7, 1100.0], [67.8, 1101.0], [67.9, 1102.0], [68.0, 1102.0], [68.1, 1103.0], [68.2, 1104.0], [68.3, 1107.0], [68.4, 1109.0], [68.5, 1110.0], [68.6, 1114.0], [68.7, 1116.0], [68.8, 1118.0], [68.9, 1118.0], [69.0, 1121.0], [69.1, 1122.0], [69.2, 1123.0], [69.3, 1126.0], [69.4, 1132.0], [69.5, 1133.0], [69.6, 1137.0], [69.7, 1154.0], [69.8, 1169.0], [69.9, 1173.0], [70.0, 1173.0], [70.1, 1174.0], [70.2, 1179.0], [70.3, 1182.0], [70.4, 1185.0], [70.5, 1188.0], [70.6, 1191.0], [70.7, 1197.0], [70.8, 1197.0], [70.9, 1197.0], [71.0, 1199.0], [71.1, 1202.0], [71.2, 1205.0], [71.3, 1206.0], [71.4, 1207.0], [71.5, 1209.0], [71.6, 1219.0], [71.7, 1224.0], [71.8, 1225.0], [71.9, 1226.0], [72.0, 1227.0], [72.1, 1232.0], [72.2, 1245.0], [72.3, 1253.0], [72.4, 1257.0], [72.5, 1264.0], [72.6, 1269.0], [72.7, 1273.0], [72.8, 1277.0], [72.9, 1281.0], [73.0, 1283.0], [73.1, 1286.0], [73.2, 1288.0], [73.3, 1291.0], [73.4, 1292.0], [73.5, 1295.0], [73.6, 1298.0], [73.7, 1303.0], [73.8, 1308.0], [73.9, 1314.0], [74.0, 1314.0], [74.1, 1334.0], [74.2, 1350.0], [74.3, 1360.0], [74.4, 1366.0], [74.5, 1371.0], [74.6, 1379.0], [74.7, 1384.0], [74.8, 1398.0], [74.9, 1401.0], [75.0, 1403.0], [75.1, 1412.0], [75.2, 1433.0], [75.3, 1440.0], [75.4, 1450.0], [75.5, 1458.0], [75.6, 1475.0], [75.7, 1479.0], [75.8, 1485.0], [75.9, 1487.0], [76.0, 1488.0], [76.1, 1490.0], [76.2, 1499.0], [76.3, 1503.0], [76.4, 1519.0], [76.5, 1529.0], [76.6, 1545.0], [76.7, 1550.0], [76.8, 1577.0], [76.9, 1585.0], [77.0, 1589.0], [77.1, 1600.0], [77.2, 1615.0], [77.3, 1629.0], [77.4, 1648.0], [77.5, 1650.0], [77.6, 1695.0], [77.7, 1700.0], [77.8, 1706.0], [77.9, 1730.0], [78.0, 1733.0], [78.1, 1743.0], [78.2, 1747.0], [78.3, 1752.0], [78.4, 1764.0], [78.5, 1769.0], [78.6, 1781.0], [78.7, 1788.0], [78.8, 1794.0], [78.9, 1801.0], [79.0, 1809.0], [79.1, 1821.0], [79.2, 1821.0], [79.3, 1843.0], [79.4, 1883.0], [79.5, 1887.0], [79.6, 1889.0], [79.7, 1892.0], [79.8, 1905.0], [79.9, 1909.0], [80.0, 1910.0], [80.1, 1916.0], [80.2, 1922.0], [80.3, 1934.0], [80.4, 1943.0], [80.5, 1943.0], [80.6, 1960.0], [80.7, 1972.0], [80.8, 1988.0], [80.9, 1993.0], [81.0, 1994.0], [81.1, 2003.0], [81.2, 2012.0], [81.3, 2013.0], [81.4, 2040.0], [81.5, 2052.0], [81.6, 2076.0], [81.7, 2083.0], [81.8, 2095.0], [81.9, 2101.0], [82.0, 2105.0], [82.1, 2106.0], [82.2, 2116.0], [82.3, 2123.0], [82.4, 2132.0], [82.5, 2146.0], [82.6, 2161.0], [82.7, 2173.0], [82.8, 2195.0], [82.9, 2212.0], [83.0, 2220.0], [83.1, 2248.0], [83.2, 2267.0], [83.3, 2275.0], [83.4, 2278.0], [83.5, 2280.0], [83.6, 2289.0], [83.7, 2298.0], [83.8, 2310.0], [83.9, 2323.0], [84.0, 2345.0], [84.1, 2366.0], [84.2, 2394.0], [84.3, 2402.0], [84.4, 2435.0], [84.5, 2436.0], [84.6, 2487.0], [84.7, 2516.0], [84.8, 2518.0], [84.9, 2521.0], [85.0, 2522.0], [85.1, 2527.0], [85.2, 2544.0], [85.3, 2580.0], [85.4, 2587.0], [85.5, 2591.0], [85.6, 2605.0], [85.7, 2608.0], [85.8, 2618.0], [85.9, 2684.0], [86.0, 2684.0], [86.1, 2688.0], [86.2, 2716.0], [86.3, 2752.0], [86.4, 2771.0], [86.5, 2773.0], [86.6, 2786.0], [86.7, 2798.0], [86.8, 2799.0], [86.9, 2801.0], [87.0, 2809.0], [87.1, 2833.0], [87.2, 2842.0], [87.3, 2850.0], [87.4, 2868.0], [87.5, 2875.0], [87.6, 2891.0], [87.7, 2906.0], [87.8, 2917.0], [87.9, 2945.0], [88.0, 2957.0], [88.1, 2984.0], [88.2, 2989.0], [88.3, 2992.0], [88.4, 3018.0], [88.5, 3061.0], [88.6, 3078.0], [88.7, 3093.0], [88.8, 3100.0], [88.9, 3118.0], [89.0, 3118.0], [89.1, 3122.0], [89.2, 3134.0], [89.3, 3157.0], [89.4, 3186.0], [89.5, 3194.0], [89.6, 3216.0], [89.7, 3228.0], [89.8, 3241.0], [89.9, 3258.0], [90.0, 3260.0], [90.1, 3281.0], [90.2, 3302.0], [90.3, 3375.0], [90.4, 3390.0], [90.5, 3393.0], [90.6, 3467.0], [90.7, 3473.0], [90.8, 3477.0], [90.9, 3542.0], [91.0, 3542.0], [91.1, 3548.0], [91.2, 3571.0], [91.3, 3583.0], [91.4, 3588.0], [91.5, 3589.0], [91.6, 3617.0], [91.7, 3632.0], [91.8, 3664.0], [91.9, 3694.0], [92.0, 3700.0], [92.1, 3706.0], [92.2, 3760.0], [92.3, 3762.0], [92.4, 3772.0], [92.5, 3777.0], [92.6, 3803.0], [92.7, 3809.0], [92.8, 3824.0], [92.9, 3878.0], [93.0, 3881.0], [93.1, 3916.0], [93.2, 3928.0], [93.3, 3958.0], [93.4, 4025.0], [93.5, 4029.0], [93.6, 4065.0], [93.7, 4083.0], [93.8, 4098.0], [93.9, 4113.0], [94.0, 4120.0], [94.1, 4146.0], [94.2, 4162.0], [94.3, 4208.0], [94.4, 4237.0], [94.5, 4259.0], [94.6, 4297.0], [94.7, 4308.0], [94.8, 4322.0], [94.9, 4382.0], [95.0, 4399.0], [95.1, 4414.0], [95.2, 4426.0], [95.3, 4468.0], [95.4, 4495.0], [95.5, 4512.0], [95.6, 4625.0], [95.7, 4705.0], [95.8, 4792.0], [95.9, 4880.0], [96.0, 4891.0], [96.1, 4913.0], [96.2, 4923.0], [96.3, 5009.0], [96.4, 5121.0], [96.5, 5123.0], [96.6, 5140.0], [96.7, 5148.0], [96.8, 5229.0], [96.9, 5277.0], [97.0, 5346.0], [97.1, 5369.0], [97.2, 5396.0], [97.3, 5428.0], [97.4, 5462.0], [97.5, 5495.0], [97.6, 5598.0], [97.7, 5708.0], [97.8, 5809.0], [97.9, 5821.0], [98.0, 5844.0], [98.1, 6022.0], [98.2, 6184.0], [98.3, 6433.0], [98.4, 6509.0], [98.5, 6604.0], [98.6, 6700.0], [98.7, 6833.0], [98.8, 6980.0], [98.9, 7323.0], [99.0, 7401.0], [99.1, 7739.0], [99.2, 7895.0], [99.3, 8311.0], [99.4, 8962.0], [99.5, 9024.0], [99.6, 9201.0], [99.7, 9360.0], [99.8, 10107.0], [99.9, 11660.0], [100.0, 11747.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 613.0, "series": [{"data": [[0.0, 613.0], [600.0, 70.0], [700.0, 116.0], [800.0, 86.0], [900.0, 99.0], [1000.0, 70.0], [1100.0, 44.0], [1200.0, 27.0], [1300.0, 16.0], [1400.0, 10.0], [1500.0, 5.0], [100.0, 156.0], [1600.0, 4.0], [1700.0, 1.0], [1800.0, 2.0], [1900.0, 3.0], [2000.0, 3.0], [2100.0, 1.0], [2200.0, 5.0], [2400.0, 6.0], [2500.0, 2.0], [2600.0, 6.0], [2800.0, 3.0], [2700.0, 5.0], [3000.0, 5.0], [3100.0, 3.0], [200.0, 68.0], [3200.0, 1.0], [3400.0, 2.0], [3500.0, 1.0], [3700.0, 1.0], [4200.0, 1.0], [4100.0, 1.0], [300.0, 110.0], [400.0, 157.0], [500.0, 97.0]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[0.0, 297.0], [600.0, 76.0], [700.0, 108.0], [800.0, 92.0], [900.0, 96.0], [1000.0, 82.0], [1100.0, 58.0], [1200.0, 46.0], [1300.0, 16.0], [1400.0, 19.0], [1500.0, 29.0], [1600.0, 21.0], [1700.0, 20.0], [1800.0, 18.0], [1900.0, 23.0], [2000.0, 21.0], [2100.0, 23.0], [2300.0, 12.0], [2200.0, 18.0], [2400.0, 11.0], [2500.0, 10.0], [2600.0, 15.0], [2700.0, 14.0], [2800.0, 13.0], [2900.0, 4.0], [3000.0, 5.0], [3100.0, 7.0], [3200.0, 9.0], [3300.0, 4.0], [3400.0, 6.0], [3500.0, 6.0], [3600.0, 8.0], [3700.0, 3.0], [3800.0, 8.0], [4000.0, 4.0], [4100.0, 3.0], [4200.0, 1.0], [4300.0, 1.0], [4400.0, 5.0], [4700.0, 1.0], [4800.0, 2.0], [4900.0, 2.0], [5200.0, 1.0], [5500.0, 4.0], [5400.0, 1.0], [5900.0, 1.0], [100.0, 125.0], [200.0, 96.0], [300.0, 78.0], [400.0, 139.0], [500.0, 138.0]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[0.0, 174.0], [100.0, 81.0], [200.0, 140.0], [300.0, 67.0], [400.0, 91.0], [500.0, 165.0], [600.0, 94.0], [700.0, 74.0], [800.0, 96.0], [900.0, 85.0], [1000.0, 89.0], [1100.0, 69.0], [1200.0, 42.0], [1300.0, 37.0], [1400.0, 20.0], [1500.0, 32.0], [1600.0, 11.0], [1700.0, 19.0], [1800.0, 11.0], [1900.0, 15.0], [2000.0, 16.0], [2100.0, 22.0], [2300.0, 11.0], [2200.0, 15.0], [2400.0, 8.0], [2500.0, 5.0], [2600.0, 9.0], [2800.0, 9.0], [2700.0, 8.0], [2900.0, 4.0], [3000.0, 6.0], [3100.0, 8.0], [3200.0, 7.0], [3300.0, 6.0], [3400.0, 5.0], [3500.0, 2.0], [3700.0, 3.0], [3600.0, 3.0], [3800.0, 6.0], [3900.0, 2.0], [4000.0, 6.0], [4100.0, 3.0], [4200.0, 2.0], [4400.0, 3.0], [4600.0, 2.0], [4500.0, 2.0], [4700.0, 2.0], [4800.0, 4.0], [4900.0, 3.0], [5000.0, 4.0], [5100.0, 1.0], [5300.0, 1.0], [5200.0, 1.0], [5600.0, 2.0], [5500.0, 3.0], [5700.0, 1.0], [5800.0, 1.0], [6000.0, 1.0], [5900.0, 2.0], [6100.0, 1.0], [6800.0, 2.0], [7600.0, 1.0], [7700.0, 1.0], [8200.0, 1.0], [8400.0, 1.0], [8500.0, 1.0], [8900.0, 2.0], [8800.0, 2.0], [9500.0, 1.0], [9400.0, 1.0], [10300.0, 1.0], [11700.0, 3.0], [11600.0, 3.0], [12000.0, 3.0], [11900.0, 6.0], [11800.0, 8.0], [12100.0, 1.0], [12300.0, 1.0], [12600.0, 4.0], [12500.0, 3.0], [12400.0, 1.0], [12700.0, 1.0], [12800.0, 1.0], [12900.0, 2.0], [13000.0, 2.0], [13200.0, 1.0], [13400.0, 4.0], [13500.0, 2.0], [13600.0, 4.0], [14200.0, 1.0], [14300.0, 3.0], [13900.0, 1.0], [14800.0, 2.0], [14700.0, 1.0], [14500.0, 2.0], [14900.0, 1.0], [15700.0, 3.0], [15800.0, 1.0], [15400.0, 1.0], [15900.0, 2.0], [16300.0, 1.0], [16500.0, 2.0], [16400.0, 3.0], [17100.0, 1.0], [16600.0, 1.0], [17400.0, 1.0], [17900.0, 1.0], [17500.0, 1.0], [17600.0, 1.0], [19100.0, 2.0], [18500.0, 2.0], [19200.0, 1.0], [20400.0, 3.0], [20300.0, 6.0], [20100.0, 5.0], [20200.0, 7.0], [20000.0, 3.0], [21400.0, 1.0], [21100.0, 4.0], [21000.0, 5.0], [20900.0, 3.0], [20800.0, 3.0], [21500.0, 3.0], [21200.0, 2.0], [20500.0, 4.0], [20600.0, 5.0], [20700.0, 2.0], [21300.0, 1.0], [22400.0, 4.0], [21700.0, 7.0], [22200.0, 3.0], [22300.0, 2.0], [22100.0, 4.0], [21800.0, 2.0], [22000.0, 1.0], [21600.0, 1.0], [22800.0, 2.0], [22600.0, 1.0], [23000.0, 1.0], [24200.0, 1.0], [23800.0, 1.0], [25300.0, 1.0], [26600.0, 1.0]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[0.0, 233.0], [600.0, 74.0], [700.0, 86.0], [800.0, 95.0], [900.0, 94.0], [1000.0, 91.0], [1100.0, 60.0], [1200.0, 47.0], [1300.0, 23.0], [1400.0, 24.0], [1500.0, 15.0], [1600.0, 11.0], [1700.0, 21.0], [1800.0, 16.0], [1900.0, 24.0], [2000.0, 14.0], [2100.0, 19.0], [2200.0, 15.0], [2300.0, 10.0], [2400.0, 6.0], [2500.0, 17.0], [2600.0, 10.0], [2800.0, 14.0], [2700.0, 14.0], [2900.0, 12.0], [3000.0, 8.0], [3100.0, 13.0], [3300.0, 7.0], [3200.0, 12.0], [3400.0, 5.0], [3500.0, 12.0], [3600.0, 8.0], [3700.0, 11.0], [3800.0, 9.0], [3900.0, 6.0], [4000.0, 8.0], [4300.0, 7.0], [4200.0, 6.0], [4100.0, 8.0], [4400.0, 8.0], [4500.0, 2.0], [4600.0, 2.0], [4800.0, 4.0], [4700.0, 3.0], [5000.0, 2.0], [5100.0, 6.0], [4900.0, 4.0], [5200.0, 4.0], [5300.0, 5.0], [5400.0, 5.0], [5500.0, 2.0], [5600.0, 1.0], [5800.0, 4.0], [5700.0, 2.0], [5900.0, 1.0], [6100.0, 1.0], [6000.0, 2.0], [6200.0, 1.0], [6600.0, 2.0], [6500.0, 1.0], [6400.0, 2.0], [6800.0, 2.0], [6700.0, 2.0], [6900.0, 1.0], [7000.0, 1.0], [7400.0, 2.0], [7300.0, 1.0], [7800.0, 2.0], [7700.0, 1.0], [8100.0, 1.0], [8300.0, 2.0], [8900.0, 1.0], [9000.0, 1.0], [9200.0, 1.0], [9100.0, 1.0], [9300.0, 2.0], [9400.0, 1.0], [10100.0, 1.0], [10400.0, 1.0], [11700.0, 1.0], [11600.0, 1.0], [100.0, 120.0], [200.0, 94.0], [300.0, 68.0], [400.0, 126.0], [500.0, 137.0]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 26600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 50.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3012.0, "series": [{"data": [[0.0, 3012.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 2843.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1295.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 50.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 22.2259786476868, "minX": 1.64670336E12, "maxY": 73.03512484130353, "series": [{"data": [[1.64670342E12, 73.03512484130353], [1.64670336E12, 36.98305722891572], [1.64670354E12, 22.2259786476868], [1.64670348E12, 56.295861642989564]], "isOverall": false, "label": "API_gateway tests", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64670354E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 7.6, "minX": 1.0, "maxY": 15147.552380952378, "series": [{"data": [[2.0, 8.374999999999998], [3.0, 12.6], [4.0, 17.999999999999996], [5.0, 45.375], [6.0, 120.0909090909091], [7.0, 47.1111111111111], [8.0, 57.99999999999999], [9.0, 98.83333333333334], [10.0, 80.08333333333333], [11.0, 126.50000000000001], [12.0, 62.73333333333333], [13.0, 280.55555555555554], [14.0, 96.33333333333333], [15.0, 143.60000000000002], [16.0, 127.19999999999999], [17.0, 198.60000000000002], [18.0, 227.5], [19.0, 384.66666666666663], [20.0, 113.38888888888889], [21.0, 119.56521739130436], [22.0, 169.39130434782606], [23.0, 193.88235294117646], [24.0, 148.48000000000002], [25.0, 342.0], [26.0, 295.3], [27.0, 460.49999999999994], [28.0, 291.64705882352933], [29.0, 480.25], [30.0, 308.2857142857143], [31.0, 423.9], [32.0, 371.2857142857143], [33.0, 341.8], [34.0, 262.4583333333333], [35.0, 279.31578947368416], [36.0, 371.44444444444446], [37.0, 484.625], [38.0, 340.0], [39.0, 264.16], [40.0, 361.9230769230769], [41.0, 185.80645161290326], [42.0, 288.66666666666663], [43.0, 442.89473684210526], [44.0, 482.75], [45.0, 291.5454545454546], [46.0, 455.33333333333337], [47.0, 314.27586206896547], [48.0, 466.6363636363636], [49.0, 520.2], [50.0, 387.0], [51.0, 449.44444444444446], [52.0, 500.06666666666666], [53.0, 461.6904761904763], [54.0, 492.25], [55.0, 226.46875000000003], [56.0, 728.1538461538462], [57.0, 384.05263157894734], [58.0, 553.1875], [59.0, 829.2857142857144], [60.0, 575.4444444444445], [61.0, 559.9166666666666], [62.0, 578.5714285714287], [63.0, 543.9166666666666], [64.0, 725.2586206896553], [65.0, 407.48275862068965], [66.0, 253.18181818181824], [67.0, 802.5641025641027], [68.0, 839.109090909091], [69.0, 699.9230769230765], [70.0, 982.9200000000002], [71.0, 548.7538461538463], [72.0, 634.9545454545456], [73.0, 328.5409836065571], [74.0, 460.26666666666665], [75.0, 160.70212765957444], [76.0, 724.8399999999999], [77.0, 1008.6739130434783], [78.0, 1140.3333333333333], [79.0, 1043.6562500000005], [1.0, 7.6]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[52.158888888888946, 478.07277777777716]], "isOverall": false, "label": "getAllInfo-Aggregated", "isController": false}, {"data": [[2.0, 20.555555555555557], [3.0, 29.75], [4.0, 67.0], [5.0, 82.375], [6.0, 88.375], [7.0, 241.6], [8.0, 100.5], [9.0, 179.0], [10.0, 189.22222222222223], [11.0, 191.28571428571428], [12.0, 327.91666666666663], [13.0, 186.6], [14.0, 391.41666666666663], [15.0, 365.2352941176471], [16.0, 167.36363636363637], [17.0, 629.875], [18.0, 238.14285714285717], [19.0, 440.8888888888889], [20.0, 492.5199999999999], [21.0, 440.35], [22.0, 278.3333333333333], [23.0, 593.9444444444445], [24.0, 363.6363636363636], [25.0, 553.0], [26.0, 471.61538461538464], [27.0, 713.0909090909091], [28.0, 600.5], [29.0, 498.8666666666666], [30.0, 336.5], [31.0, 699.3333333333334], [32.0, 417.57142857142856], [33.0, 818.7058823529412], [34.0, 555.0476190476189], [35.0, 312.20000000000005], [36.0, 542.8461538461538], [37.0, 839.125], [38.0, 562.5454545454545], [39.0, 1081.030303030303], [40.0, 609.7692307692307], [41.0, 354.37254901960785], [42.0, 456.5], [43.0, 473.27272727272725], [44.0, 471.1818181818182], [45.0, 422.0625], [46.0, 477.91666666666663], [47.0, 574.2962962962963], [48.0, 621.7500000000001], [49.0, 708.2499999999999], [50.0, 785.842105263158], [51.0, 686.2222222222222], [52.0, 1075.05], [53.0, 756.1666666666666], [54.0, 605.2727272727273], [55.0, 1329.2499999999998], [56.0, 925.7272727272727], [57.0, 1014.1470588235292], [58.0, 854.8666666666667], [59.0, 1603.2941176470592], [60.0, 1098.4615384615386], [61.0, 1028.125], [62.0, 1077.2380952380954], [63.0, 1012.0833333333333], [64.0, 1787.6296296296296], [65.0, 1869.5208333333335], [66.0, 1122.5151515151517], [67.0, 1115.5416666666665], [68.0, 1642.0476190476186], [69.0, 1243.923076923077], [70.0, 598.5714285714286], [71.0, 1438.629213483146], [72.0, 1216.5178571428573], [73.0, 1580.6567164179105], [74.0, 883.3846153846154], [75.0, 306.64], [76.0, 774.0], [77.0, 1067.066666666667], [78.0, 1148.285714285714], [79.0, 1098.0370370370374], [1.0, 13.75]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[52.03777777777769, 905.4011111111115]], "isOverall": false, "label": "getAllStatus-Aggregated", "isController": false}, {"data": [[2.0, 116.33333333333334], [3.0, 129.6], [4.0, 141.57142857142858], [5.0, 160.875], [6.0, 185.5], [7.0, 139.125], [8.0, 107.0], [9.0, 243.37499999999997], [10.0, 351.45454545454544], [11.0, 209.42857142857142], [12.0, 181.15384615384613], [13.0, 263.0], [14.0, 196.6], [15.0, 443.43749999999994], [16.0, 194.85714285714283], [17.0, 431.19999999999993], [18.0, 199.95833333333331], [19.0, 273.3], [20.0, 478.05263157894734], [21.0, 394.77272727272737], [22.0, 253.43478260869566], [23.0, 459.78571428571433], [24.0, 489.1923076923075], [25.0, 540.0833333333333], [26.0, 1102.857142857143], [27.0, 1192.875], [28.0, 793.8333333333334], [29.0, 1117.7857142857142], [30.0, 641.2], [31.0, 497.42857142857144], [32.0, 478.875], [33.0, 833.1111111111111], [34.0, 1185.4761904761904], [35.0, 721.95], [36.0, 426.5], [37.0, 559.6249999999999], [38.0, 610.9], [39.0, 804.8800000000001], [40.0, 593.4285714285713], [41.0, 11201.999999999998], [42.0, 424.7692307692308], [43.0, 529.0952380952382], [44.0, 517.9], [45.0, 391.1764705882353], [46.0, 480.9230769230769], [47.0, 537.3076923076923], [48.0, 786.8888888888888], [49.0, 662.9230769230769], [50.0, 569.5714285714287], [51.0, 646.6923076923077], [52.0, 636.4444444444445], [53.0, 649.1282051282052], [54.0, 769.8571428571429], [55.0, 1073.545454545454], [56.0, 999.0], [57.0, 1315.742857142857], [58.0, 1032.0416666666667], [59.0, 1894.6279069767445], [60.0, 1328.5], [61.0, 1140.230769230769], [62.0, 1210.0666666666666], [63.0, 1361.909090909091], [64.0, 1875.428571428571], [65.0, 2049.0], [66.0, 8903.108108108107], [67.0, 10368.357142857143], [68.0, 2204.3939393939395], [69.0, 1207.4729729729725], [70.0, 609.9999999999999], [71.0, 1491.8082191780818], [72.0, 1557.333333333333], [73.0, 1404.813559322034], [74.0, 901.1538461538461], [75.0, 15147.552380952378], [76.0, 3166.272727272727], [77.0, 1080.1000000000001], [78.0, 1206.1818181818185], [79.0, 1171.2068965517242], [1.0, 1410.5]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[51.94055555555562, 2660.5549999999994]], "isOverall": false, "label": "postNewRequest-Aggregated", "isController": false}, {"data": [[2.0, 18.500000000000004], [3.0, 363.16666666666663], [4.0, 58.666666666666664], [5.0, 565.0000000000001], [6.0, 546.4444444444445], [7.0, 834.0], [8.0, 229.22222222222223], [9.0, 846.2857142857143], [10.0, 401.40000000000003], [11.0, 404.625], [12.0, 777.1428571428572], [13.0, 451.44444444444446], [14.0, 1028.375], [15.0, 494.43750000000006], [16.0, 391.81818181818176], [17.0, 389.44444444444446], [18.0, 792.7619047619048], [19.0, 511.49999999999994], [20.0, 1057.28], [21.0, 1188.571428571429], [22.0, 238.23809523809518], [23.0, 654.6666666666666], [24.0, 1268.2608695652175], [25.0, 791.25], [26.0, 1592.375], [27.0, 1993.9285714285713], [28.0, 1588.9999999999998], [29.0, 1488.6923076923076], [30.0, 309.1], [31.0, 406.2857142857143], [32.0, 821.5], [33.0, 1395.1333333333334], [34.0, 1370.8260869565215], [35.0, 1278.8095238095236], [36.0, 601.0], [37.0, 737.8333333333334], [38.0, 1195.0], [39.0, 814.2857142857143], [40.0, 629.2307692307693], [41.0, 371.26666666666677], [42.0, 568.1111111111111], [43.0, 506.89473684210526], [44.0, 528.3333333333333], [45.0, 1002.4285714285713], [46.0, 507.00000000000006], [47.0, 949.6296296296298], [48.0, 1478.125], [49.0, 757.7272727272727], [50.0, 635.2142857142856], [51.0, 856.8571428571429], [52.0, 942.2857142857142], [53.0, 945.8780487804877], [54.0, 461.54545454545456], [55.0, 2436.0781249999995], [56.0, 1335.9999999999998], [57.0, 1647.7368421052631], [58.0, 749.0588235294118], [59.0, 2286.118644067797], [60.0, 1048.5], [61.0, 975.8749999999999], [62.0, 1558.7058823529412], [63.0, 1296.6666666666667], [64.0, 2412.0333333333324], [65.0, 2584.275862068967], [66.0, 964.75], [67.0, 964.5925925925927], [68.0, 1837.5806451612902], [69.0, 1852.4761904761904], [70.0, 1126.9473684210525], [71.0, 1782.8750000000002], [72.0, 1614.4285714285713], [73.0, 1737.1746031746036], [74.0, 786.0000000000001], [75.0, 351.4399999999999], [76.0, 805.6551724137931], [77.0, 1054.8791208791208], [78.0, 1190.782608695652], [79.0, 1109.7600000000002], [1.0, 429.6]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}, {"data": [[51.886666666666756, 1250.181666666669]], "isOverall": false, "label": "getDataOfRequestID-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 79.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2226.35, "minX": 1.64670336E12, "maxY": 7314275.266666667, "series": [{"data": [[1.64670342E12, 3484493.8666666667], [1.64670336E12, 84147.7], [1.64670354E12, 5364223.9], [1.64670348E12, 7314275.266666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64670342E12, 9202.0], [1.64670336E12, 10393.166666666666], [1.64670354E12, 2226.35], [1.64670348E12, 6438.483333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64670354E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 195.48799999999991, "minX": 1.64670336E12, "maxY": 4875.391608391609, "series": [{"data": [[1.64670342E12, 700.3556280587286], [1.64670336E12, 405.0086705202314], [1.64670354E12, 195.48799999999991], [1.64670348E12, 341.92162162162174]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64670342E12, 1173.9760273972609], [1.64670336E12, 447.91590214067315], [1.64670354E12, 736.8142857142856], [1.64670348E12, 1298.6469194312801]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64670342E12, 3950.9416961130787], [1.64670336E12, 493.654761904762], [1.64670354E12, 973.5864661654136], [1.64670348E12, 4875.391608391609]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64670342E12, 1397.3399999999992], [1.64670336E12, 445.2836990595612], [1.64670354E12, 2034.1280487804886], [1.64670348E12, 1995.5653266331665]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64670354E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 195.376, "minX": 1.64670336E12, "maxY": 4875.312354312353, "series": [{"data": [[1.64670342E12, 700.2577487765084], [1.64670336E12, 404.9277456647399], [1.64670354E12, 195.376], [1.64670348E12, 341.8270270270274]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64670342E12, 1173.9143835616424], [1.64670336E12, 447.8639143730889], [1.64670354E12, 736.6999999999999], [1.64670348E12, 1298.5876777251171]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64670342E12, 3950.8604240282693], [1.64670336E12, 493.5699404761905], [1.64670354E12, 973.503759398496], [1.64670348E12, 4875.312354312353]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64670342E12, 1395.9966666666662], [1.64670336E12, 445.1959247648903], [1.64670354E12, 2030.439024390243], [1.64670348E12, 1992.5226130653261]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64670354E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.2285714285714286, "minX": 1.64670336E12, "maxY": 0.5291375291375292, "series": [{"data": [[1.64670342E12, 0.39967373572593834], [1.64670336E12, 0.4566473988439307], [1.64670354E12, 0.3200000000000002], [1.64670348E12, 0.3837837837837837]], "isOverall": false, "label": "getAllInfo", "isController": false}, {"data": [[1.64670342E12, 0.3510273972602742], [1.64670336E12, 0.4541284403669726], [1.64670354E12, 0.2285714285714286], [1.64670348E12, 0.3436018957345968]], "isOverall": false, "label": "getAllStatus", "isController": false}, {"data": [[1.64670342E12, 0.4257950530035337], [1.64670336E12, 0.4702380952380954], [1.64670354E12, 0.31578947368421056], [1.64670348E12, 0.5291375291375292]], "isOverall": false, "label": "postNewRequest", "isController": false}, {"data": [[1.64670342E12, 0.4466666666666669], [1.64670336E12, 0.4482758620689656], [1.64670354E12, 0.2987804878048781], [1.64670348E12, 0.36683417085427156]], "isOverall": false, "label": "getDataOfRequestID", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64670354E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.64670336E12, "maxY": 26647.0, "series": [{"data": [[1.64670342E12, 22423.0], [1.64670336E12, 988.0], [1.64670354E12, 11660.0], [1.64670348E12, 26647.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64670342E12, 2985.2], [1.64670336E12, 789.3000000000002], [1.64670354E12, 3211.5], [1.64670348E12, 5143.200000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64670342E12, 21517.440000000002], [1.64670336E12, 894.0], [1.64670354E12, 7626.159999999984], [1.64670348E12, 20075.659999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64670342E12, 4207.199999999999], [1.64670336E12, 815.0], [1.64670354E12, 4143.099999999999], [1.64670348E12, 12000.799999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64670342E12, 1.0], [1.64670336E12, 2.0], [1.64670354E12, 1.0], [1.64670348E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64670342E12, 1009.0], [1.64670336E12, 477.0], [1.64670354E12, 470.5], [1.64670348E12, 928.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64670354E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7.0, "minX": 3.0, "maxY": 11636.0, "series": [{"data": [[3.0, 16.0], [5.0, 1514.0], [6.0, 299.0], [7.0, 17.0], [8.0, 8.0], [9.0, 22.5], [10.0, 1098.0], [13.0, 142.0], [14.0, 881.0], [15.0, 195.5], [16.0, 3754.5], [17.0, 186.0], [18.0, 1166.0], [19.0, 372.0], [20.0, 814.0], [21.0, 1112.0], [22.0, 642.0], [23.0, 1124.0], [25.0, 23.5], [26.0, 1447.0], [27.0, 1180.5], [28.0, 611.0], [29.0, 998.0], [30.0, 915.0], [33.0, 524.5], [32.0, 25.5], [34.0, 575.5], [36.0, 712.0], [37.0, 1865.0], [39.0, 725.0], [38.0, 1217.0], [40.0, 1307.5], [41.0, 916.0], [42.0, 1198.5], [43.0, 1040.0], [45.0, 1478.5], [44.0, 3045.0], [49.0, 1083.5], [48.0, 921.5], [51.0, 1419.0], [50.0, 670.5], [53.0, 997.5], [54.0, 137.0], [56.0, 168.0], [57.0, 1116.0], [58.0, 20.0], [59.0, 414.5], [61.0, 1186.0], [60.0, 1328.5], [63.0, 1110.5], [62.0, 1212.0], [67.0, 807.0], [66.0, 1002.0], [69.0, 917.5], [71.0, 975.0], [73.0, 94.0], [75.0, 900.0], [74.0, 505.0], [72.0, 814.0], [79.0, 703.0], [77.0, 487.0], [76.0, 525.5], [80.0, 408.0], [82.0, 495.5], [85.0, 680.0], [84.0, 837.0], [86.0, 732.0], [91.0, 180.0], [89.0, 385.5], [93.0, 533.0], [92.0, 508.0], [98.0, 216.5], [99.0, 213.0], [96.0, 532.0], [116.0, 594.0], [129.0, 11636.0], [182.0, 246.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[17.0, 11.0], [36.0, 7.0], [80.0, 45.5], [44.0, 1316.0], [26.0, 8.0], [62.0, 21.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 182.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 6.0, "minX": 3.0, "maxY": 11636.0, "series": [{"data": [[3.0, 16.0], [5.0, 1514.0], [6.0, 299.0], [7.0, 16.0], [8.0, 8.0], [9.0, 22.5], [10.0, 1098.0], [13.0, 142.0], [14.0, 881.0], [15.0, 195.5], [16.0, 3754.5], [17.0, 185.0], [18.0, 1165.5], [19.0, 372.0], [20.0, 814.0], [21.0, 1112.0], [22.0, 642.0], [23.0, 1124.0], [25.0, 23.5], [26.0, 1447.0], [27.0, 1180.5], [28.0, 611.0], [29.0, 998.0], [30.0, 915.0], [33.0, 524.5], [32.0, 25.5], [34.0, 575.5], [36.0, 712.0], [37.0, 1865.0], [39.0, 725.0], [38.0, 1217.0], [40.0, 1307.5], [41.0, 916.0], [42.0, 1198.5], [43.0, 1040.0], [45.0, 1478.5], [44.0, 3045.0], [49.0, 1083.5], [48.0, 921.5], [51.0, 1419.0], [50.0, 670.5], [53.0, 997.5], [54.0, 136.5], [56.0, 167.5], [57.0, 1116.0], [58.0, 19.5], [59.0, 414.5], [61.0, 1186.0], [60.0, 1328.5], [63.0, 1110.5], [62.0, 1212.0], [67.0, 807.0], [66.0, 1002.0], [69.0, 917.5], [71.0, 975.0], [73.0, 94.0], [75.0, 900.0], [74.0, 505.0], [72.0, 814.0], [79.0, 703.0], [77.0, 487.0], [76.0, 525.5], [80.0, 408.0], [82.0, 495.5], [85.0, 680.0], [84.0, 837.0], [86.0, 732.0], [91.0, 180.0], [89.0, 385.0], [93.0, 533.0], [92.0, 508.0], [98.0, 216.5], [99.0, 213.0], [96.0, 532.0], [116.0, 594.0], [129.0, 11636.0], [182.0, 245.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[17.0, 11.0], [36.0, 6.0], [80.0, 45.0], [44.0, 1316.0], [26.0, 8.0], [62.0, 21.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 182.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 8.716666666666667, "minX": 1.64670336E12, "maxY": 45.416666666666664, "series": [{"data": [[1.64670342E12, 39.35], [1.64670336E12, 45.416666666666664], [1.64670354E12, 8.716666666666667], [1.64670348E12, 26.516666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64670354E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.64670336E12, "maxY": 44.266666666666666, "series": [{"data": [[1.64670342E12, 39.38333333333333], [1.64670336E12, 44.266666666666666], [1.64670354E12, 9.1], [1.64670348E12, 26.416666666666668]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64670354E12, 0.26666666666666666], [1.64670348E12, 0.5666666666666667]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64670354E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.64670336E12, "maxY": 11.533333333333333, "series": [{"data": [[1.64670342E12, 9.433333333333334], [1.64670336E12, 11.2], [1.64670354E12, 2.1166666666666667], [1.64670348E12, 6.866666666666666]], "isOverall": false, "label": "postNewRequest-success", "isController": false}, {"data": [[1.64670354E12, 0.1], [1.64670348E12, 0.2833333333333333]], "isOverall": false, "label": "postNewRequest-failure", "isController": false}, {"data": [[1.64670354E12, 0.06666666666666667], [1.64670348E12, 0.15]], "isOverall": false, "label": "getAllStatus-failure", "isController": false}, {"data": [[1.64670342E12, 10.216666666666667], [1.64670336E12, 11.533333333333333], [1.64670354E12, 2.0833333333333335], [1.64670348E12, 6.166666666666667]], "isOverall": false, "label": "getAllInfo-success", "isController": false}, {"data": [[1.64670342E12, 10.0], [1.64670336E12, 10.633333333333333], [1.64670354E12, 2.6333333333333333], [1.64670348E12, 6.5]], "isOverall": false, "label": "getDataOfRequestID-success", "isController": false}, {"data": [[1.64670354E12, 0.1], [1.64670348E12, 0.13333333333333333]], "isOverall": false, "label": "getDataOfRequestID-failure", "isController": false}, {"data": [[1.64670342E12, 9.733333333333333], [1.64670336E12, 10.9], [1.64670354E12, 2.2666666666666666], [1.64670348E12, 6.883333333333334]], "isOverall": false, "label": "getAllStatus-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64670354E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.64670336E12, "maxY": 44.266666666666666, "series": [{"data": [[1.64670342E12, 39.38333333333333], [1.64670336E12, 44.266666666666666], [1.64670354E12, 9.1], [1.64670348E12, 26.416666666666668]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.64670354E12, 0.26666666666666666], [1.64670348E12, 0.5666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64670354E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

