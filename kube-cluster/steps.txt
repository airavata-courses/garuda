# Create initial.yml and paste the following code in it 
- hosts: all
  become: yes
  tasks:
    - name: create the 'garuda' user
      user: name=garuda append=yes state=present createhome=yes shell=/bin/bash

    - name: allow 'garuda' to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        line: 'garuda ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: set up authorized keys for the garuda user
      authorized_key: user=garuda key="{{item}}"
      with_file:
        - /home/tanmay/Workspace/jetstream/ssh_login/key.pub


# Create kube-dependencies.yml and paste the following code in it 
- hosts: all
  become: yes
  tasks:
   - name: create Docker config directory
     file: path=/etc/docker state=directory

   - name: changing Docker to systemd driver
     copy:
      dest: "/etc/docker/daemon.json"
      content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"]
        }

   - name: install Docker
     apt:
       name: docker.io
       state: present
       update_cache: true

   - name: install APT Transport HTTPS
     apt:
       name: apt-transport-https
       state: present

   - name: add Kubernetes apt-key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: add Kubernetes' APT repository
     apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'

   - name: install kubelet
     apt:
       name: kubelet=1.23.5-00
       state: present
       update_cache: true

   - name: install kubeadm
     apt:
       name: kubeadm=1.23.5-00
       state: present

- hosts: control_plane
  become: yes
  tasks:
   - name: install kubectl
     apt:
       name: kubectl=1.23.5-00
       state: present
       force: yes

# Create control-plane.yml and paste the following code in it 
- hosts: control_plane
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.0.35.0/24 >> cluster_initialized.txt
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: create .kube directory
      become: yes
      become_user: garuda
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/garuda/.kube/config
        remote_src: yes
        owner: garuda

    - name: install Pod network
      become: yes
      become_user: garuda
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt


# Create workers.yml and paste the following code in it 
- hosts: control_plane
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"


- hosts: workers
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars['control1'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt

# Run ansible on the 4 playbooks 
cd ../ansible

ansible-playbook -i hosts ../kube-cluster/initial.yml
ansible-playbook -i hosts ../kube-cluster/kube-dependencies.yml
ansible-playbook -i hosts ../kube-cluster/control-plane.yml
ansible-playbook -i hosts ../kube-cluster/workers.yml
